# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/font-manager
pkgincludedir = $(includedir)/font-manager
pkglibdir = $(libdir)/font-manager
pkglibexecdir = $(libexecdir)/font-manager
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = armv7l-unknown-linux-gnueabihf
host_triplet = armv7l-unknown-linux-gnueabihf
bin_PROGRAMS = font-manager$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/intltool.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = ./font_manager-Application.$(OBJEXT) \
	./Common/font_manager-About.$(OBJEXT) \
	./Common/font_manager-ArchiveManager.$(OBJEXT) \
	./Common/font_manager-Collections.$(OBJEXT) \
	./Common/font_manager-Constants.$(OBJEXT) \
	./Common/font_manager-Database.$(OBJEXT) \
	./Common/font_manager-FontInfo.$(OBJEXT) \
	./Common/font_manager-Library.$(OBJEXT) \
	./Common/font_manager-Logger.$(OBJEXT) \
	./Common/font_manager-Main.$(OBJEXT) \
	./Common/font_manager-Utils.$(OBJEXT) \
	./Filters/font_manager-Category.$(OBJEXT) \
	./Filters/font_manager-Collection.$(OBJEXT) \
	./Filters/font_manager-Disabled.$(OBJEXT) \
	./Filters/font_manager-Filter.$(OBJEXT) \
	./Filters/font_manager-SearchResult.$(OBJEXT) \
	./Filters/font_manager-Unsorted.$(OBJEXT) \
	./FontConfig/font_manager-Accept.$(OBJEXT) \
	./FontConfig/font_manager-DefaultProperties.$(OBJEXT) \
	./FontConfig/font_manager-Directories.$(OBJEXT) \
	./FontConfig/font_manager-DisplayProperties.$(OBJEXT) \
	./FontConfig/font_manager-Enums.$(OBJEXT) \
	./FontConfig/font_manager-Families.$(OBJEXT) \
	./FontConfig/font_manager-Family.$(OBJEXT) \
	./FontConfig/font_manager-FontConfig.$(OBJEXT) \
	./FontConfig/font_manager-FontProperties.$(OBJEXT) \
	./FontConfig/font_manager-FontSource.$(OBJEXT) \
	./FontConfig/font_manager-Font.$(OBJEXT) \
	./FontConfig/font_manager-Properties.$(OBJEXT) \
	./FontConfig/font_manager-Reject.$(OBJEXT) \
	./FontConfig/font_manager-Selections.$(OBJEXT) \
	./FontConfig/font_manager-Sources.$(OBJEXT) \
	./FontConfig/font_manager-XmlWriter.$(OBJEXT) \
	./Glue/font_manager-Glue.$(OBJEXT) \
	./Json/font_manager-Cacheable.$(OBJEXT) \
	./Json/font_manager-JsonWriter.$(OBJEXT) \
	./Models/font_manager-CategoryModel.$(OBJEXT) \
	./Models/font_manager-CollectionModel.$(OBJEXT) \
	./Models/font_manager-FontModel.$(OBJEXT) \
	./Models/font_manager-UserFontModel.$(OBJEXT) \
	./UX/CharacterMap/font_manager-CharacterDetails.$(OBJEXT) \
	./UX/CharacterMap/font_manager-CharacterMapPane.$(OBJEXT) \
	./UX/CharacterMap/font_manager-CharacterMapSideBar.$(OBJEXT) \
	./UX/CharacterMap/font_manager-CharacterMap.$(OBJEXT) \
	./UX/CharacterMap/font_manager-CharacterTable.$(OBJEXT) \
	./UX/Controls/font_manager-BaseControls.$(OBJEXT) \
	./UX/Controls/font_manager-CollectionControls.$(OBJEXT) \
	./UX/Controls/font_manager-CompareControls.$(OBJEXT) \
	./UX/Controls/font_manager-FontListControls.$(OBJEXT) \
	./UX/Controls/font_manager-PreviewControls.$(OBJEXT) \
	./UX/Controls/font_manager-TitleBar.$(OBJEXT) \
	./UX/Dialogs/font_manager-FileSelector.$(OBJEXT) \
	./UX/Dialogs/font_manager-Migration.$(OBJEXT) \
	./UX/Dialogs/font_manager-NotImplemented.$(OBJEXT) \
	./UX/FontConfig/font_manager-DisplayPropertiesPane.$(OBJEXT) \
	./UX/FontConfig/font_manager-FontPropertiesPane.$(OBJEXT) \
	./UX/FontConfig/font_manager-PropertiesEditor.$(OBJEXT) \
	./UX/FontConfig/font_manager-SubpixelGeometry.$(OBJEXT) \
	./UX/font_manager-MainWindow.$(OBJEXT) \
	./UX/Sidebar/font_manager-MainSideBar.$(OBJEXT) \
	./UX/Sidebar/font_manager-SideBar.$(OBJEXT) \
	./UX/font_manager-State.$(OBJEXT) \
	./UX/Trees/font_manager-CategoryTree.$(OBJEXT) \
	./UX/Trees/font_manager-CollectionTree.$(OBJEXT) \
	./UX/Trees/font_manager-FontListTree.$(OBJEXT) \
	./UX/Trees/font_manager-UserFontTree.$(OBJEXT) \
	./UX/Trees/font_manager-UserSourceList.$(OBJEXT) \
	./UX/Utils/font_manager-Color.$(OBJEXT) \
	./UX/Utils/font_manager-Utils.$(OBJEXT) \
	./UX/font_manager-Viewer.$(OBJEXT) \
	./UX/Views/font_manager-Browse.$(OBJEXT) \
	./UX/Views/font_manager-Compare.$(OBJEXT) \
	./UX/Views/font_manager-FontPreview.$(OBJEXT) \
	./UX/Views/font_manager-Metadata.$(OBJEXT) \
	./UX/Widgets/font_manager-ActivePreview.$(OBJEXT) \
	./UX/Widgets/font_manager-AdjustablePreview.$(OBJEXT) \
	./UX/Widgets/font_manager-CellRendererPill.$(OBJEXT) \
	./UX/Widgets/font_manager-FontScale.$(OBJEXT) \
	./UX/Widgets/font_manager-LabeledSpinButton.$(OBJEXT) \
	./UX/Widgets/font_manager-LabeledSwitch.$(OBJEXT) \
	./UX/Widgets/font_manager-OptionScale.$(OBJEXT) \
	./UX/Widgets/font_manager-ReactiveLabel.$(OBJEXT) \
	./UX/Widgets/font_manager-TextPreview.$(OBJEXT) \
	./UX/Widgets/font_manager-TextViews.$(OBJEXT) \
	./UX/Widgets/font_manager-ThinPaned.$(OBJEXT) \
	./UX/Widgets/font_manager-TreeViews.$(OBJEXT) \
	./UX/Widgets/font_manager-WaterfallPreview.$(OBJEXT)
am__objects_2 = font_manager-FontManagerGResource.$(OBJEXT)
am_font_manager_OBJECTS = $(am__objects_1) \
	Glue/font_manager-_Glue_.$(OBJEXT) $(am__objects_2)
font_manager_OBJECTS = $(am_font_manager_OBJECTS)
am__DEPENDENCIES_1 =
font_manager_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
VALACOMPILE = $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS)
LTVALACOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(VALAC) $(AM_VALAFLAGS) \
	$(VALAFLAGS)
AM_V_VALAC = $(am__v_VALAC_$(V))
am__v_VALAC_ = $(am__v_VALAC_$(AM_DEFAULT_VERBOSITY))
am__v_VALAC_0 = @echo "  VALAC   " $@;
am__v_VALAC_1 = 
SOURCES = $(font_manager_SOURCES)
DIST_SOURCES = $(font_manager_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Flags.mk $(srcdir)/Makefile.in \
	$(srcdir)/ValaSources.mk $(srcdir)/font_manager_vala.stamp \
	$(top_srcdir)/depcomp ./Application.c ./Common/About.c \
	./Common/ArchiveManager.c ./Common/Collections.c \
	./Common/Constants.c ./Common/Database.c ./Common/FontInfo.c \
	./Common/Library.c ./Common/Logger.c ./Common/Main.c \
	./Common/Utils.c ./Filters/Category.c ./Filters/Collection.c \
	./Filters/Disabled.c ./Filters/Filter.c \
	./Filters/SearchResult.c ./Filters/Unsorted.c \
	./FontConfig/Accept.c ./FontConfig/DefaultProperties.c \
	./FontConfig/Directories.c ./FontConfig/DisplayProperties.c \
	./FontConfig/Enums.c ./FontConfig/Families.c \
	./FontConfig/Family.c ./FontConfig/Font.c \
	./FontConfig/FontConfig.c ./FontConfig/FontProperties.c \
	./FontConfig/FontSource.c ./FontConfig/Properties.c \
	./FontConfig/Reject.c ./FontConfig/Selections.c \
	./FontConfig/Sources.c ./FontConfig/XmlWriter.c ./Glue/Glue.c \
	./Json/Cacheable.c ./Json/JsonWriter.c \
	./Models/CategoryModel.c ./Models/CollectionModel.c \
	./Models/FontModel.c ./Models/UserFontModel.c \
	./UX/CharacterMap/CharacterDetails.c \
	./UX/CharacterMap/CharacterMap.c \
	./UX/CharacterMap/CharacterMapPane.c \
	./UX/CharacterMap/CharacterMapSideBar.c \
	./UX/CharacterMap/CharacterTable.c \
	./UX/Controls/BaseControls.c \
	./UX/Controls/CollectionControls.c \
	./UX/Controls/CompareControls.c \
	./UX/Controls/FontListControls.c \
	./UX/Controls/PreviewControls.c ./UX/Controls/TitleBar.c \
	./UX/Dialogs/FileSelector.c ./UX/Dialogs/Migration.c \
	./UX/Dialogs/NotImplemented.c \
	./UX/FontConfig/DisplayPropertiesPane.c \
	./UX/FontConfig/FontPropertiesPane.c \
	./UX/FontConfig/PropertiesEditor.c \
	./UX/FontConfig/SubpixelGeometry.c ./UX/MainWindow.c \
	./UX/Sidebar/MainSideBar.c ./UX/Sidebar/SideBar.c ./UX/State.c \
	./UX/Trees/CategoryTree.c ./UX/Trees/CollectionTree.c \
	./UX/Trees/FontListTree.c ./UX/Trees/UserFontTree.c \
	./UX/Trees/UserSourceList.c ./UX/Utils/Color.c \
	./UX/Utils/Utils.c ./UX/Viewer.c ./UX/Views/Browse.c \
	./UX/Views/Compare.c ./UX/Views/FontPreview.c \
	./UX/Views/Metadata.c ./UX/Widgets/ActivePreview.c \
	./UX/Widgets/AdjustablePreview.c \
	./UX/Widgets/CellRendererPill.c ./UX/Widgets/FontScale.c \
	./UX/Widgets/LabeledSpinButton.c ./UX/Widgets/LabeledSwitch.c \
	./UX/Widgets/OptionScale.c ./UX/Widgets/ReactiveLabel.c \
	./UX/Widgets/TextPreview.c ./UX/Widgets/TextViews.c \
	./UX/Widgets/ThinPaned.c ./UX/Widgets/TreeViews.c \
	./UX/Widgets/WaterfallPreview.c
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/pi/font-manager-0.7.2/missing aclocal-1.15
ACLOCAL_AMFLAGS = -I  ${ACLOCAL_FLAGS}
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/pi/font-manager-0.7.2/missing autoconf
AUTOHEADER = ${SHELL} /home/pi/font-manager-0.7.2/missing autoheader
AUTOMAKE = ${SHELL} /home/pi/font-manager-0.7.2/missing automake-1.15
AWK = mawk
CAIRO_CFLAGS = -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 
CAIRO_LIBS = -lcairo 
CATALOGS = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DPACKAGE_NAME=\"font-manager\" -DPACKAGE_TARNAME=\"font-manager\" -DPACKAGE_VERSION=\"0.7.2\" -DPACKAGE_STRING=\"font-manager\ 0.7.2\" -DPACKAGE_BUGREPORT=\"https://code.google.com/p/font-manager/issues/list\" -DPACKAGE_URL=\"\" -DPACKAGE=\"font-manager\" -DVERSION=\"0.7.2\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DGETTEXT_PACKAGE=\"font-manager\" -DHAVE_LOCALE_H=1 -DHAVE_LC_MESSAGES=1 -DHAVE_BIND_TEXTDOMAIN_CODESET=1 -DHAVE_GETTEXT=1 -DHAVE_DCGETTEXT=1 -DENABLE_NLS=1
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FONTCONFIG_CFLAGS = -I/usr/include/freetype2 
FONTCONFIG_LIBS = -lfontconfig -lfreetype 
FREETYPE_CFLAGS = -I/usr/include/freetype2 
FREETYPE_LIBS = -lfreetype 
GEE_CFLAGS = -I/usr/include/gee-0.8 -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include 
GEE_LIBS = -lgee-0.8 -lgobject-2.0 -lglib-2.0 
GETTEXT_PACKAGE = font-manager
GIO_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include 
GIO_LIBS = -lgio-2.0 -lgobject-2.0 -lglib-2.0 
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include 
GLIB_COMPILE_SCHEMAS = /usr/lib/arm-linux-gnueabihf/glib-2.0/glib-compile-schemas
GLIB_LIBS = -lglib-2.0 
GMODULE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include 
GMODULE_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0 
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GOBJECT_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include 
GOBJECT_LIBS = -lgobject-2.0 -lglib-2.0 
GREP = /bin/grep
GSETTINGS_DISABLE_SCHEMAS_COMPILE = 
GTK_312_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/arm-linux-gnueabihf/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include 
GTK_312_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
GTK_314_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/arm-linux-gnueabihf/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include 
GTK_314_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
GTK_314_OR_LATER =  -D GTK_314_OR_LATER
GTK_316_CFLAGS = 
GTK_316_LIBS = 
GTK_316_OR_LATER = 
GUCHARMAP_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/arm-linux-gnueabihf/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include -I/usr/include/gucharmap-2.90 
GUCHARMAP_LIBS = -lgucharmap_2_90 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
HAVE_FILE_ROLLER = yes
HELP_DIR = ${datadir}/help
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
ITSTOOL = itstool
JSONGLIB_CFLAGS = -pthread -I/usr/include/json-glib-1.0 -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include 
JSONGLIB_LIBS = -ljson-glib-1.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/pi/font-manager-0.7.2/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NAUTILUS_PYTHON_CFLAGS = 
NAUTILUS_PYTHON_LIBS = 
NEMO_PYTHON_CFLAGS = 
NEMO_PYTHON_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = font-manager
PACKAGE_BUGREPORT = https://code.google.com/p/font-manager/issues/list
PACKAGE_NAME = font-manager
PACKAGE_STRING = font-manager 0.7.2
PACKAGE_TARNAME = font-manager
PACKAGE_URL = 
PACKAGE_VERSION = 0.7.2
PANGOCAIRO_CFLAGS = -pthread -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 
PANGOCAIRO_LIBS = -lpangocairo-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lcairo 
PANGOFT2_CFLAGS = -pthread -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include -I/usr/include/freetype2 
PANGOFT2_LIBS = -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lfontconfig -lfreetype 
PANGO_CFLAGS = -pthread -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include 
PANGO_LIBS = -lpango-1.0 -lgobject-2.0 -lglib-2.0 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYTHON = 
PYTHON_EXEC_PREFIX = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_VERSION = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SQLITE3_CFLAGS = 
SQLITE3_LIBS = -lsqlite3 
STRIP = strip
USE_NLS = yes
VALAC = valac
VALA_0271_OR_LATER = 
VERSION = 0.7.2
XGETTEXT = /usr/bin/xgettext
XMLLINT = xmllint
XML_CFLAGS = -I/usr/include/libxml2 
XML_LIBS = -lxml2 
YELP_LC_DIST = true
YELP_LC_MEDIA_LINKS = true
YELP_TOOLS = yes
abs_builddir = /home/pi/font-manager-0.7.2/src
abs_srcdir = /home/pi/font-manager-0.7.2/src
abs_top_builddir = /home/pi/font-manager-0.7.2
abs_top_srcdir = /home/pi/font-manager-0.7.2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = armv7l-unknown-linux-gnueabihf
build_alias = 
build_cpu = armv7l
build_os = linux-gnueabihf
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gsettingsschemadir = ${datarootdir}/glib-2.0/schemas
host = armv7l-unknown-linux-gnueabihf
host_alias = 
host_cpu = armv7l
host_os = linux-gnueabihf
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/pi/font-manager-0.7.2/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = 
pythondir = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -DLOCALEDIR=\""$(localedir)"\"
AM_VALAFLAGS = \
--target-glib 2.38 \
--pkg gmodule-2.0 \
--pkg glib-2.0 \
--pkg gio-2.0 \
--pkg gtk+-3.0 \
--pkg gee-0.8 \
--pkg json-glib-1.0 \
--pkg Gucharmap-2.90 \
--pkg libxml-2.0 \
--pkg pango \
--pkg sqlite3 \
$(GTK_314_OR_LATER) \
$(GTK_316_OR_LATER) \
$(VALA_0271_OR_LATER) \
--gresources $(resource_dir)/FontManagerGResource.xml

font_manager_CPPFLAGS = \
-w \
$(XML_CFLAGS) \
$(FREETYPE_CFLAGS) \
$(FONTCONFIG_CFLAGS) \
$(GOBJECT_CFLAGS) \
$(GLIB_CFLAGS) \
$(GMODULE_CFLAGS) \
$(GIO_CFLAGS) \
$(CAIRO_CFLAGS) \
$(GTK_CFLAGS) \
$(PANGO_CFLAGS) \
$(PANGOCAIRO_CFLAGS) \
$(PANGOFT2_CFLAGS) \
$(GEE_CFLAGS) \
$(GUCHARMAP_CFLAGS) \
$(JSONGLIB_CFLAGS) \
$(SQLITE3_CFLAGS)

font_manager_LDADD = \
-lm \
-lpthread \
$(XML_LIBS) \
$(FREETYPE_LIBS) \
$(FONTCONFIG_LIBS) \
$(GOBJECT_LIBS) \
$(GLIB_LIBS) \
$(GMODULE_LIBS) \
$(GIO_LIBS) \
$(CAIRO_LIBS) \
$(GTK_LIBS) \
$(PANGO_LIBS) \
$(PANGOCAIRO_LIBS) \
$(PANGOFT2_LIBS) \
$(GEE_LIBS) \
$(GUCHARMAP_LIBS) \
$(JSONGLIB_LIBS) \
$(SQLITE3_LIBS)

font_manager_VALASOURCES = \
./Application.vala \
./Common/About.vala \
./Common/ArchiveManager.vala \
./Common/Collections.vala \
./Common/Constants.vala \
./Common/Database.vala \
./Common/FontInfo.vala \
./Common/Library.vala \
./Common/Logger.vala \
./Common/Main.vala \
./Common/Utils.vala \
./Filters/Category.vala \
./Filters/Collection.vala \
./Filters/Disabled.vala \
./Filters/Filter.vala \
./Filters/SearchResult.vala \
./Filters/Unsorted.vala \
./FontConfig/Accept.vala \
./FontConfig/DefaultProperties.vala \
./FontConfig/Directories.vala \
./FontConfig/DisplayProperties.vala \
./FontConfig/Enums.vala \
./FontConfig/Families.vala \
./FontConfig/Family.vala \
./FontConfig/FontConfig.vala \
./FontConfig/FontProperties.vala \
./FontConfig/FontSource.vala \
./FontConfig/Font.vala \
./FontConfig/Properties.vala \
./FontConfig/Reject.vala \
./FontConfig/Selections.vala \
./FontConfig/Sources.vala \
./FontConfig/XmlWriter.vala \
./Glue/Glue.vala \
./Json/Cacheable.vala \
./Json/JsonWriter.vala \
./Models/CategoryModel.vala \
./Models/CollectionModel.vala \
./Models/FontModel.vala \
./Models/UserFontModel.vala \
./UX/CharacterMap/CharacterDetails.vala \
./UX/CharacterMap/CharacterMapPane.vala \
./UX/CharacterMap/CharacterMapSideBar.vala \
./UX/CharacterMap/CharacterMap.vala \
./UX/CharacterMap/CharacterTable.vala \
./UX/Controls/BaseControls.vala \
./UX/Controls/CollectionControls.vala \
./UX/Controls/CompareControls.vala \
./UX/Controls/FontListControls.vala \
./UX/Controls/PreviewControls.vala \
./UX/Controls/TitleBar.vala \
./UX/Dialogs/FileSelector.vala \
./UX/Dialogs/Migration.vala \
./UX/Dialogs/NotImplemented.vala \
./UX/FontConfig/DisplayPropertiesPane.vala \
./UX/FontConfig/FontPropertiesPane.vala \
./UX/FontConfig/PropertiesEditor.vala \
./UX/FontConfig/SubpixelGeometry.vala \
./UX/MainWindow.vala \
./UX/Sidebar/MainSideBar.vala \
./UX/Sidebar/SideBar.vala \
./UX/State.vala \
./UX/Trees/CategoryTree.vala \
./UX/Trees/CollectionTree.vala \
./UX/Trees/FontListTree.vala \
./UX/Trees/UserFontTree.vala \
./UX/Trees/UserSourceList.vala \
./UX/Utils/Color.vala \
./UX/Utils/Utils.vala \
./UX/Viewer.vala \
./UX/Views/Browse.vala \
./UX/Views/Compare.vala \
./UX/Views/FontPreview.vala \
./UX/Views/Metadata.vala \
./UX/Widgets/ActivePreview.vala \
./UX/Widgets/AdjustablePreview.vala \
./UX/Widgets/CellRendererPill.vala \
./UX/Widgets/FontScale.vala \
./UX/Widgets/LabeledSpinButton.vala \
./UX/Widgets/LabeledSwitch.vala \
./UX/Widgets/OptionScale.vala \
./UX/Widgets/ReactiveLabel.vala \
./UX/Widgets/TextPreview.vala \
./UX/Widgets/TextViews.vala \
./UX/Widgets/ThinPaned.vala \
./UX/Widgets/TreeViews.vala \
./UX/Widgets/WaterfallPreview.vala 

resource_dir = ${abs_top_builddir}/resources
GLIB_COMPILE_RESOURCES = \
`$(PKG_CONFIG) --variable=glib_compile_resources gio-2.0`

BUILT_SOURCES = FontManagerGResource.c
font_manager_SOURCES = \
	$(font_manager_VALASOURCES) \
	Glue/_Glue_.c \
	Glue/Private.h \
	$(BUILT_SOURCES)

EXTRA_DIST = $(font_manager_VALASOURCES)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Flags.mk $(srcdir)/ValaSources.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Flags.mk $(srcdir)/ValaSources.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
./$(am__dirstamp):
	@$(MKDIR_P) .
	@: > ./$(am__dirstamp)
$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./$(DEPDIR)
	@: > $(DEPDIR)/$(am__dirstamp)
./font_manager-Application.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
Common/$(am__dirstamp):
	@$(MKDIR_P) ./Common
	@: > Common/$(am__dirstamp)
Common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./Common/$(DEPDIR)
	@: > Common/$(DEPDIR)/$(am__dirstamp)
./Common/font_manager-About.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
./Common/font_manager-ArchiveManager.$(OBJEXT):  \
	Common/$(am__dirstamp) Common/$(DEPDIR)/$(am__dirstamp)
./Common/font_manager-Collections.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
./Common/font_manager-Constants.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
./Common/font_manager-Database.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
./Common/font_manager-FontInfo.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
./Common/font_manager-Library.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
./Common/font_manager-Logger.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
./Common/font_manager-Main.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
./Common/font_manager-Utils.$(OBJEXT): Common/$(am__dirstamp) \
	Common/$(DEPDIR)/$(am__dirstamp)
Filters/$(am__dirstamp):
	@$(MKDIR_P) ./Filters
	@: > Filters/$(am__dirstamp)
Filters/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./Filters/$(DEPDIR)
	@: > Filters/$(DEPDIR)/$(am__dirstamp)
./Filters/font_manager-Category.$(OBJEXT): Filters/$(am__dirstamp) \
	Filters/$(DEPDIR)/$(am__dirstamp)
./Filters/font_manager-Collection.$(OBJEXT): Filters/$(am__dirstamp) \
	Filters/$(DEPDIR)/$(am__dirstamp)
./Filters/font_manager-Disabled.$(OBJEXT): Filters/$(am__dirstamp) \
	Filters/$(DEPDIR)/$(am__dirstamp)
./Filters/font_manager-Filter.$(OBJEXT): Filters/$(am__dirstamp) \
	Filters/$(DEPDIR)/$(am__dirstamp)
./Filters/font_manager-SearchResult.$(OBJEXT):  \
	Filters/$(am__dirstamp) Filters/$(DEPDIR)/$(am__dirstamp)
./Filters/font_manager-Unsorted.$(OBJEXT): Filters/$(am__dirstamp) \
	Filters/$(DEPDIR)/$(am__dirstamp)
FontConfig/$(am__dirstamp):
	@$(MKDIR_P) ./FontConfig
	@: > FontConfig/$(am__dirstamp)
FontConfig/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./FontConfig/$(DEPDIR)
	@: > FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-Accept.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-DefaultProperties.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-Directories.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-DisplayProperties.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-Enums.$(OBJEXT): FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-Families.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-Family.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-FontConfig.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-FontProperties.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-FontSource.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-Font.$(OBJEXT): FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-Properties.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-Reject.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-Selections.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-Sources.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
./FontConfig/font_manager-XmlWriter.$(OBJEXT):  \
	FontConfig/$(am__dirstamp) \
	FontConfig/$(DEPDIR)/$(am__dirstamp)
Glue/$(am__dirstamp):
	@$(MKDIR_P) ./Glue
	@: > Glue/$(am__dirstamp)
Glue/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./Glue/$(DEPDIR)
	@: > Glue/$(DEPDIR)/$(am__dirstamp)
./Glue/font_manager-Glue.$(OBJEXT): Glue/$(am__dirstamp) \
	Glue/$(DEPDIR)/$(am__dirstamp)
Json/$(am__dirstamp):
	@$(MKDIR_P) ./Json
	@: > Json/$(am__dirstamp)
Json/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./Json/$(DEPDIR)
	@: > Json/$(DEPDIR)/$(am__dirstamp)
./Json/font_manager-Cacheable.$(OBJEXT): Json/$(am__dirstamp) \
	Json/$(DEPDIR)/$(am__dirstamp)
./Json/font_manager-JsonWriter.$(OBJEXT): Json/$(am__dirstamp) \
	Json/$(DEPDIR)/$(am__dirstamp)
Models/$(am__dirstamp):
	@$(MKDIR_P) ./Models
	@: > Models/$(am__dirstamp)
Models/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./Models/$(DEPDIR)
	@: > Models/$(DEPDIR)/$(am__dirstamp)
./Models/font_manager-CategoryModel.$(OBJEXT): Models/$(am__dirstamp) \
	Models/$(DEPDIR)/$(am__dirstamp)
./Models/font_manager-CollectionModel.$(OBJEXT):  \
	Models/$(am__dirstamp) Models/$(DEPDIR)/$(am__dirstamp)
./Models/font_manager-FontModel.$(OBJEXT): Models/$(am__dirstamp) \
	Models/$(DEPDIR)/$(am__dirstamp)
./Models/font_manager-UserFontModel.$(OBJEXT): Models/$(am__dirstamp) \
	Models/$(DEPDIR)/$(am__dirstamp)
UX/CharacterMap/$(am__dirstamp):
	@$(MKDIR_P) ./UX/CharacterMap
	@: > UX/CharacterMap/$(am__dirstamp)
UX/CharacterMap/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./UX/CharacterMap/$(DEPDIR)
	@: > UX/CharacterMap/$(DEPDIR)/$(am__dirstamp)
./UX/CharacterMap/font_manager-CharacterDetails.$(OBJEXT):  \
	UX/CharacterMap/$(am__dirstamp) \
	UX/CharacterMap/$(DEPDIR)/$(am__dirstamp)
./UX/CharacterMap/font_manager-CharacterMapPane.$(OBJEXT):  \
	UX/CharacterMap/$(am__dirstamp) \
	UX/CharacterMap/$(DEPDIR)/$(am__dirstamp)
./UX/CharacterMap/font_manager-CharacterMapSideBar.$(OBJEXT):  \
	UX/CharacterMap/$(am__dirstamp) \
	UX/CharacterMap/$(DEPDIR)/$(am__dirstamp)
./UX/CharacterMap/font_manager-CharacterMap.$(OBJEXT):  \
	UX/CharacterMap/$(am__dirstamp) \
	UX/CharacterMap/$(DEPDIR)/$(am__dirstamp)
./UX/CharacterMap/font_manager-CharacterTable.$(OBJEXT):  \
	UX/CharacterMap/$(am__dirstamp) \
	UX/CharacterMap/$(DEPDIR)/$(am__dirstamp)
UX/Controls/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Controls
	@: > UX/Controls/$(am__dirstamp)
UX/Controls/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Controls/$(DEPDIR)
	@: > UX/Controls/$(DEPDIR)/$(am__dirstamp)
./UX/Controls/font_manager-BaseControls.$(OBJEXT):  \
	UX/Controls/$(am__dirstamp) \
	UX/Controls/$(DEPDIR)/$(am__dirstamp)
./UX/Controls/font_manager-CollectionControls.$(OBJEXT):  \
	UX/Controls/$(am__dirstamp) \
	UX/Controls/$(DEPDIR)/$(am__dirstamp)
./UX/Controls/font_manager-CompareControls.$(OBJEXT):  \
	UX/Controls/$(am__dirstamp) \
	UX/Controls/$(DEPDIR)/$(am__dirstamp)
./UX/Controls/font_manager-FontListControls.$(OBJEXT):  \
	UX/Controls/$(am__dirstamp) \
	UX/Controls/$(DEPDIR)/$(am__dirstamp)
./UX/Controls/font_manager-PreviewControls.$(OBJEXT):  \
	UX/Controls/$(am__dirstamp) \
	UX/Controls/$(DEPDIR)/$(am__dirstamp)
./UX/Controls/font_manager-TitleBar.$(OBJEXT):  \
	UX/Controls/$(am__dirstamp) \
	UX/Controls/$(DEPDIR)/$(am__dirstamp)
UX/Dialogs/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Dialogs
	@: > UX/Dialogs/$(am__dirstamp)
UX/Dialogs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Dialogs/$(DEPDIR)
	@: > UX/Dialogs/$(DEPDIR)/$(am__dirstamp)
./UX/Dialogs/font_manager-FileSelector.$(OBJEXT):  \
	UX/Dialogs/$(am__dirstamp) \
	UX/Dialogs/$(DEPDIR)/$(am__dirstamp)
./UX/Dialogs/font_manager-Migration.$(OBJEXT):  \
	UX/Dialogs/$(am__dirstamp) \
	UX/Dialogs/$(DEPDIR)/$(am__dirstamp)
./UX/Dialogs/font_manager-NotImplemented.$(OBJEXT):  \
	UX/Dialogs/$(am__dirstamp) \
	UX/Dialogs/$(DEPDIR)/$(am__dirstamp)
UX/FontConfig/$(am__dirstamp):
	@$(MKDIR_P) ./UX/FontConfig
	@: > UX/FontConfig/$(am__dirstamp)
UX/FontConfig/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./UX/FontConfig/$(DEPDIR)
	@: > UX/FontConfig/$(DEPDIR)/$(am__dirstamp)
./UX/FontConfig/font_manager-DisplayPropertiesPane.$(OBJEXT):  \
	UX/FontConfig/$(am__dirstamp) \
	UX/FontConfig/$(DEPDIR)/$(am__dirstamp)
./UX/FontConfig/font_manager-FontPropertiesPane.$(OBJEXT):  \
	UX/FontConfig/$(am__dirstamp) \
	UX/FontConfig/$(DEPDIR)/$(am__dirstamp)
./UX/FontConfig/font_manager-PropertiesEditor.$(OBJEXT):  \
	UX/FontConfig/$(am__dirstamp) \
	UX/FontConfig/$(DEPDIR)/$(am__dirstamp)
./UX/FontConfig/font_manager-SubpixelGeometry.$(OBJEXT):  \
	UX/FontConfig/$(am__dirstamp) \
	UX/FontConfig/$(DEPDIR)/$(am__dirstamp)
UX/$(am__dirstamp):
	@$(MKDIR_P) ./UX
	@: > UX/$(am__dirstamp)
UX/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./UX/$(DEPDIR)
	@: > UX/$(DEPDIR)/$(am__dirstamp)
./UX/font_manager-MainWindow.$(OBJEXT): UX/$(am__dirstamp) \
	UX/$(DEPDIR)/$(am__dirstamp)
UX/Sidebar/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Sidebar
	@: > UX/Sidebar/$(am__dirstamp)
UX/Sidebar/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Sidebar/$(DEPDIR)
	@: > UX/Sidebar/$(DEPDIR)/$(am__dirstamp)
./UX/Sidebar/font_manager-MainSideBar.$(OBJEXT):  \
	UX/Sidebar/$(am__dirstamp) \
	UX/Sidebar/$(DEPDIR)/$(am__dirstamp)
./UX/Sidebar/font_manager-SideBar.$(OBJEXT):  \
	UX/Sidebar/$(am__dirstamp) \
	UX/Sidebar/$(DEPDIR)/$(am__dirstamp)
./UX/font_manager-State.$(OBJEXT): UX/$(am__dirstamp) \
	UX/$(DEPDIR)/$(am__dirstamp)
UX/Trees/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Trees
	@: > UX/Trees/$(am__dirstamp)
UX/Trees/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Trees/$(DEPDIR)
	@: > UX/Trees/$(DEPDIR)/$(am__dirstamp)
./UX/Trees/font_manager-CategoryTree.$(OBJEXT):  \
	UX/Trees/$(am__dirstamp) UX/Trees/$(DEPDIR)/$(am__dirstamp)
./UX/Trees/font_manager-CollectionTree.$(OBJEXT):  \
	UX/Trees/$(am__dirstamp) UX/Trees/$(DEPDIR)/$(am__dirstamp)
./UX/Trees/font_manager-FontListTree.$(OBJEXT):  \
	UX/Trees/$(am__dirstamp) UX/Trees/$(DEPDIR)/$(am__dirstamp)
./UX/Trees/font_manager-UserFontTree.$(OBJEXT):  \
	UX/Trees/$(am__dirstamp) UX/Trees/$(DEPDIR)/$(am__dirstamp)
./UX/Trees/font_manager-UserSourceList.$(OBJEXT):  \
	UX/Trees/$(am__dirstamp) UX/Trees/$(DEPDIR)/$(am__dirstamp)
UX/Utils/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Utils
	@: > UX/Utils/$(am__dirstamp)
UX/Utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Utils/$(DEPDIR)
	@: > UX/Utils/$(DEPDIR)/$(am__dirstamp)
./UX/Utils/font_manager-Color.$(OBJEXT): UX/Utils/$(am__dirstamp) \
	UX/Utils/$(DEPDIR)/$(am__dirstamp)
./UX/Utils/font_manager-Utils.$(OBJEXT): UX/Utils/$(am__dirstamp) \
	UX/Utils/$(DEPDIR)/$(am__dirstamp)
./UX/font_manager-Viewer.$(OBJEXT): UX/$(am__dirstamp) \
	UX/$(DEPDIR)/$(am__dirstamp)
UX/Views/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Views
	@: > UX/Views/$(am__dirstamp)
UX/Views/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Views/$(DEPDIR)
	@: > UX/Views/$(DEPDIR)/$(am__dirstamp)
./UX/Views/font_manager-Browse.$(OBJEXT): UX/Views/$(am__dirstamp) \
	UX/Views/$(DEPDIR)/$(am__dirstamp)
./UX/Views/font_manager-Compare.$(OBJEXT): UX/Views/$(am__dirstamp) \
	UX/Views/$(DEPDIR)/$(am__dirstamp)
./UX/Views/font_manager-FontPreview.$(OBJEXT):  \
	UX/Views/$(am__dirstamp) UX/Views/$(DEPDIR)/$(am__dirstamp)
./UX/Views/font_manager-Metadata.$(OBJEXT): UX/Views/$(am__dirstamp) \
	UX/Views/$(DEPDIR)/$(am__dirstamp)
UX/Widgets/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Widgets
	@: > UX/Widgets/$(am__dirstamp)
UX/Widgets/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./UX/Widgets/$(DEPDIR)
	@: > UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-ActivePreview.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-AdjustablePreview.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-CellRendererPill.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-FontScale.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-LabeledSpinButton.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-LabeledSwitch.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-OptionScale.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-ReactiveLabel.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-TextPreview.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-TextViews.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-ThinPaned.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-TreeViews.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
./UX/Widgets/font_manager-WaterfallPreview.$(OBJEXT):  \
	UX/Widgets/$(am__dirstamp) \
	UX/Widgets/$(DEPDIR)/$(am__dirstamp)
Glue/font_manager-_Glue_.$(OBJEXT): Glue/$(am__dirstamp) \
	Glue/$(DEPDIR)/$(am__dirstamp)

font-manager$(EXEEXT): $(font_manager_OBJECTS) $(font_manager_DEPENDENCIES) $(EXTRA_font_manager_DEPENDENCIES) 
	@rm -f font-manager$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(font_manager_OBJECTS) $(font_manager_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ./*.$(OBJEXT)
	-rm -f ./Common/*.$(OBJEXT)
	-rm -f ./Filters/*.$(OBJEXT)
	-rm -f ./FontConfig/*.$(OBJEXT)
	-rm -f ./Glue/*.$(OBJEXT)
	-rm -f ./Json/*.$(OBJEXT)
	-rm -f ./Models/*.$(OBJEXT)
	-rm -f ./UX/*.$(OBJEXT)
	-rm -f ./UX/CharacterMap/*.$(OBJEXT)
	-rm -f ./UX/Controls/*.$(OBJEXT)
	-rm -f ./UX/Dialogs/*.$(OBJEXT)
	-rm -f ./UX/FontConfig/*.$(OBJEXT)
	-rm -f ./UX/Sidebar/*.$(OBJEXT)
	-rm -f ./UX/Trees/*.$(OBJEXT)
	-rm -f ./UX/Utils/*.$(OBJEXT)
	-rm -f ./UX/Views/*.$(OBJEXT)
	-rm -f ./UX/Widgets/*.$(OBJEXT)
	-rm -f Glue/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/font_manager-Application.Po
include ./$(DEPDIR)/font_manager-FontManagerGResource.Po
include ./Common/$(DEPDIR)/font_manager-About.Po
include ./Common/$(DEPDIR)/font_manager-ArchiveManager.Po
include ./Common/$(DEPDIR)/font_manager-Collections.Po
include ./Common/$(DEPDIR)/font_manager-Constants.Po
include ./Common/$(DEPDIR)/font_manager-Database.Po
include ./Common/$(DEPDIR)/font_manager-FontInfo.Po
include ./Common/$(DEPDIR)/font_manager-Library.Po
include ./Common/$(DEPDIR)/font_manager-Logger.Po
include ./Common/$(DEPDIR)/font_manager-Main.Po
include ./Common/$(DEPDIR)/font_manager-Utils.Po
include ./Filters/$(DEPDIR)/font_manager-Category.Po
include ./Filters/$(DEPDIR)/font_manager-Collection.Po
include ./Filters/$(DEPDIR)/font_manager-Disabled.Po
include ./Filters/$(DEPDIR)/font_manager-Filter.Po
include ./Filters/$(DEPDIR)/font_manager-SearchResult.Po
include ./Filters/$(DEPDIR)/font_manager-Unsorted.Po
include ./FontConfig/$(DEPDIR)/font_manager-Accept.Po
include ./FontConfig/$(DEPDIR)/font_manager-DefaultProperties.Po
include ./FontConfig/$(DEPDIR)/font_manager-Directories.Po
include ./FontConfig/$(DEPDIR)/font_manager-DisplayProperties.Po
include ./FontConfig/$(DEPDIR)/font_manager-Enums.Po
include ./FontConfig/$(DEPDIR)/font_manager-Families.Po
include ./FontConfig/$(DEPDIR)/font_manager-Family.Po
include ./FontConfig/$(DEPDIR)/font_manager-Font.Po
include ./FontConfig/$(DEPDIR)/font_manager-FontConfig.Po
include ./FontConfig/$(DEPDIR)/font_manager-FontProperties.Po
include ./FontConfig/$(DEPDIR)/font_manager-FontSource.Po
include ./FontConfig/$(DEPDIR)/font_manager-Properties.Po
include ./FontConfig/$(DEPDIR)/font_manager-Reject.Po
include ./FontConfig/$(DEPDIR)/font_manager-Selections.Po
include ./FontConfig/$(DEPDIR)/font_manager-Sources.Po
include ./FontConfig/$(DEPDIR)/font_manager-XmlWriter.Po
include ./Glue/$(DEPDIR)/font_manager-Glue.Po
include ./Json/$(DEPDIR)/font_manager-Cacheable.Po
include ./Json/$(DEPDIR)/font_manager-JsonWriter.Po
include ./Models/$(DEPDIR)/font_manager-CategoryModel.Po
include ./Models/$(DEPDIR)/font_manager-CollectionModel.Po
include ./Models/$(DEPDIR)/font_manager-FontModel.Po
include ./Models/$(DEPDIR)/font_manager-UserFontModel.Po
include ./UX/$(DEPDIR)/font_manager-MainWindow.Po
include ./UX/$(DEPDIR)/font_manager-State.Po
include ./UX/$(DEPDIR)/font_manager-Viewer.Po
include ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterDetails.Po
include ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMap.Po
include ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapPane.Po
include ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapSideBar.Po
include ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterTable.Po
include ./UX/Controls/$(DEPDIR)/font_manager-BaseControls.Po
include ./UX/Controls/$(DEPDIR)/font_manager-CollectionControls.Po
include ./UX/Controls/$(DEPDIR)/font_manager-CompareControls.Po
include ./UX/Controls/$(DEPDIR)/font_manager-FontListControls.Po
include ./UX/Controls/$(DEPDIR)/font_manager-PreviewControls.Po
include ./UX/Controls/$(DEPDIR)/font_manager-TitleBar.Po
include ./UX/Dialogs/$(DEPDIR)/font_manager-FileSelector.Po
include ./UX/Dialogs/$(DEPDIR)/font_manager-Migration.Po
include ./UX/Dialogs/$(DEPDIR)/font_manager-NotImplemented.Po
include ./UX/FontConfig/$(DEPDIR)/font_manager-DisplayPropertiesPane.Po
include ./UX/FontConfig/$(DEPDIR)/font_manager-FontPropertiesPane.Po
include ./UX/FontConfig/$(DEPDIR)/font_manager-PropertiesEditor.Po
include ./UX/FontConfig/$(DEPDIR)/font_manager-SubpixelGeometry.Po
include ./UX/Sidebar/$(DEPDIR)/font_manager-MainSideBar.Po
include ./UX/Sidebar/$(DEPDIR)/font_manager-SideBar.Po
include ./UX/Trees/$(DEPDIR)/font_manager-CategoryTree.Po
include ./UX/Trees/$(DEPDIR)/font_manager-CollectionTree.Po
include ./UX/Trees/$(DEPDIR)/font_manager-FontListTree.Po
include ./UX/Trees/$(DEPDIR)/font_manager-UserFontTree.Po
include ./UX/Trees/$(DEPDIR)/font_manager-UserSourceList.Po
include ./UX/Utils/$(DEPDIR)/font_manager-Color.Po
include ./UX/Utils/$(DEPDIR)/font_manager-Utils.Po
include ./UX/Views/$(DEPDIR)/font_manager-Browse.Po
include ./UX/Views/$(DEPDIR)/font_manager-Compare.Po
include ./UX/Views/$(DEPDIR)/font_manager-FontPreview.Po
include ./UX/Views/$(DEPDIR)/font_manager-Metadata.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-ActivePreview.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-AdjustablePreview.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-CellRendererPill.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-FontScale.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSpinButton.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSwitch.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-OptionScale.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-ReactiveLabel.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-TextPreview.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-TextViews.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-ThinPaned.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-TreeViews.Po
include ./UX/Widgets/$(DEPDIR)/font_manager-WaterfallPreview.Po
include Glue/$(DEPDIR)/font_manager-_Glue_.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

./font_manager-Application.o: ./Application.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./font_manager-Application.o -MD -MP -MF $(DEPDIR)/font_manager-Application.Tpo -c -o ./font_manager-Application.o `test -f './Application.c' || echo '$(srcdir)/'`./Application.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/font_manager-Application.Tpo $(DEPDIR)/font_manager-Application.Po
#	$(AM_V_CC)source='./Application.c' object='./font_manager-Application.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./font_manager-Application.o `test -f './Application.c' || echo '$(srcdir)/'`./Application.c

./font_manager-Application.obj: ./Application.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./font_manager-Application.obj -MD -MP -MF $(DEPDIR)/font_manager-Application.Tpo -c -o ./font_manager-Application.obj `if test -f './Application.c'; then $(CYGPATH_W) './Application.c'; else $(CYGPATH_W) '$(srcdir)/./Application.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/font_manager-Application.Tpo $(DEPDIR)/font_manager-Application.Po
#	$(AM_V_CC)source='./Application.c' object='./font_manager-Application.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./font_manager-Application.obj `if test -f './Application.c'; then $(CYGPATH_W) './Application.c'; else $(CYGPATH_W) '$(srcdir)/./Application.c'; fi`

./Common/font_manager-About.o: ./Common/About.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-About.o -MD -MP -MF ./Common/$(DEPDIR)/font_manager-About.Tpo -c -o ./Common/font_manager-About.o `test -f './Common/About.c' || echo '$(srcdir)/'`./Common/About.c
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-About.Tpo ./Common/$(DEPDIR)/font_manager-About.Po
#	$(AM_V_CC)source='./Common/About.c' object='./Common/font_manager-About.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-About.o `test -f './Common/About.c' || echo '$(srcdir)/'`./Common/About.c

./Common/font_manager-About.obj: ./Common/About.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-About.obj -MD -MP -MF ./Common/$(DEPDIR)/font_manager-About.Tpo -c -o ./Common/font_manager-About.obj `if test -f './Common/About.c'; then $(CYGPATH_W) './Common/About.c'; else $(CYGPATH_W) '$(srcdir)/./Common/About.c'; fi`
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-About.Tpo ./Common/$(DEPDIR)/font_manager-About.Po
#	$(AM_V_CC)source='./Common/About.c' object='./Common/font_manager-About.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-About.obj `if test -f './Common/About.c'; then $(CYGPATH_W) './Common/About.c'; else $(CYGPATH_W) '$(srcdir)/./Common/About.c'; fi`

./Common/font_manager-ArchiveManager.o: ./Common/ArchiveManager.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-ArchiveManager.o -MD -MP -MF ./Common/$(DEPDIR)/font_manager-ArchiveManager.Tpo -c -o ./Common/font_manager-ArchiveManager.o `test -f './Common/ArchiveManager.c' || echo '$(srcdir)/'`./Common/ArchiveManager.c
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-ArchiveManager.Tpo ./Common/$(DEPDIR)/font_manager-ArchiveManager.Po
#	$(AM_V_CC)source='./Common/ArchiveManager.c' object='./Common/font_manager-ArchiveManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-ArchiveManager.o `test -f './Common/ArchiveManager.c' || echo '$(srcdir)/'`./Common/ArchiveManager.c

./Common/font_manager-ArchiveManager.obj: ./Common/ArchiveManager.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-ArchiveManager.obj -MD -MP -MF ./Common/$(DEPDIR)/font_manager-ArchiveManager.Tpo -c -o ./Common/font_manager-ArchiveManager.obj `if test -f './Common/ArchiveManager.c'; then $(CYGPATH_W) './Common/ArchiveManager.c'; else $(CYGPATH_W) '$(srcdir)/./Common/ArchiveManager.c'; fi`
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-ArchiveManager.Tpo ./Common/$(DEPDIR)/font_manager-ArchiveManager.Po
#	$(AM_V_CC)source='./Common/ArchiveManager.c' object='./Common/font_manager-ArchiveManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-ArchiveManager.obj `if test -f './Common/ArchiveManager.c'; then $(CYGPATH_W) './Common/ArchiveManager.c'; else $(CYGPATH_W) '$(srcdir)/./Common/ArchiveManager.c'; fi`

./Common/font_manager-Collections.o: ./Common/Collections.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Collections.o -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Collections.Tpo -c -o ./Common/font_manager-Collections.o `test -f './Common/Collections.c' || echo '$(srcdir)/'`./Common/Collections.c
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Collections.Tpo ./Common/$(DEPDIR)/font_manager-Collections.Po
#	$(AM_V_CC)source='./Common/Collections.c' object='./Common/font_manager-Collections.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Collections.o `test -f './Common/Collections.c' || echo '$(srcdir)/'`./Common/Collections.c

./Common/font_manager-Collections.obj: ./Common/Collections.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Collections.obj -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Collections.Tpo -c -o ./Common/font_manager-Collections.obj `if test -f './Common/Collections.c'; then $(CYGPATH_W) './Common/Collections.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Collections.c'; fi`
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Collections.Tpo ./Common/$(DEPDIR)/font_manager-Collections.Po
#	$(AM_V_CC)source='./Common/Collections.c' object='./Common/font_manager-Collections.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Collections.obj `if test -f './Common/Collections.c'; then $(CYGPATH_W) './Common/Collections.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Collections.c'; fi`

./Common/font_manager-Constants.o: ./Common/Constants.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Constants.o -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Constants.Tpo -c -o ./Common/font_manager-Constants.o `test -f './Common/Constants.c' || echo '$(srcdir)/'`./Common/Constants.c
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Constants.Tpo ./Common/$(DEPDIR)/font_manager-Constants.Po
#	$(AM_V_CC)source='./Common/Constants.c' object='./Common/font_manager-Constants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Constants.o `test -f './Common/Constants.c' || echo '$(srcdir)/'`./Common/Constants.c

./Common/font_manager-Constants.obj: ./Common/Constants.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Constants.obj -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Constants.Tpo -c -o ./Common/font_manager-Constants.obj `if test -f './Common/Constants.c'; then $(CYGPATH_W) './Common/Constants.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Constants.c'; fi`
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Constants.Tpo ./Common/$(DEPDIR)/font_manager-Constants.Po
#	$(AM_V_CC)source='./Common/Constants.c' object='./Common/font_manager-Constants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Constants.obj `if test -f './Common/Constants.c'; then $(CYGPATH_W) './Common/Constants.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Constants.c'; fi`

./Common/font_manager-Database.o: ./Common/Database.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Database.o -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Database.Tpo -c -o ./Common/font_manager-Database.o `test -f './Common/Database.c' || echo '$(srcdir)/'`./Common/Database.c
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Database.Tpo ./Common/$(DEPDIR)/font_manager-Database.Po
#	$(AM_V_CC)source='./Common/Database.c' object='./Common/font_manager-Database.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Database.o `test -f './Common/Database.c' || echo '$(srcdir)/'`./Common/Database.c

./Common/font_manager-Database.obj: ./Common/Database.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Database.obj -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Database.Tpo -c -o ./Common/font_manager-Database.obj `if test -f './Common/Database.c'; then $(CYGPATH_W) './Common/Database.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Database.c'; fi`
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Database.Tpo ./Common/$(DEPDIR)/font_manager-Database.Po
#	$(AM_V_CC)source='./Common/Database.c' object='./Common/font_manager-Database.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Database.obj `if test -f './Common/Database.c'; then $(CYGPATH_W) './Common/Database.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Database.c'; fi`

./Common/font_manager-FontInfo.o: ./Common/FontInfo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-FontInfo.o -MD -MP -MF ./Common/$(DEPDIR)/font_manager-FontInfo.Tpo -c -o ./Common/font_manager-FontInfo.o `test -f './Common/FontInfo.c' || echo '$(srcdir)/'`./Common/FontInfo.c
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-FontInfo.Tpo ./Common/$(DEPDIR)/font_manager-FontInfo.Po
#	$(AM_V_CC)source='./Common/FontInfo.c' object='./Common/font_manager-FontInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-FontInfo.o `test -f './Common/FontInfo.c' || echo '$(srcdir)/'`./Common/FontInfo.c

./Common/font_manager-FontInfo.obj: ./Common/FontInfo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-FontInfo.obj -MD -MP -MF ./Common/$(DEPDIR)/font_manager-FontInfo.Tpo -c -o ./Common/font_manager-FontInfo.obj `if test -f './Common/FontInfo.c'; then $(CYGPATH_W) './Common/FontInfo.c'; else $(CYGPATH_W) '$(srcdir)/./Common/FontInfo.c'; fi`
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-FontInfo.Tpo ./Common/$(DEPDIR)/font_manager-FontInfo.Po
#	$(AM_V_CC)source='./Common/FontInfo.c' object='./Common/font_manager-FontInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-FontInfo.obj `if test -f './Common/FontInfo.c'; then $(CYGPATH_W) './Common/FontInfo.c'; else $(CYGPATH_W) '$(srcdir)/./Common/FontInfo.c'; fi`

./Common/font_manager-Library.o: ./Common/Library.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Library.o -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Library.Tpo -c -o ./Common/font_manager-Library.o `test -f './Common/Library.c' || echo '$(srcdir)/'`./Common/Library.c
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Library.Tpo ./Common/$(DEPDIR)/font_manager-Library.Po
#	$(AM_V_CC)source='./Common/Library.c' object='./Common/font_manager-Library.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Library.o `test -f './Common/Library.c' || echo '$(srcdir)/'`./Common/Library.c

./Common/font_manager-Library.obj: ./Common/Library.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Library.obj -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Library.Tpo -c -o ./Common/font_manager-Library.obj `if test -f './Common/Library.c'; then $(CYGPATH_W) './Common/Library.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Library.c'; fi`
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Library.Tpo ./Common/$(DEPDIR)/font_manager-Library.Po
#	$(AM_V_CC)source='./Common/Library.c' object='./Common/font_manager-Library.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Library.obj `if test -f './Common/Library.c'; then $(CYGPATH_W) './Common/Library.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Library.c'; fi`

./Common/font_manager-Logger.o: ./Common/Logger.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Logger.o -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Logger.Tpo -c -o ./Common/font_manager-Logger.o `test -f './Common/Logger.c' || echo '$(srcdir)/'`./Common/Logger.c
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Logger.Tpo ./Common/$(DEPDIR)/font_manager-Logger.Po
#	$(AM_V_CC)source='./Common/Logger.c' object='./Common/font_manager-Logger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Logger.o `test -f './Common/Logger.c' || echo '$(srcdir)/'`./Common/Logger.c

./Common/font_manager-Logger.obj: ./Common/Logger.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Logger.obj -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Logger.Tpo -c -o ./Common/font_manager-Logger.obj `if test -f './Common/Logger.c'; then $(CYGPATH_W) './Common/Logger.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Logger.c'; fi`
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Logger.Tpo ./Common/$(DEPDIR)/font_manager-Logger.Po
#	$(AM_V_CC)source='./Common/Logger.c' object='./Common/font_manager-Logger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Logger.obj `if test -f './Common/Logger.c'; then $(CYGPATH_W) './Common/Logger.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Logger.c'; fi`

./Common/font_manager-Main.o: ./Common/Main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Main.o -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Main.Tpo -c -o ./Common/font_manager-Main.o `test -f './Common/Main.c' || echo '$(srcdir)/'`./Common/Main.c
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Main.Tpo ./Common/$(DEPDIR)/font_manager-Main.Po
#	$(AM_V_CC)source='./Common/Main.c' object='./Common/font_manager-Main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Main.o `test -f './Common/Main.c' || echo '$(srcdir)/'`./Common/Main.c

./Common/font_manager-Main.obj: ./Common/Main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Main.obj -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Main.Tpo -c -o ./Common/font_manager-Main.obj `if test -f './Common/Main.c'; then $(CYGPATH_W) './Common/Main.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Main.c'; fi`
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Main.Tpo ./Common/$(DEPDIR)/font_manager-Main.Po
#	$(AM_V_CC)source='./Common/Main.c' object='./Common/font_manager-Main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Main.obj `if test -f './Common/Main.c'; then $(CYGPATH_W) './Common/Main.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Main.c'; fi`

./Common/font_manager-Utils.o: ./Common/Utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Utils.o -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Utils.Tpo -c -o ./Common/font_manager-Utils.o `test -f './Common/Utils.c' || echo '$(srcdir)/'`./Common/Utils.c
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Utils.Tpo ./Common/$(DEPDIR)/font_manager-Utils.Po
#	$(AM_V_CC)source='./Common/Utils.c' object='./Common/font_manager-Utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Utils.o `test -f './Common/Utils.c' || echo '$(srcdir)/'`./Common/Utils.c

./Common/font_manager-Utils.obj: ./Common/Utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Common/font_manager-Utils.obj -MD -MP -MF ./Common/$(DEPDIR)/font_manager-Utils.Tpo -c -o ./Common/font_manager-Utils.obj `if test -f './Common/Utils.c'; then $(CYGPATH_W) './Common/Utils.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Utils.c'; fi`
	$(AM_V_at)$(am__mv) ./Common/$(DEPDIR)/font_manager-Utils.Tpo ./Common/$(DEPDIR)/font_manager-Utils.Po
#	$(AM_V_CC)source='./Common/Utils.c' object='./Common/font_manager-Utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Common/font_manager-Utils.obj `if test -f './Common/Utils.c'; then $(CYGPATH_W) './Common/Utils.c'; else $(CYGPATH_W) '$(srcdir)/./Common/Utils.c'; fi`

./Filters/font_manager-Category.o: ./Filters/Category.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-Category.o -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-Category.Tpo -c -o ./Filters/font_manager-Category.o `test -f './Filters/Category.c' || echo '$(srcdir)/'`./Filters/Category.c
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-Category.Tpo ./Filters/$(DEPDIR)/font_manager-Category.Po
#	$(AM_V_CC)source='./Filters/Category.c' object='./Filters/font_manager-Category.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-Category.o `test -f './Filters/Category.c' || echo '$(srcdir)/'`./Filters/Category.c

./Filters/font_manager-Category.obj: ./Filters/Category.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-Category.obj -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-Category.Tpo -c -o ./Filters/font_manager-Category.obj `if test -f './Filters/Category.c'; then $(CYGPATH_W) './Filters/Category.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/Category.c'; fi`
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-Category.Tpo ./Filters/$(DEPDIR)/font_manager-Category.Po
#	$(AM_V_CC)source='./Filters/Category.c' object='./Filters/font_manager-Category.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-Category.obj `if test -f './Filters/Category.c'; then $(CYGPATH_W) './Filters/Category.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/Category.c'; fi`

./Filters/font_manager-Collection.o: ./Filters/Collection.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-Collection.o -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-Collection.Tpo -c -o ./Filters/font_manager-Collection.o `test -f './Filters/Collection.c' || echo '$(srcdir)/'`./Filters/Collection.c
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-Collection.Tpo ./Filters/$(DEPDIR)/font_manager-Collection.Po
#	$(AM_V_CC)source='./Filters/Collection.c' object='./Filters/font_manager-Collection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-Collection.o `test -f './Filters/Collection.c' || echo '$(srcdir)/'`./Filters/Collection.c

./Filters/font_manager-Collection.obj: ./Filters/Collection.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-Collection.obj -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-Collection.Tpo -c -o ./Filters/font_manager-Collection.obj `if test -f './Filters/Collection.c'; then $(CYGPATH_W) './Filters/Collection.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/Collection.c'; fi`
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-Collection.Tpo ./Filters/$(DEPDIR)/font_manager-Collection.Po
#	$(AM_V_CC)source='./Filters/Collection.c' object='./Filters/font_manager-Collection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-Collection.obj `if test -f './Filters/Collection.c'; then $(CYGPATH_W) './Filters/Collection.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/Collection.c'; fi`

./Filters/font_manager-Disabled.o: ./Filters/Disabled.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-Disabled.o -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-Disabled.Tpo -c -o ./Filters/font_manager-Disabled.o `test -f './Filters/Disabled.c' || echo '$(srcdir)/'`./Filters/Disabled.c
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-Disabled.Tpo ./Filters/$(DEPDIR)/font_manager-Disabled.Po
#	$(AM_V_CC)source='./Filters/Disabled.c' object='./Filters/font_manager-Disabled.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-Disabled.o `test -f './Filters/Disabled.c' || echo '$(srcdir)/'`./Filters/Disabled.c

./Filters/font_manager-Disabled.obj: ./Filters/Disabled.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-Disabled.obj -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-Disabled.Tpo -c -o ./Filters/font_manager-Disabled.obj `if test -f './Filters/Disabled.c'; then $(CYGPATH_W) './Filters/Disabled.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/Disabled.c'; fi`
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-Disabled.Tpo ./Filters/$(DEPDIR)/font_manager-Disabled.Po
#	$(AM_V_CC)source='./Filters/Disabled.c' object='./Filters/font_manager-Disabled.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-Disabled.obj `if test -f './Filters/Disabled.c'; then $(CYGPATH_W) './Filters/Disabled.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/Disabled.c'; fi`

./Filters/font_manager-Filter.o: ./Filters/Filter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-Filter.o -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-Filter.Tpo -c -o ./Filters/font_manager-Filter.o `test -f './Filters/Filter.c' || echo '$(srcdir)/'`./Filters/Filter.c
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-Filter.Tpo ./Filters/$(DEPDIR)/font_manager-Filter.Po
#	$(AM_V_CC)source='./Filters/Filter.c' object='./Filters/font_manager-Filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-Filter.o `test -f './Filters/Filter.c' || echo '$(srcdir)/'`./Filters/Filter.c

./Filters/font_manager-Filter.obj: ./Filters/Filter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-Filter.obj -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-Filter.Tpo -c -o ./Filters/font_manager-Filter.obj `if test -f './Filters/Filter.c'; then $(CYGPATH_W) './Filters/Filter.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/Filter.c'; fi`
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-Filter.Tpo ./Filters/$(DEPDIR)/font_manager-Filter.Po
#	$(AM_V_CC)source='./Filters/Filter.c' object='./Filters/font_manager-Filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-Filter.obj `if test -f './Filters/Filter.c'; then $(CYGPATH_W) './Filters/Filter.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/Filter.c'; fi`

./Filters/font_manager-SearchResult.o: ./Filters/SearchResult.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-SearchResult.o -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-SearchResult.Tpo -c -o ./Filters/font_manager-SearchResult.o `test -f './Filters/SearchResult.c' || echo '$(srcdir)/'`./Filters/SearchResult.c
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-SearchResult.Tpo ./Filters/$(DEPDIR)/font_manager-SearchResult.Po
#	$(AM_V_CC)source='./Filters/SearchResult.c' object='./Filters/font_manager-SearchResult.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-SearchResult.o `test -f './Filters/SearchResult.c' || echo '$(srcdir)/'`./Filters/SearchResult.c

./Filters/font_manager-SearchResult.obj: ./Filters/SearchResult.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-SearchResult.obj -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-SearchResult.Tpo -c -o ./Filters/font_manager-SearchResult.obj `if test -f './Filters/SearchResult.c'; then $(CYGPATH_W) './Filters/SearchResult.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/SearchResult.c'; fi`
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-SearchResult.Tpo ./Filters/$(DEPDIR)/font_manager-SearchResult.Po
#	$(AM_V_CC)source='./Filters/SearchResult.c' object='./Filters/font_manager-SearchResult.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-SearchResult.obj `if test -f './Filters/SearchResult.c'; then $(CYGPATH_W) './Filters/SearchResult.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/SearchResult.c'; fi`

./Filters/font_manager-Unsorted.o: ./Filters/Unsorted.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-Unsorted.o -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-Unsorted.Tpo -c -o ./Filters/font_manager-Unsorted.o `test -f './Filters/Unsorted.c' || echo '$(srcdir)/'`./Filters/Unsorted.c
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-Unsorted.Tpo ./Filters/$(DEPDIR)/font_manager-Unsorted.Po
#	$(AM_V_CC)source='./Filters/Unsorted.c' object='./Filters/font_manager-Unsorted.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-Unsorted.o `test -f './Filters/Unsorted.c' || echo '$(srcdir)/'`./Filters/Unsorted.c

./Filters/font_manager-Unsorted.obj: ./Filters/Unsorted.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Filters/font_manager-Unsorted.obj -MD -MP -MF ./Filters/$(DEPDIR)/font_manager-Unsorted.Tpo -c -o ./Filters/font_manager-Unsorted.obj `if test -f './Filters/Unsorted.c'; then $(CYGPATH_W) './Filters/Unsorted.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/Unsorted.c'; fi`
	$(AM_V_at)$(am__mv) ./Filters/$(DEPDIR)/font_manager-Unsorted.Tpo ./Filters/$(DEPDIR)/font_manager-Unsorted.Po
#	$(AM_V_CC)source='./Filters/Unsorted.c' object='./Filters/font_manager-Unsorted.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Filters/font_manager-Unsorted.obj `if test -f './Filters/Unsorted.c'; then $(CYGPATH_W) './Filters/Unsorted.c'; else $(CYGPATH_W) '$(srcdir)/./Filters/Unsorted.c'; fi`

./FontConfig/font_manager-Accept.o: ./FontConfig/Accept.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Accept.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Accept.Tpo -c -o ./FontConfig/font_manager-Accept.o `test -f './FontConfig/Accept.c' || echo '$(srcdir)/'`./FontConfig/Accept.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Accept.Tpo ./FontConfig/$(DEPDIR)/font_manager-Accept.Po
#	$(AM_V_CC)source='./FontConfig/Accept.c' object='./FontConfig/font_manager-Accept.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Accept.o `test -f './FontConfig/Accept.c' || echo '$(srcdir)/'`./FontConfig/Accept.c

./FontConfig/font_manager-Accept.obj: ./FontConfig/Accept.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Accept.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Accept.Tpo -c -o ./FontConfig/font_manager-Accept.obj `if test -f './FontConfig/Accept.c'; then $(CYGPATH_W) './FontConfig/Accept.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Accept.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Accept.Tpo ./FontConfig/$(DEPDIR)/font_manager-Accept.Po
#	$(AM_V_CC)source='./FontConfig/Accept.c' object='./FontConfig/font_manager-Accept.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Accept.obj `if test -f './FontConfig/Accept.c'; then $(CYGPATH_W) './FontConfig/Accept.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Accept.c'; fi`

./FontConfig/font_manager-DefaultProperties.o: ./FontConfig/DefaultProperties.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-DefaultProperties.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-DefaultProperties.Tpo -c -o ./FontConfig/font_manager-DefaultProperties.o `test -f './FontConfig/DefaultProperties.c' || echo '$(srcdir)/'`./FontConfig/DefaultProperties.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-DefaultProperties.Tpo ./FontConfig/$(DEPDIR)/font_manager-DefaultProperties.Po
#	$(AM_V_CC)source='./FontConfig/DefaultProperties.c' object='./FontConfig/font_manager-DefaultProperties.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-DefaultProperties.o `test -f './FontConfig/DefaultProperties.c' || echo '$(srcdir)/'`./FontConfig/DefaultProperties.c

./FontConfig/font_manager-DefaultProperties.obj: ./FontConfig/DefaultProperties.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-DefaultProperties.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-DefaultProperties.Tpo -c -o ./FontConfig/font_manager-DefaultProperties.obj `if test -f './FontConfig/DefaultProperties.c'; then $(CYGPATH_W) './FontConfig/DefaultProperties.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/DefaultProperties.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-DefaultProperties.Tpo ./FontConfig/$(DEPDIR)/font_manager-DefaultProperties.Po
#	$(AM_V_CC)source='./FontConfig/DefaultProperties.c' object='./FontConfig/font_manager-DefaultProperties.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-DefaultProperties.obj `if test -f './FontConfig/DefaultProperties.c'; then $(CYGPATH_W) './FontConfig/DefaultProperties.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/DefaultProperties.c'; fi`

./FontConfig/font_manager-Directories.o: ./FontConfig/Directories.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Directories.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Directories.Tpo -c -o ./FontConfig/font_manager-Directories.o `test -f './FontConfig/Directories.c' || echo '$(srcdir)/'`./FontConfig/Directories.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Directories.Tpo ./FontConfig/$(DEPDIR)/font_manager-Directories.Po
#	$(AM_V_CC)source='./FontConfig/Directories.c' object='./FontConfig/font_manager-Directories.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Directories.o `test -f './FontConfig/Directories.c' || echo '$(srcdir)/'`./FontConfig/Directories.c

./FontConfig/font_manager-Directories.obj: ./FontConfig/Directories.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Directories.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Directories.Tpo -c -o ./FontConfig/font_manager-Directories.obj `if test -f './FontConfig/Directories.c'; then $(CYGPATH_W) './FontConfig/Directories.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Directories.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Directories.Tpo ./FontConfig/$(DEPDIR)/font_manager-Directories.Po
#	$(AM_V_CC)source='./FontConfig/Directories.c' object='./FontConfig/font_manager-Directories.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Directories.obj `if test -f './FontConfig/Directories.c'; then $(CYGPATH_W) './FontConfig/Directories.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Directories.c'; fi`

./FontConfig/font_manager-DisplayProperties.o: ./FontConfig/DisplayProperties.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-DisplayProperties.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-DisplayProperties.Tpo -c -o ./FontConfig/font_manager-DisplayProperties.o `test -f './FontConfig/DisplayProperties.c' || echo '$(srcdir)/'`./FontConfig/DisplayProperties.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-DisplayProperties.Tpo ./FontConfig/$(DEPDIR)/font_manager-DisplayProperties.Po
#	$(AM_V_CC)source='./FontConfig/DisplayProperties.c' object='./FontConfig/font_manager-DisplayProperties.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-DisplayProperties.o `test -f './FontConfig/DisplayProperties.c' || echo '$(srcdir)/'`./FontConfig/DisplayProperties.c

./FontConfig/font_manager-DisplayProperties.obj: ./FontConfig/DisplayProperties.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-DisplayProperties.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-DisplayProperties.Tpo -c -o ./FontConfig/font_manager-DisplayProperties.obj `if test -f './FontConfig/DisplayProperties.c'; then $(CYGPATH_W) './FontConfig/DisplayProperties.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/DisplayProperties.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-DisplayProperties.Tpo ./FontConfig/$(DEPDIR)/font_manager-DisplayProperties.Po
#	$(AM_V_CC)source='./FontConfig/DisplayProperties.c' object='./FontConfig/font_manager-DisplayProperties.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-DisplayProperties.obj `if test -f './FontConfig/DisplayProperties.c'; then $(CYGPATH_W) './FontConfig/DisplayProperties.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/DisplayProperties.c'; fi`

./FontConfig/font_manager-Enums.o: ./FontConfig/Enums.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Enums.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Enums.Tpo -c -o ./FontConfig/font_manager-Enums.o `test -f './FontConfig/Enums.c' || echo '$(srcdir)/'`./FontConfig/Enums.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Enums.Tpo ./FontConfig/$(DEPDIR)/font_manager-Enums.Po
#	$(AM_V_CC)source='./FontConfig/Enums.c' object='./FontConfig/font_manager-Enums.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Enums.o `test -f './FontConfig/Enums.c' || echo '$(srcdir)/'`./FontConfig/Enums.c

./FontConfig/font_manager-Enums.obj: ./FontConfig/Enums.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Enums.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Enums.Tpo -c -o ./FontConfig/font_manager-Enums.obj `if test -f './FontConfig/Enums.c'; then $(CYGPATH_W) './FontConfig/Enums.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Enums.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Enums.Tpo ./FontConfig/$(DEPDIR)/font_manager-Enums.Po
#	$(AM_V_CC)source='./FontConfig/Enums.c' object='./FontConfig/font_manager-Enums.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Enums.obj `if test -f './FontConfig/Enums.c'; then $(CYGPATH_W) './FontConfig/Enums.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Enums.c'; fi`

./FontConfig/font_manager-Families.o: ./FontConfig/Families.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Families.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Families.Tpo -c -o ./FontConfig/font_manager-Families.o `test -f './FontConfig/Families.c' || echo '$(srcdir)/'`./FontConfig/Families.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Families.Tpo ./FontConfig/$(DEPDIR)/font_manager-Families.Po
#	$(AM_V_CC)source='./FontConfig/Families.c' object='./FontConfig/font_manager-Families.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Families.o `test -f './FontConfig/Families.c' || echo '$(srcdir)/'`./FontConfig/Families.c

./FontConfig/font_manager-Families.obj: ./FontConfig/Families.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Families.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Families.Tpo -c -o ./FontConfig/font_manager-Families.obj `if test -f './FontConfig/Families.c'; then $(CYGPATH_W) './FontConfig/Families.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Families.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Families.Tpo ./FontConfig/$(DEPDIR)/font_manager-Families.Po
#	$(AM_V_CC)source='./FontConfig/Families.c' object='./FontConfig/font_manager-Families.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Families.obj `if test -f './FontConfig/Families.c'; then $(CYGPATH_W) './FontConfig/Families.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Families.c'; fi`

./FontConfig/font_manager-Family.o: ./FontConfig/Family.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Family.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Family.Tpo -c -o ./FontConfig/font_manager-Family.o `test -f './FontConfig/Family.c' || echo '$(srcdir)/'`./FontConfig/Family.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Family.Tpo ./FontConfig/$(DEPDIR)/font_manager-Family.Po
#	$(AM_V_CC)source='./FontConfig/Family.c' object='./FontConfig/font_manager-Family.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Family.o `test -f './FontConfig/Family.c' || echo '$(srcdir)/'`./FontConfig/Family.c

./FontConfig/font_manager-Family.obj: ./FontConfig/Family.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Family.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Family.Tpo -c -o ./FontConfig/font_manager-Family.obj `if test -f './FontConfig/Family.c'; then $(CYGPATH_W) './FontConfig/Family.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Family.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Family.Tpo ./FontConfig/$(DEPDIR)/font_manager-Family.Po
#	$(AM_V_CC)source='./FontConfig/Family.c' object='./FontConfig/font_manager-Family.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Family.obj `if test -f './FontConfig/Family.c'; then $(CYGPATH_W) './FontConfig/Family.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Family.c'; fi`

./FontConfig/font_manager-FontConfig.o: ./FontConfig/FontConfig.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-FontConfig.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-FontConfig.Tpo -c -o ./FontConfig/font_manager-FontConfig.o `test -f './FontConfig/FontConfig.c' || echo '$(srcdir)/'`./FontConfig/FontConfig.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-FontConfig.Tpo ./FontConfig/$(DEPDIR)/font_manager-FontConfig.Po
#	$(AM_V_CC)source='./FontConfig/FontConfig.c' object='./FontConfig/font_manager-FontConfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-FontConfig.o `test -f './FontConfig/FontConfig.c' || echo '$(srcdir)/'`./FontConfig/FontConfig.c

./FontConfig/font_manager-FontConfig.obj: ./FontConfig/FontConfig.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-FontConfig.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-FontConfig.Tpo -c -o ./FontConfig/font_manager-FontConfig.obj `if test -f './FontConfig/FontConfig.c'; then $(CYGPATH_W) './FontConfig/FontConfig.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/FontConfig.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-FontConfig.Tpo ./FontConfig/$(DEPDIR)/font_manager-FontConfig.Po
#	$(AM_V_CC)source='./FontConfig/FontConfig.c' object='./FontConfig/font_manager-FontConfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-FontConfig.obj `if test -f './FontConfig/FontConfig.c'; then $(CYGPATH_W) './FontConfig/FontConfig.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/FontConfig.c'; fi`

./FontConfig/font_manager-FontProperties.o: ./FontConfig/FontProperties.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-FontProperties.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-FontProperties.Tpo -c -o ./FontConfig/font_manager-FontProperties.o `test -f './FontConfig/FontProperties.c' || echo '$(srcdir)/'`./FontConfig/FontProperties.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-FontProperties.Tpo ./FontConfig/$(DEPDIR)/font_manager-FontProperties.Po
#	$(AM_V_CC)source='./FontConfig/FontProperties.c' object='./FontConfig/font_manager-FontProperties.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-FontProperties.o `test -f './FontConfig/FontProperties.c' || echo '$(srcdir)/'`./FontConfig/FontProperties.c

./FontConfig/font_manager-FontProperties.obj: ./FontConfig/FontProperties.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-FontProperties.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-FontProperties.Tpo -c -o ./FontConfig/font_manager-FontProperties.obj `if test -f './FontConfig/FontProperties.c'; then $(CYGPATH_W) './FontConfig/FontProperties.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/FontProperties.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-FontProperties.Tpo ./FontConfig/$(DEPDIR)/font_manager-FontProperties.Po
#	$(AM_V_CC)source='./FontConfig/FontProperties.c' object='./FontConfig/font_manager-FontProperties.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-FontProperties.obj `if test -f './FontConfig/FontProperties.c'; then $(CYGPATH_W) './FontConfig/FontProperties.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/FontProperties.c'; fi`

./FontConfig/font_manager-FontSource.o: ./FontConfig/FontSource.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-FontSource.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-FontSource.Tpo -c -o ./FontConfig/font_manager-FontSource.o `test -f './FontConfig/FontSource.c' || echo '$(srcdir)/'`./FontConfig/FontSource.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-FontSource.Tpo ./FontConfig/$(DEPDIR)/font_manager-FontSource.Po
#	$(AM_V_CC)source='./FontConfig/FontSource.c' object='./FontConfig/font_manager-FontSource.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-FontSource.o `test -f './FontConfig/FontSource.c' || echo '$(srcdir)/'`./FontConfig/FontSource.c

./FontConfig/font_manager-FontSource.obj: ./FontConfig/FontSource.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-FontSource.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-FontSource.Tpo -c -o ./FontConfig/font_manager-FontSource.obj `if test -f './FontConfig/FontSource.c'; then $(CYGPATH_W) './FontConfig/FontSource.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/FontSource.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-FontSource.Tpo ./FontConfig/$(DEPDIR)/font_manager-FontSource.Po
#	$(AM_V_CC)source='./FontConfig/FontSource.c' object='./FontConfig/font_manager-FontSource.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-FontSource.obj `if test -f './FontConfig/FontSource.c'; then $(CYGPATH_W) './FontConfig/FontSource.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/FontSource.c'; fi`

./FontConfig/font_manager-Font.o: ./FontConfig/Font.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Font.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Font.Tpo -c -o ./FontConfig/font_manager-Font.o `test -f './FontConfig/Font.c' || echo '$(srcdir)/'`./FontConfig/Font.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Font.Tpo ./FontConfig/$(DEPDIR)/font_manager-Font.Po
#	$(AM_V_CC)source='./FontConfig/Font.c' object='./FontConfig/font_manager-Font.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Font.o `test -f './FontConfig/Font.c' || echo '$(srcdir)/'`./FontConfig/Font.c

./FontConfig/font_manager-Font.obj: ./FontConfig/Font.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Font.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Font.Tpo -c -o ./FontConfig/font_manager-Font.obj `if test -f './FontConfig/Font.c'; then $(CYGPATH_W) './FontConfig/Font.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Font.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Font.Tpo ./FontConfig/$(DEPDIR)/font_manager-Font.Po
#	$(AM_V_CC)source='./FontConfig/Font.c' object='./FontConfig/font_manager-Font.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Font.obj `if test -f './FontConfig/Font.c'; then $(CYGPATH_W) './FontConfig/Font.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Font.c'; fi`

./FontConfig/font_manager-Properties.o: ./FontConfig/Properties.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Properties.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Properties.Tpo -c -o ./FontConfig/font_manager-Properties.o `test -f './FontConfig/Properties.c' || echo '$(srcdir)/'`./FontConfig/Properties.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Properties.Tpo ./FontConfig/$(DEPDIR)/font_manager-Properties.Po
#	$(AM_V_CC)source='./FontConfig/Properties.c' object='./FontConfig/font_manager-Properties.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Properties.o `test -f './FontConfig/Properties.c' || echo '$(srcdir)/'`./FontConfig/Properties.c

./FontConfig/font_manager-Properties.obj: ./FontConfig/Properties.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Properties.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Properties.Tpo -c -o ./FontConfig/font_manager-Properties.obj `if test -f './FontConfig/Properties.c'; then $(CYGPATH_W) './FontConfig/Properties.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Properties.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Properties.Tpo ./FontConfig/$(DEPDIR)/font_manager-Properties.Po
#	$(AM_V_CC)source='./FontConfig/Properties.c' object='./FontConfig/font_manager-Properties.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Properties.obj `if test -f './FontConfig/Properties.c'; then $(CYGPATH_W) './FontConfig/Properties.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Properties.c'; fi`

./FontConfig/font_manager-Reject.o: ./FontConfig/Reject.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Reject.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Reject.Tpo -c -o ./FontConfig/font_manager-Reject.o `test -f './FontConfig/Reject.c' || echo '$(srcdir)/'`./FontConfig/Reject.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Reject.Tpo ./FontConfig/$(DEPDIR)/font_manager-Reject.Po
#	$(AM_V_CC)source='./FontConfig/Reject.c' object='./FontConfig/font_manager-Reject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Reject.o `test -f './FontConfig/Reject.c' || echo '$(srcdir)/'`./FontConfig/Reject.c

./FontConfig/font_manager-Reject.obj: ./FontConfig/Reject.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Reject.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Reject.Tpo -c -o ./FontConfig/font_manager-Reject.obj `if test -f './FontConfig/Reject.c'; then $(CYGPATH_W) './FontConfig/Reject.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Reject.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Reject.Tpo ./FontConfig/$(DEPDIR)/font_manager-Reject.Po
#	$(AM_V_CC)source='./FontConfig/Reject.c' object='./FontConfig/font_manager-Reject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Reject.obj `if test -f './FontConfig/Reject.c'; then $(CYGPATH_W) './FontConfig/Reject.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Reject.c'; fi`

./FontConfig/font_manager-Selections.o: ./FontConfig/Selections.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Selections.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Selections.Tpo -c -o ./FontConfig/font_manager-Selections.o `test -f './FontConfig/Selections.c' || echo '$(srcdir)/'`./FontConfig/Selections.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Selections.Tpo ./FontConfig/$(DEPDIR)/font_manager-Selections.Po
#	$(AM_V_CC)source='./FontConfig/Selections.c' object='./FontConfig/font_manager-Selections.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Selections.o `test -f './FontConfig/Selections.c' || echo '$(srcdir)/'`./FontConfig/Selections.c

./FontConfig/font_manager-Selections.obj: ./FontConfig/Selections.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Selections.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Selections.Tpo -c -o ./FontConfig/font_manager-Selections.obj `if test -f './FontConfig/Selections.c'; then $(CYGPATH_W) './FontConfig/Selections.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Selections.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Selections.Tpo ./FontConfig/$(DEPDIR)/font_manager-Selections.Po
#	$(AM_V_CC)source='./FontConfig/Selections.c' object='./FontConfig/font_manager-Selections.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Selections.obj `if test -f './FontConfig/Selections.c'; then $(CYGPATH_W) './FontConfig/Selections.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Selections.c'; fi`

./FontConfig/font_manager-Sources.o: ./FontConfig/Sources.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Sources.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Sources.Tpo -c -o ./FontConfig/font_manager-Sources.o `test -f './FontConfig/Sources.c' || echo '$(srcdir)/'`./FontConfig/Sources.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Sources.Tpo ./FontConfig/$(DEPDIR)/font_manager-Sources.Po
#	$(AM_V_CC)source='./FontConfig/Sources.c' object='./FontConfig/font_manager-Sources.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Sources.o `test -f './FontConfig/Sources.c' || echo '$(srcdir)/'`./FontConfig/Sources.c

./FontConfig/font_manager-Sources.obj: ./FontConfig/Sources.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-Sources.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-Sources.Tpo -c -o ./FontConfig/font_manager-Sources.obj `if test -f './FontConfig/Sources.c'; then $(CYGPATH_W) './FontConfig/Sources.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Sources.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-Sources.Tpo ./FontConfig/$(DEPDIR)/font_manager-Sources.Po
#	$(AM_V_CC)source='./FontConfig/Sources.c' object='./FontConfig/font_manager-Sources.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-Sources.obj `if test -f './FontConfig/Sources.c'; then $(CYGPATH_W) './FontConfig/Sources.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/Sources.c'; fi`

./FontConfig/font_manager-XmlWriter.o: ./FontConfig/XmlWriter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-XmlWriter.o -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-XmlWriter.Tpo -c -o ./FontConfig/font_manager-XmlWriter.o `test -f './FontConfig/XmlWriter.c' || echo '$(srcdir)/'`./FontConfig/XmlWriter.c
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-XmlWriter.Tpo ./FontConfig/$(DEPDIR)/font_manager-XmlWriter.Po
#	$(AM_V_CC)source='./FontConfig/XmlWriter.c' object='./FontConfig/font_manager-XmlWriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-XmlWriter.o `test -f './FontConfig/XmlWriter.c' || echo '$(srcdir)/'`./FontConfig/XmlWriter.c

./FontConfig/font_manager-XmlWriter.obj: ./FontConfig/XmlWriter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./FontConfig/font_manager-XmlWriter.obj -MD -MP -MF ./FontConfig/$(DEPDIR)/font_manager-XmlWriter.Tpo -c -o ./FontConfig/font_manager-XmlWriter.obj `if test -f './FontConfig/XmlWriter.c'; then $(CYGPATH_W) './FontConfig/XmlWriter.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/XmlWriter.c'; fi`
	$(AM_V_at)$(am__mv) ./FontConfig/$(DEPDIR)/font_manager-XmlWriter.Tpo ./FontConfig/$(DEPDIR)/font_manager-XmlWriter.Po
#	$(AM_V_CC)source='./FontConfig/XmlWriter.c' object='./FontConfig/font_manager-XmlWriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./FontConfig/font_manager-XmlWriter.obj `if test -f './FontConfig/XmlWriter.c'; then $(CYGPATH_W) './FontConfig/XmlWriter.c'; else $(CYGPATH_W) '$(srcdir)/./FontConfig/XmlWriter.c'; fi`

./Glue/font_manager-Glue.o: ./Glue/Glue.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Glue/font_manager-Glue.o -MD -MP -MF ./Glue/$(DEPDIR)/font_manager-Glue.Tpo -c -o ./Glue/font_manager-Glue.o `test -f './Glue/Glue.c' || echo '$(srcdir)/'`./Glue/Glue.c
	$(AM_V_at)$(am__mv) ./Glue/$(DEPDIR)/font_manager-Glue.Tpo ./Glue/$(DEPDIR)/font_manager-Glue.Po
#	$(AM_V_CC)source='./Glue/Glue.c' object='./Glue/font_manager-Glue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Glue/font_manager-Glue.o `test -f './Glue/Glue.c' || echo '$(srcdir)/'`./Glue/Glue.c

./Glue/font_manager-Glue.obj: ./Glue/Glue.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Glue/font_manager-Glue.obj -MD -MP -MF ./Glue/$(DEPDIR)/font_manager-Glue.Tpo -c -o ./Glue/font_manager-Glue.obj `if test -f './Glue/Glue.c'; then $(CYGPATH_W) './Glue/Glue.c'; else $(CYGPATH_W) '$(srcdir)/./Glue/Glue.c'; fi`
	$(AM_V_at)$(am__mv) ./Glue/$(DEPDIR)/font_manager-Glue.Tpo ./Glue/$(DEPDIR)/font_manager-Glue.Po
#	$(AM_V_CC)source='./Glue/Glue.c' object='./Glue/font_manager-Glue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Glue/font_manager-Glue.obj `if test -f './Glue/Glue.c'; then $(CYGPATH_W) './Glue/Glue.c'; else $(CYGPATH_W) '$(srcdir)/./Glue/Glue.c'; fi`

./Json/font_manager-Cacheable.o: ./Json/Cacheable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Json/font_manager-Cacheable.o -MD -MP -MF ./Json/$(DEPDIR)/font_manager-Cacheable.Tpo -c -o ./Json/font_manager-Cacheable.o `test -f './Json/Cacheable.c' || echo '$(srcdir)/'`./Json/Cacheable.c
	$(AM_V_at)$(am__mv) ./Json/$(DEPDIR)/font_manager-Cacheable.Tpo ./Json/$(DEPDIR)/font_manager-Cacheable.Po
#	$(AM_V_CC)source='./Json/Cacheable.c' object='./Json/font_manager-Cacheable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Json/font_manager-Cacheable.o `test -f './Json/Cacheable.c' || echo '$(srcdir)/'`./Json/Cacheable.c

./Json/font_manager-Cacheable.obj: ./Json/Cacheable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Json/font_manager-Cacheable.obj -MD -MP -MF ./Json/$(DEPDIR)/font_manager-Cacheable.Tpo -c -o ./Json/font_manager-Cacheable.obj `if test -f './Json/Cacheable.c'; then $(CYGPATH_W) './Json/Cacheable.c'; else $(CYGPATH_W) '$(srcdir)/./Json/Cacheable.c'; fi`
	$(AM_V_at)$(am__mv) ./Json/$(DEPDIR)/font_manager-Cacheable.Tpo ./Json/$(DEPDIR)/font_manager-Cacheable.Po
#	$(AM_V_CC)source='./Json/Cacheable.c' object='./Json/font_manager-Cacheable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Json/font_manager-Cacheable.obj `if test -f './Json/Cacheable.c'; then $(CYGPATH_W) './Json/Cacheable.c'; else $(CYGPATH_W) '$(srcdir)/./Json/Cacheable.c'; fi`

./Json/font_manager-JsonWriter.o: ./Json/JsonWriter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Json/font_manager-JsonWriter.o -MD -MP -MF ./Json/$(DEPDIR)/font_manager-JsonWriter.Tpo -c -o ./Json/font_manager-JsonWriter.o `test -f './Json/JsonWriter.c' || echo '$(srcdir)/'`./Json/JsonWriter.c
	$(AM_V_at)$(am__mv) ./Json/$(DEPDIR)/font_manager-JsonWriter.Tpo ./Json/$(DEPDIR)/font_manager-JsonWriter.Po
#	$(AM_V_CC)source='./Json/JsonWriter.c' object='./Json/font_manager-JsonWriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Json/font_manager-JsonWriter.o `test -f './Json/JsonWriter.c' || echo '$(srcdir)/'`./Json/JsonWriter.c

./Json/font_manager-JsonWriter.obj: ./Json/JsonWriter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Json/font_manager-JsonWriter.obj -MD -MP -MF ./Json/$(DEPDIR)/font_manager-JsonWriter.Tpo -c -o ./Json/font_manager-JsonWriter.obj `if test -f './Json/JsonWriter.c'; then $(CYGPATH_W) './Json/JsonWriter.c'; else $(CYGPATH_W) '$(srcdir)/./Json/JsonWriter.c'; fi`
	$(AM_V_at)$(am__mv) ./Json/$(DEPDIR)/font_manager-JsonWriter.Tpo ./Json/$(DEPDIR)/font_manager-JsonWriter.Po
#	$(AM_V_CC)source='./Json/JsonWriter.c' object='./Json/font_manager-JsonWriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Json/font_manager-JsonWriter.obj `if test -f './Json/JsonWriter.c'; then $(CYGPATH_W) './Json/JsonWriter.c'; else $(CYGPATH_W) '$(srcdir)/./Json/JsonWriter.c'; fi`

./Models/font_manager-CategoryModel.o: ./Models/CategoryModel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Models/font_manager-CategoryModel.o -MD -MP -MF ./Models/$(DEPDIR)/font_manager-CategoryModel.Tpo -c -o ./Models/font_manager-CategoryModel.o `test -f './Models/CategoryModel.c' || echo '$(srcdir)/'`./Models/CategoryModel.c
	$(AM_V_at)$(am__mv) ./Models/$(DEPDIR)/font_manager-CategoryModel.Tpo ./Models/$(DEPDIR)/font_manager-CategoryModel.Po
#	$(AM_V_CC)source='./Models/CategoryModel.c' object='./Models/font_manager-CategoryModel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Models/font_manager-CategoryModel.o `test -f './Models/CategoryModel.c' || echo '$(srcdir)/'`./Models/CategoryModel.c

./Models/font_manager-CategoryModel.obj: ./Models/CategoryModel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Models/font_manager-CategoryModel.obj -MD -MP -MF ./Models/$(DEPDIR)/font_manager-CategoryModel.Tpo -c -o ./Models/font_manager-CategoryModel.obj `if test -f './Models/CategoryModel.c'; then $(CYGPATH_W) './Models/CategoryModel.c'; else $(CYGPATH_W) '$(srcdir)/./Models/CategoryModel.c'; fi`
	$(AM_V_at)$(am__mv) ./Models/$(DEPDIR)/font_manager-CategoryModel.Tpo ./Models/$(DEPDIR)/font_manager-CategoryModel.Po
#	$(AM_V_CC)source='./Models/CategoryModel.c' object='./Models/font_manager-CategoryModel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Models/font_manager-CategoryModel.obj `if test -f './Models/CategoryModel.c'; then $(CYGPATH_W) './Models/CategoryModel.c'; else $(CYGPATH_W) '$(srcdir)/./Models/CategoryModel.c'; fi`

./Models/font_manager-CollectionModel.o: ./Models/CollectionModel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Models/font_manager-CollectionModel.o -MD -MP -MF ./Models/$(DEPDIR)/font_manager-CollectionModel.Tpo -c -o ./Models/font_manager-CollectionModel.o `test -f './Models/CollectionModel.c' || echo '$(srcdir)/'`./Models/CollectionModel.c
	$(AM_V_at)$(am__mv) ./Models/$(DEPDIR)/font_manager-CollectionModel.Tpo ./Models/$(DEPDIR)/font_manager-CollectionModel.Po
#	$(AM_V_CC)source='./Models/CollectionModel.c' object='./Models/font_manager-CollectionModel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Models/font_manager-CollectionModel.o `test -f './Models/CollectionModel.c' || echo '$(srcdir)/'`./Models/CollectionModel.c

./Models/font_manager-CollectionModel.obj: ./Models/CollectionModel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Models/font_manager-CollectionModel.obj -MD -MP -MF ./Models/$(DEPDIR)/font_manager-CollectionModel.Tpo -c -o ./Models/font_manager-CollectionModel.obj `if test -f './Models/CollectionModel.c'; then $(CYGPATH_W) './Models/CollectionModel.c'; else $(CYGPATH_W) '$(srcdir)/./Models/CollectionModel.c'; fi`
	$(AM_V_at)$(am__mv) ./Models/$(DEPDIR)/font_manager-CollectionModel.Tpo ./Models/$(DEPDIR)/font_manager-CollectionModel.Po
#	$(AM_V_CC)source='./Models/CollectionModel.c' object='./Models/font_manager-CollectionModel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Models/font_manager-CollectionModel.obj `if test -f './Models/CollectionModel.c'; then $(CYGPATH_W) './Models/CollectionModel.c'; else $(CYGPATH_W) '$(srcdir)/./Models/CollectionModel.c'; fi`

./Models/font_manager-FontModel.o: ./Models/FontModel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Models/font_manager-FontModel.o -MD -MP -MF ./Models/$(DEPDIR)/font_manager-FontModel.Tpo -c -o ./Models/font_manager-FontModel.o `test -f './Models/FontModel.c' || echo '$(srcdir)/'`./Models/FontModel.c
	$(AM_V_at)$(am__mv) ./Models/$(DEPDIR)/font_manager-FontModel.Tpo ./Models/$(DEPDIR)/font_manager-FontModel.Po
#	$(AM_V_CC)source='./Models/FontModel.c' object='./Models/font_manager-FontModel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Models/font_manager-FontModel.o `test -f './Models/FontModel.c' || echo '$(srcdir)/'`./Models/FontModel.c

./Models/font_manager-FontModel.obj: ./Models/FontModel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Models/font_manager-FontModel.obj -MD -MP -MF ./Models/$(DEPDIR)/font_manager-FontModel.Tpo -c -o ./Models/font_manager-FontModel.obj `if test -f './Models/FontModel.c'; then $(CYGPATH_W) './Models/FontModel.c'; else $(CYGPATH_W) '$(srcdir)/./Models/FontModel.c'; fi`
	$(AM_V_at)$(am__mv) ./Models/$(DEPDIR)/font_manager-FontModel.Tpo ./Models/$(DEPDIR)/font_manager-FontModel.Po
#	$(AM_V_CC)source='./Models/FontModel.c' object='./Models/font_manager-FontModel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Models/font_manager-FontModel.obj `if test -f './Models/FontModel.c'; then $(CYGPATH_W) './Models/FontModel.c'; else $(CYGPATH_W) '$(srcdir)/./Models/FontModel.c'; fi`

./Models/font_manager-UserFontModel.o: ./Models/UserFontModel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Models/font_manager-UserFontModel.o -MD -MP -MF ./Models/$(DEPDIR)/font_manager-UserFontModel.Tpo -c -o ./Models/font_manager-UserFontModel.o `test -f './Models/UserFontModel.c' || echo '$(srcdir)/'`./Models/UserFontModel.c
	$(AM_V_at)$(am__mv) ./Models/$(DEPDIR)/font_manager-UserFontModel.Tpo ./Models/$(DEPDIR)/font_manager-UserFontModel.Po
#	$(AM_V_CC)source='./Models/UserFontModel.c' object='./Models/font_manager-UserFontModel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Models/font_manager-UserFontModel.o `test -f './Models/UserFontModel.c' || echo '$(srcdir)/'`./Models/UserFontModel.c

./Models/font_manager-UserFontModel.obj: ./Models/UserFontModel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./Models/font_manager-UserFontModel.obj -MD -MP -MF ./Models/$(DEPDIR)/font_manager-UserFontModel.Tpo -c -o ./Models/font_manager-UserFontModel.obj `if test -f './Models/UserFontModel.c'; then $(CYGPATH_W) './Models/UserFontModel.c'; else $(CYGPATH_W) '$(srcdir)/./Models/UserFontModel.c'; fi`
	$(AM_V_at)$(am__mv) ./Models/$(DEPDIR)/font_manager-UserFontModel.Tpo ./Models/$(DEPDIR)/font_manager-UserFontModel.Po
#	$(AM_V_CC)source='./Models/UserFontModel.c' object='./Models/font_manager-UserFontModel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./Models/font_manager-UserFontModel.obj `if test -f './Models/UserFontModel.c'; then $(CYGPATH_W) './Models/UserFontModel.c'; else $(CYGPATH_W) '$(srcdir)/./Models/UserFontModel.c'; fi`

./UX/CharacterMap/font_manager-CharacterDetails.o: ./UX/CharacterMap/CharacterDetails.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/CharacterMap/font_manager-CharacterDetails.o -MD -MP -MF ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterDetails.Tpo -c -o ./UX/CharacterMap/font_manager-CharacterDetails.o `test -f './UX/CharacterMap/CharacterDetails.c' || echo '$(srcdir)/'`./UX/CharacterMap/CharacterDetails.c
	$(AM_V_at)$(am__mv) ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterDetails.Tpo ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterDetails.Po
#	$(AM_V_CC)source='./UX/CharacterMap/CharacterDetails.c' object='./UX/CharacterMap/font_manager-CharacterDetails.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/CharacterMap/font_manager-CharacterDetails.o `test -f './UX/CharacterMap/CharacterDetails.c' || echo '$(srcdir)/'`./UX/CharacterMap/CharacterDetails.c

./UX/CharacterMap/font_manager-CharacterDetails.obj: ./UX/CharacterMap/CharacterDetails.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/CharacterMap/font_manager-CharacterDetails.obj -MD -MP -MF ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterDetails.Tpo -c -o ./UX/CharacterMap/font_manager-CharacterDetails.obj `if test -f './UX/CharacterMap/CharacterDetails.c'; then $(CYGPATH_W) './UX/CharacterMap/CharacterDetails.c'; else $(CYGPATH_W) '$(srcdir)/./UX/CharacterMap/CharacterDetails.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterDetails.Tpo ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterDetails.Po
#	$(AM_V_CC)source='./UX/CharacterMap/CharacterDetails.c' object='./UX/CharacterMap/font_manager-CharacterDetails.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/CharacterMap/font_manager-CharacterDetails.obj `if test -f './UX/CharacterMap/CharacterDetails.c'; then $(CYGPATH_W) './UX/CharacterMap/CharacterDetails.c'; else $(CYGPATH_W) '$(srcdir)/./UX/CharacterMap/CharacterDetails.c'; fi`

./UX/CharacterMap/font_manager-CharacterMapPane.o: ./UX/CharacterMap/CharacterMapPane.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/CharacterMap/font_manager-CharacterMapPane.o -MD -MP -MF ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapPane.Tpo -c -o ./UX/CharacterMap/font_manager-CharacterMapPane.o `test -f './UX/CharacterMap/CharacterMapPane.c' || echo '$(srcdir)/'`./UX/CharacterMap/CharacterMapPane.c
	$(AM_V_at)$(am__mv) ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapPane.Tpo ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapPane.Po
#	$(AM_V_CC)source='./UX/CharacterMap/CharacterMapPane.c' object='./UX/CharacterMap/font_manager-CharacterMapPane.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/CharacterMap/font_manager-CharacterMapPane.o `test -f './UX/CharacterMap/CharacterMapPane.c' || echo '$(srcdir)/'`./UX/CharacterMap/CharacterMapPane.c

./UX/CharacterMap/font_manager-CharacterMapPane.obj: ./UX/CharacterMap/CharacterMapPane.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/CharacterMap/font_manager-CharacterMapPane.obj -MD -MP -MF ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapPane.Tpo -c -o ./UX/CharacterMap/font_manager-CharacterMapPane.obj `if test -f './UX/CharacterMap/CharacterMapPane.c'; then $(CYGPATH_W) './UX/CharacterMap/CharacterMapPane.c'; else $(CYGPATH_W) '$(srcdir)/./UX/CharacterMap/CharacterMapPane.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapPane.Tpo ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapPane.Po
#	$(AM_V_CC)source='./UX/CharacterMap/CharacterMapPane.c' object='./UX/CharacterMap/font_manager-CharacterMapPane.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/CharacterMap/font_manager-CharacterMapPane.obj `if test -f './UX/CharacterMap/CharacterMapPane.c'; then $(CYGPATH_W) './UX/CharacterMap/CharacterMapPane.c'; else $(CYGPATH_W) '$(srcdir)/./UX/CharacterMap/CharacterMapPane.c'; fi`

./UX/CharacterMap/font_manager-CharacterMapSideBar.o: ./UX/CharacterMap/CharacterMapSideBar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/CharacterMap/font_manager-CharacterMapSideBar.o -MD -MP -MF ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapSideBar.Tpo -c -o ./UX/CharacterMap/font_manager-CharacterMapSideBar.o `test -f './UX/CharacterMap/CharacterMapSideBar.c' || echo '$(srcdir)/'`./UX/CharacterMap/CharacterMapSideBar.c
	$(AM_V_at)$(am__mv) ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapSideBar.Tpo ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapSideBar.Po
#	$(AM_V_CC)source='./UX/CharacterMap/CharacterMapSideBar.c' object='./UX/CharacterMap/font_manager-CharacterMapSideBar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/CharacterMap/font_manager-CharacterMapSideBar.o `test -f './UX/CharacterMap/CharacterMapSideBar.c' || echo '$(srcdir)/'`./UX/CharacterMap/CharacterMapSideBar.c

./UX/CharacterMap/font_manager-CharacterMapSideBar.obj: ./UX/CharacterMap/CharacterMapSideBar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/CharacterMap/font_manager-CharacterMapSideBar.obj -MD -MP -MF ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapSideBar.Tpo -c -o ./UX/CharacterMap/font_manager-CharacterMapSideBar.obj `if test -f './UX/CharacterMap/CharacterMapSideBar.c'; then $(CYGPATH_W) './UX/CharacterMap/CharacterMapSideBar.c'; else $(CYGPATH_W) '$(srcdir)/./UX/CharacterMap/CharacterMapSideBar.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapSideBar.Tpo ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMapSideBar.Po
#	$(AM_V_CC)source='./UX/CharacterMap/CharacterMapSideBar.c' object='./UX/CharacterMap/font_manager-CharacterMapSideBar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/CharacterMap/font_manager-CharacterMapSideBar.obj `if test -f './UX/CharacterMap/CharacterMapSideBar.c'; then $(CYGPATH_W) './UX/CharacterMap/CharacterMapSideBar.c'; else $(CYGPATH_W) '$(srcdir)/./UX/CharacterMap/CharacterMapSideBar.c'; fi`

./UX/CharacterMap/font_manager-CharacterMap.o: ./UX/CharacterMap/CharacterMap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/CharacterMap/font_manager-CharacterMap.o -MD -MP -MF ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMap.Tpo -c -o ./UX/CharacterMap/font_manager-CharacterMap.o `test -f './UX/CharacterMap/CharacterMap.c' || echo '$(srcdir)/'`./UX/CharacterMap/CharacterMap.c
	$(AM_V_at)$(am__mv) ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMap.Tpo ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMap.Po
#	$(AM_V_CC)source='./UX/CharacterMap/CharacterMap.c' object='./UX/CharacterMap/font_manager-CharacterMap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/CharacterMap/font_manager-CharacterMap.o `test -f './UX/CharacterMap/CharacterMap.c' || echo '$(srcdir)/'`./UX/CharacterMap/CharacterMap.c

./UX/CharacterMap/font_manager-CharacterMap.obj: ./UX/CharacterMap/CharacterMap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/CharacterMap/font_manager-CharacterMap.obj -MD -MP -MF ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMap.Tpo -c -o ./UX/CharacterMap/font_manager-CharacterMap.obj `if test -f './UX/CharacterMap/CharacterMap.c'; then $(CYGPATH_W) './UX/CharacterMap/CharacterMap.c'; else $(CYGPATH_W) '$(srcdir)/./UX/CharacterMap/CharacterMap.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMap.Tpo ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterMap.Po
#	$(AM_V_CC)source='./UX/CharacterMap/CharacterMap.c' object='./UX/CharacterMap/font_manager-CharacterMap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/CharacterMap/font_manager-CharacterMap.obj `if test -f './UX/CharacterMap/CharacterMap.c'; then $(CYGPATH_W) './UX/CharacterMap/CharacterMap.c'; else $(CYGPATH_W) '$(srcdir)/./UX/CharacterMap/CharacterMap.c'; fi`

./UX/CharacterMap/font_manager-CharacterTable.o: ./UX/CharacterMap/CharacterTable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/CharacterMap/font_manager-CharacterTable.o -MD -MP -MF ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterTable.Tpo -c -o ./UX/CharacterMap/font_manager-CharacterTable.o `test -f './UX/CharacterMap/CharacterTable.c' || echo '$(srcdir)/'`./UX/CharacterMap/CharacterTable.c
	$(AM_V_at)$(am__mv) ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterTable.Tpo ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterTable.Po
#	$(AM_V_CC)source='./UX/CharacterMap/CharacterTable.c' object='./UX/CharacterMap/font_manager-CharacterTable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/CharacterMap/font_manager-CharacterTable.o `test -f './UX/CharacterMap/CharacterTable.c' || echo '$(srcdir)/'`./UX/CharacterMap/CharacterTable.c

./UX/CharacterMap/font_manager-CharacterTable.obj: ./UX/CharacterMap/CharacterTable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/CharacterMap/font_manager-CharacterTable.obj -MD -MP -MF ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterTable.Tpo -c -o ./UX/CharacterMap/font_manager-CharacterTable.obj `if test -f './UX/CharacterMap/CharacterTable.c'; then $(CYGPATH_W) './UX/CharacterMap/CharacterTable.c'; else $(CYGPATH_W) '$(srcdir)/./UX/CharacterMap/CharacterTable.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterTable.Tpo ./UX/CharacterMap/$(DEPDIR)/font_manager-CharacterTable.Po
#	$(AM_V_CC)source='./UX/CharacterMap/CharacterTable.c' object='./UX/CharacterMap/font_manager-CharacterTable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/CharacterMap/font_manager-CharacterTable.obj `if test -f './UX/CharacterMap/CharacterTable.c'; then $(CYGPATH_W) './UX/CharacterMap/CharacterTable.c'; else $(CYGPATH_W) '$(srcdir)/./UX/CharacterMap/CharacterTable.c'; fi`

./UX/Controls/font_manager-BaseControls.o: ./UX/Controls/BaseControls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-BaseControls.o -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-BaseControls.Tpo -c -o ./UX/Controls/font_manager-BaseControls.o `test -f './UX/Controls/BaseControls.c' || echo '$(srcdir)/'`./UX/Controls/BaseControls.c
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-BaseControls.Tpo ./UX/Controls/$(DEPDIR)/font_manager-BaseControls.Po
#	$(AM_V_CC)source='./UX/Controls/BaseControls.c' object='./UX/Controls/font_manager-BaseControls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-BaseControls.o `test -f './UX/Controls/BaseControls.c' || echo '$(srcdir)/'`./UX/Controls/BaseControls.c

./UX/Controls/font_manager-BaseControls.obj: ./UX/Controls/BaseControls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-BaseControls.obj -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-BaseControls.Tpo -c -o ./UX/Controls/font_manager-BaseControls.obj `if test -f './UX/Controls/BaseControls.c'; then $(CYGPATH_W) './UX/Controls/BaseControls.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/BaseControls.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-BaseControls.Tpo ./UX/Controls/$(DEPDIR)/font_manager-BaseControls.Po
#	$(AM_V_CC)source='./UX/Controls/BaseControls.c' object='./UX/Controls/font_manager-BaseControls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-BaseControls.obj `if test -f './UX/Controls/BaseControls.c'; then $(CYGPATH_W) './UX/Controls/BaseControls.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/BaseControls.c'; fi`

./UX/Controls/font_manager-CollectionControls.o: ./UX/Controls/CollectionControls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-CollectionControls.o -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-CollectionControls.Tpo -c -o ./UX/Controls/font_manager-CollectionControls.o `test -f './UX/Controls/CollectionControls.c' || echo '$(srcdir)/'`./UX/Controls/CollectionControls.c
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-CollectionControls.Tpo ./UX/Controls/$(DEPDIR)/font_manager-CollectionControls.Po
#	$(AM_V_CC)source='./UX/Controls/CollectionControls.c' object='./UX/Controls/font_manager-CollectionControls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-CollectionControls.o `test -f './UX/Controls/CollectionControls.c' || echo '$(srcdir)/'`./UX/Controls/CollectionControls.c

./UX/Controls/font_manager-CollectionControls.obj: ./UX/Controls/CollectionControls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-CollectionControls.obj -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-CollectionControls.Tpo -c -o ./UX/Controls/font_manager-CollectionControls.obj `if test -f './UX/Controls/CollectionControls.c'; then $(CYGPATH_W) './UX/Controls/CollectionControls.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/CollectionControls.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-CollectionControls.Tpo ./UX/Controls/$(DEPDIR)/font_manager-CollectionControls.Po
#	$(AM_V_CC)source='./UX/Controls/CollectionControls.c' object='./UX/Controls/font_manager-CollectionControls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-CollectionControls.obj `if test -f './UX/Controls/CollectionControls.c'; then $(CYGPATH_W) './UX/Controls/CollectionControls.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/CollectionControls.c'; fi`

./UX/Controls/font_manager-CompareControls.o: ./UX/Controls/CompareControls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-CompareControls.o -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-CompareControls.Tpo -c -o ./UX/Controls/font_manager-CompareControls.o `test -f './UX/Controls/CompareControls.c' || echo '$(srcdir)/'`./UX/Controls/CompareControls.c
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-CompareControls.Tpo ./UX/Controls/$(DEPDIR)/font_manager-CompareControls.Po
#	$(AM_V_CC)source='./UX/Controls/CompareControls.c' object='./UX/Controls/font_manager-CompareControls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-CompareControls.o `test -f './UX/Controls/CompareControls.c' || echo '$(srcdir)/'`./UX/Controls/CompareControls.c

./UX/Controls/font_manager-CompareControls.obj: ./UX/Controls/CompareControls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-CompareControls.obj -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-CompareControls.Tpo -c -o ./UX/Controls/font_manager-CompareControls.obj `if test -f './UX/Controls/CompareControls.c'; then $(CYGPATH_W) './UX/Controls/CompareControls.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/CompareControls.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-CompareControls.Tpo ./UX/Controls/$(DEPDIR)/font_manager-CompareControls.Po
#	$(AM_V_CC)source='./UX/Controls/CompareControls.c' object='./UX/Controls/font_manager-CompareControls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-CompareControls.obj `if test -f './UX/Controls/CompareControls.c'; then $(CYGPATH_W) './UX/Controls/CompareControls.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/CompareControls.c'; fi`

./UX/Controls/font_manager-FontListControls.o: ./UX/Controls/FontListControls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-FontListControls.o -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-FontListControls.Tpo -c -o ./UX/Controls/font_manager-FontListControls.o `test -f './UX/Controls/FontListControls.c' || echo '$(srcdir)/'`./UX/Controls/FontListControls.c
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-FontListControls.Tpo ./UX/Controls/$(DEPDIR)/font_manager-FontListControls.Po
#	$(AM_V_CC)source='./UX/Controls/FontListControls.c' object='./UX/Controls/font_manager-FontListControls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-FontListControls.o `test -f './UX/Controls/FontListControls.c' || echo '$(srcdir)/'`./UX/Controls/FontListControls.c

./UX/Controls/font_manager-FontListControls.obj: ./UX/Controls/FontListControls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-FontListControls.obj -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-FontListControls.Tpo -c -o ./UX/Controls/font_manager-FontListControls.obj `if test -f './UX/Controls/FontListControls.c'; then $(CYGPATH_W) './UX/Controls/FontListControls.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/FontListControls.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-FontListControls.Tpo ./UX/Controls/$(DEPDIR)/font_manager-FontListControls.Po
#	$(AM_V_CC)source='./UX/Controls/FontListControls.c' object='./UX/Controls/font_manager-FontListControls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-FontListControls.obj `if test -f './UX/Controls/FontListControls.c'; then $(CYGPATH_W) './UX/Controls/FontListControls.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/FontListControls.c'; fi`

./UX/Controls/font_manager-PreviewControls.o: ./UX/Controls/PreviewControls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-PreviewControls.o -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-PreviewControls.Tpo -c -o ./UX/Controls/font_manager-PreviewControls.o `test -f './UX/Controls/PreviewControls.c' || echo '$(srcdir)/'`./UX/Controls/PreviewControls.c
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-PreviewControls.Tpo ./UX/Controls/$(DEPDIR)/font_manager-PreviewControls.Po
#	$(AM_V_CC)source='./UX/Controls/PreviewControls.c' object='./UX/Controls/font_manager-PreviewControls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-PreviewControls.o `test -f './UX/Controls/PreviewControls.c' || echo '$(srcdir)/'`./UX/Controls/PreviewControls.c

./UX/Controls/font_manager-PreviewControls.obj: ./UX/Controls/PreviewControls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-PreviewControls.obj -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-PreviewControls.Tpo -c -o ./UX/Controls/font_manager-PreviewControls.obj `if test -f './UX/Controls/PreviewControls.c'; then $(CYGPATH_W) './UX/Controls/PreviewControls.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/PreviewControls.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-PreviewControls.Tpo ./UX/Controls/$(DEPDIR)/font_manager-PreviewControls.Po
#	$(AM_V_CC)source='./UX/Controls/PreviewControls.c' object='./UX/Controls/font_manager-PreviewControls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-PreviewControls.obj `if test -f './UX/Controls/PreviewControls.c'; then $(CYGPATH_W) './UX/Controls/PreviewControls.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/PreviewControls.c'; fi`

./UX/Controls/font_manager-TitleBar.o: ./UX/Controls/TitleBar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-TitleBar.o -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-TitleBar.Tpo -c -o ./UX/Controls/font_manager-TitleBar.o `test -f './UX/Controls/TitleBar.c' || echo '$(srcdir)/'`./UX/Controls/TitleBar.c
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-TitleBar.Tpo ./UX/Controls/$(DEPDIR)/font_manager-TitleBar.Po
#	$(AM_V_CC)source='./UX/Controls/TitleBar.c' object='./UX/Controls/font_manager-TitleBar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-TitleBar.o `test -f './UX/Controls/TitleBar.c' || echo '$(srcdir)/'`./UX/Controls/TitleBar.c

./UX/Controls/font_manager-TitleBar.obj: ./UX/Controls/TitleBar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Controls/font_manager-TitleBar.obj -MD -MP -MF ./UX/Controls/$(DEPDIR)/font_manager-TitleBar.Tpo -c -o ./UX/Controls/font_manager-TitleBar.obj `if test -f './UX/Controls/TitleBar.c'; then $(CYGPATH_W) './UX/Controls/TitleBar.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/TitleBar.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Controls/$(DEPDIR)/font_manager-TitleBar.Tpo ./UX/Controls/$(DEPDIR)/font_manager-TitleBar.Po
#	$(AM_V_CC)source='./UX/Controls/TitleBar.c' object='./UX/Controls/font_manager-TitleBar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Controls/font_manager-TitleBar.obj `if test -f './UX/Controls/TitleBar.c'; then $(CYGPATH_W) './UX/Controls/TitleBar.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Controls/TitleBar.c'; fi`

./UX/Dialogs/font_manager-FileSelector.o: ./UX/Dialogs/FileSelector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Dialogs/font_manager-FileSelector.o -MD -MP -MF ./UX/Dialogs/$(DEPDIR)/font_manager-FileSelector.Tpo -c -o ./UX/Dialogs/font_manager-FileSelector.o `test -f './UX/Dialogs/FileSelector.c' || echo '$(srcdir)/'`./UX/Dialogs/FileSelector.c
	$(AM_V_at)$(am__mv) ./UX/Dialogs/$(DEPDIR)/font_manager-FileSelector.Tpo ./UX/Dialogs/$(DEPDIR)/font_manager-FileSelector.Po
#	$(AM_V_CC)source='./UX/Dialogs/FileSelector.c' object='./UX/Dialogs/font_manager-FileSelector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Dialogs/font_manager-FileSelector.o `test -f './UX/Dialogs/FileSelector.c' || echo '$(srcdir)/'`./UX/Dialogs/FileSelector.c

./UX/Dialogs/font_manager-FileSelector.obj: ./UX/Dialogs/FileSelector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Dialogs/font_manager-FileSelector.obj -MD -MP -MF ./UX/Dialogs/$(DEPDIR)/font_manager-FileSelector.Tpo -c -o ./UX/Dialogs/font_manager-FileSelector.obj `if test -f './UX/Dialogs/FileSelector.c'; then $(CYGPATH_W) './UX/Dialogs/FileSelector.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Dialogs/FileSelector.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Dialogs/$(DEPDIR)/font_manager-FileSelector.Tpo ./UX/Dialogs/$(DEPDIR)/font_manager-FileSelector.Po
#	$(AM_V_CC)source='./UX/Dialogs/FileSelector.c' object='./UX/Dialogs/font_manager-FileSelector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Dialogs/font_manager-FileSelector.obj `if test -f './UX/Dialogs/FileSelector.c'; then $(CYGPATH_W) './UX/Dialogs/FileSelector.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Dialogs/FileSelector.c'; fi`

./UX/Dialogs/font_manager-Migration.o: ./UX/Dialogs/Migration.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Dialogs/font_manager-Migration.o -MD -MP -MF ./UX/Dialogs/$(DEPDIR)/font_manager-Migration.Tpo -c -o ./UX/Dialogs/font_manager-Migration.o `test -f './UX/Dialogs/Migration.c' || echo '$(srcdir)/'`./UX/Dialogs/Migration.c
	$(AM_V_at)$(am__mv) ./UX/Dialogs/$(DEPDIR)/font_manager-Migration.Tpo ./UX/Dialogs/$(DEPDIR)/font_manager-Migration.Po
#	$(AM_V_CC)source='./UX/Dialogs/Migration.c' object='./UX/Dialogs/font_manager-Migration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Dialogs/font_manager-Migration.o `test -f './UX/Dialogs/Migration.c' || echo '$(srcdir)/'`./UX/Dialogs/Migration.c

./UX/Dialogs/font_manager-Migration.obj: ./UX/Dialogs/Migration.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Dialogs/font_manager-Migration.obj -MD -MP -MF ./UX/Dialogs/$(DEPDIR)/font_manager-Migration.Tpo -c -o ./UX/Dialogs/font_manager-Migration.obj `if test -f './UX/Dialogs/Migration.c'; then $(CYGPATH_W) './UX/Dialogs/Migration.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Dialogs/Migration.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Dialogs/$(DEPDIR)/font_manager-Migration.Tpo ./UX/Dialogs/$(DEPDIR)/font_manager-Migration.Po
#	$(AM_V_CC)source='./UX/Dialogs/Migration.c' object='./UX/Dialogs/font_manager-Migration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Dialogs/font_manager-Migration.obj `if test -f './UX/Dialogs/Migration.c'; then $(CYGPATH_W) './UX/Dialogs/Migration.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Dialogs/Migration.c'; fi`

./UX/Dialogs/font_manager-NotImplemented.o: ./UX/Dialogs/NotImplemented.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Dialogs/font_manager-NotImplemented.o -MD -MP -MF ./UX/Dialogs/$(DEPDIR)/font_manager-NotImplemented.Tpo -c -o ./UX/Dialogs/font_manager-NotImplemented.o `test -f './UX/Dialogs/NotImplemented.c' || echo '$(srcdir)/'`./UX/Dialogs/NotImplemented.c
	$(AM_V_at)$(am__mv) ./UX/Dialogs/$(DEPDIR)/font_manager-NotImplemented.Tpo ./UX/Dialogs/$(DEPDIR)/font_manager-NotImplemented.Po
#	$(AM_V_CC)source='./UX/Dialogs/NotImplemented.c' object='./UX/Dialogs/font_manager-NotImplemented.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Dialogs/font_manager-NotImplemented.o `test -f './UX/Dialogs/NotImplemented.c' || echo '$(srcdir)/'`./UX/Dialogs/NotImplemented.c

./UX/Dialogs/font_manager-NotImplemented.obj: ./UX/Dialogs/NotImplemented.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Dialogs/font_manager-NotImplemented.obj -MD -MP -MF ./UX/Dialogs/$(DEPDIR)/font_manager-NotImplemented.Tpo -c -o ./UX/Dialogs/font_manager-NotImplemented.obj `if test -f './UX/Dialogs/NotImplemented.c'; then $(CYGPATH_W) './UX/Dialogs/NotImplemented.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Dialogs/NotImplemented.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Dialogs/$(DEPDIR)/font_manager-NotImplemented.Tpo ./UX/Dialogs/$(DEPDIR)/font_manager-NotImplemented.Po
#	$(AM_V_CC)source='./UX/Dialogs/NotImplemented.c' object='./UX/Dialogs/font_manager-NotImplemented.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Dialogs/font_manager-NotImplemented.obj `if test -f './UX/Dialogs/NotImplemented.c'; then $(CYGPATH_W) './UX/Dialogs/NotImplemented.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Dialogs/NotImplemented.c'; fi`

./UX/FontConfig/font_manager-DisplayPropertiesPane.o: ./UX/FontConfig/DisplayPropertiesPane.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/FontConfig/font_manager-DisplayPropertiesPane.o -MD -MP -MF ./UX/FontConfig/$(DEPDIR)/font_manager-DisplayPropertiesPane.Tpo -c -o ./UX/FontConfig/font_manager-DisplayPropertiesPane.o `test -f './UX/FontConfig/DisplayPropertiesPane.c' || echo '$(srcdir)/'`./UX/FontConfig/DisplayPropertiesPane.c
	$(AM_V_at)$(am__mv) ./UX/FontConfig/$(DEPDIR)/font_manager-DisplayPropertiesPane.Tpo ./UX/FontConfig/$(DEPDIR)/font_manager-DisplayPropertiesPane.Po
#	$(AM_V_CC)source='./UX/FontConfig/DisplayPropertiesPane.c' object='./UX/FontConfig/font_manager-DisplayPropertiesPane.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/FontConfig/font_manager-DisplayPropertiesPane.o `test -f './UX/FontConfig/DisplayPropertiesPane.c' || echo '$(srcdir)/'`./UX/FontConfig/DisplayPropertiesPane.c

./UX/FontConfig/font_manager-DisplayPropertiesPane.obj: ./UX/FontConfig/DisplayPropertiesPane.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/FontConfig/font_manager-DisplayPropertiesPane.obj -MD -MP -MF ./UX/FontConfig/$(DEPDIR)/font_manager-DisplayPropertiesPane.Tpo -c -o ./UX/FontConfig/font_manager-DisplayPropertiesPane.obj `if test -f './UX/FontConfig/DisplayPropertiesPane.c'; then $(CYGPATH_W) './UX/FontConfig/DisplayPropertiesPane.c'; else $(CYGPATH_W) '$(srcdir)/./UX/FontConfig/DisplayPropertiesPane.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/FontConfig/$(DEPDIR)/font_manager-DisplayPropertiesPane.Tpo ./UX/FontConfig/$(DEPDIR)/font_manager-DisplayPropertiesPane.Po
#	$(AM_V_CC)source='./UX/FontConfig/DisplayPropertiesPane.c' object='./UX/FontConfig/font_manager-DisplayPropertiesPane.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/FontConfig/font_manager-DisplayPropertiesPane.obj `if test -f './UX/FontConfig/DisplayPropertiesPane.c'; then $(CYGPATH_W) './UX/FontConfig/DisplayPropertiesPane.c'; else $(CYGPATH_W) '$(srcdir)/./UX/FontConfig/DisplayPropertiesPane.c'; fi`

./UX/FontConfig/font_manager-FontPropertiesPane.o: ./UX/FontConfig/FontPropertiesPane.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/FontConfig/font_manager-FontPropertiesPane.o -MD -MP -MF ./UX/FontConfig/$(DEPDIR)/font_manager-FontPropertiesPane.Tpo -c -o ./UX/FontConfig/font_manager-FontPropertiesPane.o `test -f './UX/FontConfig/FontPropertiesPane.c' || echo '$(srcdir)/'`./UX/FontConfig/FontPropertiesPane.c
	$(AM_V_at)$(am__mv) ./UX/FontConfig/$(DEPDIR)/font_manager-FontPropertiesPane.Tpo ./UX/FontConfig/$(DEPDIR)/font_manager-FontPropertiesPane.Po
#	$(AM_V_CC)source='./UX/FontConfig/FontPropertiesPane.c' object='./UX/FontConfig/font_manager-FontPropertiesPane.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/FontConfig/font_manager-FontPropertiesPane.o `test -f './UX/FontConfig/FontPropertiesPane.c' || echo '$(srcdir)/'`./UX/FontConfig/FontPropertiesPane.c

./UX/FontConfig/font_manager-FontPropertiesPane.obj: ./UX/FontConfig/FontPropertiesPane.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/FontConfig/font_manager-FontPropertiesPane.obj -MD -MP -MF ./UX/FontConfig/$(DEPDIR)/font_manager-FontPropertiesPane.Tpo -c -o ./UX/FontConfig/font_manager-FontPropertiesPane.obj `if test -f './UX/FontConfig/FontPropertiesPane.c'; then $(CYGPATH_W) './UX/FontConfig/FontPropertiesPane.c'; else $(CYGPATH_W) '$(srcdir)/./UX/FontConfig/FontPropertiesPane.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/FontConfig/$(DEPDIR)/font_manager-FontPropertiesPane.Tpo ./UX/FontConfig/$(DEPDIR)/font_manager-FontPropertiesPane.Po
#	$(AM_V_CC)source='./UX/FontConfig/FontPropertiesPane.c' object='./UX/FontConfig/font_manager-FontPropertiesPane.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/FontConfig/font_manager-FontPropertiesPane.obj `if test -f './UX/FontConfig/FontPropertiesPane.c'; then $(CYGPATH_W) './UX/FontConfig/FontPropertiesPane.c'; else $(CYGPATH_W) '$(srcdir)/./UX/FontConfig/FontPropertiesPane.c'; fi`

./UX/FontConfig/font_manager-PropertiesEditor.o: ./UX/FontConfig/PropertiesEditor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/FontConfig/font_manager-PropertiesEditor.o -MD -MP -MF ./UX/FontConfig/$(DEPDIR)/font_manager-PropertiesEditor.Tpo -c -o ./UX/FontConfig/font_manager-PropertiesEditor.o `test -f './UX/FontConfig/PropertiesEditor.c' || echo '$(srcdir)/'`./UX/FontConfig/PropertiesEditor.c
	$(AM_V_at)$(am__mv) ./UX/FontConfig/$(DEPDIR)/font_manager-PropertiesEditor.Tpo ./UX/FontConfig/$(DEPDIR)/font_manager-PropertiesEditor.Po
#	$(AM_V_CC)source='./UX/FontConfig/PropertiesEditor.c' object='./UX/FontConfig/font_manager-PropertiesEditor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/FontConfig/font_manager-PropertiesEditor.o `test -f './UX/FontConfig/PropertiesEditor.c' || echo '$(srcdir)/'`./UX/FontConfig/PropertiesEditor.c

./UX/FontConfig/font_manager-PropertiesEditor.obj: ./UX/FontConfig/PropertiesEditor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/FontConfig/font_manager-PropertiesEditor.obj -MD -MP -MF ./UX/FontConfig/$(DEPDIR)/font_manager-PropertiesEditor.Tpo -c -o ./UX/FontConfig/font_manager-PropertiesEditor.obj `if test -f './UX/FontConfig/PropertiesEditor.c'; then $(CYGPATH_W) './UX/FontConfig/PropertiesEditor.c'; else $(CYGPATH_W) '$(srcdir)/./UX/FontConfig/PropertiesEditor.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/FontConfig/$(DEPDIR)/font_manager-PropertiesEditor.Tpo ./UX/FontConfig/$(DEPDIR)/font_manager-PropertiesEditor.Po
#	$(AM_V_CC)source='./UX/FontConfig/PropertiesEditor.c' object='./UX/FontConfig/font_manager-PropertiesEditor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/FontConfig/font_manager-PropertiesEditor.obj `if test -f './UX/FontConfig/PropertiesEditor.c'; then $(CYGPATH_W) './UX/FontConfig/PropertiesEditor.c'; else $(CYGPATH_W) '$(srcdir)/./UX/FontConfig/PropertiesEditor.c'; fi`

./UX/FontConfig/font_manager-SubpixelGeometry.o: ./UX/FontConfig/SubpixelGeometry.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/FontConfig/font_manager-SubpixelGeometry.o -MD -MP -MF ./UX/FontConfig/$(DEPDIR)/font_manager-SubpixelGeometry.Tpo -c -o ./UX/FontConfig/font_manager-SubpixelGeometry.o `test -f './UX/FontConfig/SubpixelGeometry.c' || echo '$(srcdir)/'`./UX/FontConfig/SubpixelGeometry.c
	$(AM_V_at)$(am__mv) ./UX/FontConfig/$(DEPDIR)/font_manager-SubpixelGeometry.Tpo ./UX/FontConfig/$(DEPDIR)/font_manager-SubpixelGeometry.Po
#	$(AM_V_CC)source='./UX/FontConfig/SubpixelGeometry.c' object='./UX/FontConfig/font_manager-SubpixelGeometry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/FontConfig/font_manager-SubpixelGeometry.o `test -f './UX/FontConfig/SubpixelGeometry.c' || echo '$(srcdir)/'`./UX/FontConfig/SubpixelGeometry.c

./UX/FontConfig/font_manager-SubpixelGeometry.obj: ./UX/FontConfig/SubpixelGeometry.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/FontConfig/font_manager-SubpixelGeometry.obj -MD -MP -MF ./UX/FontConfig/$(DEPDIR)/font_manager-SubpixelGeometry.Tpo -c -o ./UX/FontConfig/font_manager-SubpixelGeometry.obj `if test -f './UX/FontConfig/SubpixelGeometry.c'; then $(CYGPATH_W) './UX/FontConfig/SubpixelGeometry.c'; else $(CYGPATH_W) '$(srcdir)/./UX/FontConfig/SubpixelGeometry.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/FontConfig/$(DEPDIR)/font_manager-SubpixelGeometry.Tpo ./UX/FontConfig/$(DEPDIR)/font_manager-SubpixelGeometry.Po
#	$(AM_V_CC)source='./UX/FontConfig/SubpixelGeometry.c' object='./UX/FontConfig/font_manager-SubpixelGeometry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/FontConfig/font_manager-SubpixelGeometry.obj `if test -f './UX/FontConfig/SubpixelGeometry.c'; then $(CYGPATH_W) './UX/FontConfig/SubpixelGeometry.c'; else $(CYGPATH_W) '$(srcdir)/./UX/FontConfig/SubpixelGeometry.c'; fi`

./UX/font_manager-MainWindow.o: ./UX/MainWindow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/font_manager-MainWindow.o -MD -MP -MF ./UX/$(DEPDIR)/font_manager-MainWindow.Tpo -c -o ./UX/font_manager-MainWindow.o `test -f './UX/MainWindow.c' || echo '$(srcdir)/'`./UX/MainWindow.c
	$(AM_V_at)$(am__mv) ./UX/$(DEPDIR)/font_manager-MainWindow.Tpo ./UX/$(DEPDIR)/font_manager-MainWindow.Po
#	$(AM_V_CC)source='./UX/MainWindow.c' object='./UX/font_manager-MainWindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/font_manager-MainWindow.o `test -f './UX/MainWindow.c' || echo '$(srcdir)/'`./UX/MainWindow.c

./UX/font_manager-MainWindow.obj: ./UX/MainWindow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/font_manager-MainWindow.obj -MD -MP -MF ./UX/$(DEPDIR)/font_manager-MainWindow.Tpo -c -o ./UX/font_manager-MainWindow.obj `if test -f './UX/MainWindow.c'; then $(CYGPATH_W) './UX/MainWindow.c'; else $(CYGPATH_W) '$(srcdir)/./UX/MainWindow.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/$(DEPDIR)/font_manager-MainWindow.Tpo ./UX/$(DEPDIR)/font_manager-MainWindow.Po
#	$(AM_V_CC)source='./UX/MainWindow.c' object='./UX/font_manager-MainWindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/font_manager-MainWindow.obj `if test -f './UX/MainWindow.c'; then $(CYGPATH_W) './UX/MainWindow.c'; else $(CYGPATH_W) '$(srcdir)/./UX/MainWindow.c'; fi`

./UX/Sidebar/font_manager-MainSideBar.o: ./UX/Sidebar/MainSideBar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Sidebar/font_manager-MainSideBar.o -MD -MP -MF ./UX/Sidebar/$(DEPDIR)/font_manager-MainSideBar.Tpo -c -o ./UX/Sidebar/font_manager-MainSideBar.o `test -f './UX/Sidebar/MainSideBar.c' || echo '$(srcdir)/'`./UX/Sidebar/MainSideBar.c
	$(AM_V_at)$(am__mv) ./UX/Sidebar/$(DEPDIR)/font_manager-MainSideBar.Tpo ./UX/Sidebar/$(DEPDIR)/font_manager-MainSideBar.Po
#	$(AM_V_CC)source='./UX/Sidebar/MainSideBar.c' object='./UX/Sidebar/font_manager-MainSideBar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Sidebar/font_manager-MainSideBar.o `test -f './UX/Sidebar/MainSideBar.c' || echo '$(srcdir)/'`./UX/Sidebar/MainSideBar.c

./UX/Sidebar/font_manager-MainSideBar.obj: ./UX/Sidebar/MainSideBar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Sidebar/font_manager-MainSideBar.obj -MD -MP -MF ./UX/Sidebar/$(DEPDIR)/font_manager-MainSideBar.Tpo -c -o ./UX/Sidebar/font_manager-MainSideBar.obj `if test -f './UX/Sidebar/MainSideBar.c'; then $(CYGPATH_W) './UX/Sidebar/MainSideBar.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Sidebar/MainSideBar.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Sidebar/$(DEPDIR)/font_manager-MainSideBar.Tpo ./UX/Sidebar/$(DEPDIR)/font_manager-MainSideBar.Po
#	$(AM_V_CC)source='./UX/Sidebar/MainSideBar.c' object='./UX/Sidebar/font_manager-MainSideBar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Sidebar/font_manager-MainSideBar.obj `if test -f './UX/Sidebar/MainSideBar.c'; then $(CYGPATH_W) './UX/Sidebar/MainSideBar.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Sidebar/MainSideBar.c'; fi`

./UX/Sidebar/font_manager-SideBar.o: ./UX/Sidebar/SideBar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Sidebar/font_manager-SideBar.o -MD -MP -MF ./UX/Sidebar/$(DEPDIR)/font_manager-SideBar.Tpo -c -o ./UX/Sidebar/font_manager-SideBar.o `test -f './UX/Sidebar/SideBar.c' || echo '$(srcdir)/'`./UX/Sidebar/SideBar.c
	$(AM_V_at)$(am__mv) ./UX/Sidebar/$(DEPDIR)/font_manager-SideBar.Tpo ./UX/Sidebar/$(DEPDIR)/font_manager-SideBar.Po
#	$(AM_V_CC)source='./UX/Sidebar/SideBar.c' object='./UX/Sidebar/font_manager-SideBar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Sidebar/font_manager-SideBar.o `test -f './UX/Sidebar/SideBar.c' || echo '$(srcdir)/'`./UX/Sidebar/SideBar.c

./UX/Sidebar/font_manager-SideBar.obj: ./UX/Sidebar/SideBar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Sidebar/font_manager-SideBar.obj -MD -MP -MF ./UX/Sidebar/$(DEPDIR)/font_manager-SideBar.Tpo -c -o ./UX/Sidebar/font_manager-SideBar.obj `if test -f './UX/Sidebar/SideBar.c'; then $(CYGPATH_W) './UX/Sidebar/SideBar.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Sidebar/SideBar.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Sidebar/$(DEPDIR)/font_manager-SideBar.Tpo ./UX/Sidebar/$(DEPDIR)/font_manager-SideBar.Po
#	$(AM_V_CC)source='./UX/Sidebar/SideBar.c' object='./UX/Sidebar/font_manager-SideBar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Sidebar/font_manager-SideBar.obj `if test -f './UX/Sidebar/SideBar.c'; then $(CYGPATH_W) './UX/Sidebar/SideBar.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Sidebar/SideBar.c'; fi`

./UX/font_manager-State.o: ./UX/State.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/font_manager-State.o -MD -MP -MF ./UX/$(DEPDIR)/font_manager-State.Tpo -c -o ./UX/font_manager-State.o `test -f './UX/State.c' || echo '$(srcdir)/'`./UX/State.c
	$(AM_V_at)$(am__mv) ./UX/$(DEPDIR)/font_manager-State.Tpo ./UX/$(DEPDIR)/font_manager-State.Po
#	$(AM_V_CC)source='./UX/State.c' object='./UX/font_manager-State.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/font_manager-State.o `test -f './UX/State.c' || echo '$(srcdir)/'`./UX/State.c

./UX/font_manager-State.obj: ./UX/State.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/font_manager-State.obj -MD -MP -MF ./UX/$(DEPDIR)/font_manager-State.Tpo -c -o ./UX/font_manager-State.obj `if test -f './UX/State.c'; then $(CYGPATH_W) './UX/State.c'; else $(CYGPATH_W) '$(srcdir)/./UX/State.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/$(DEPDIR)/font_manager-State.Tpo ./UX/$(DEPDIR)/font_manager-State.Po
#	$(AM_V_CC)source='./UX/State.c' object='./UX/font_manager-State.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/font_manager-State.obj `if test -f './UX/State.c'; then $(CYGPATH_W) './UX/State.c'; else $(CYGPATH_W) '$(srcdir)/./UX/State.c'; fi`

./UX/Trees/font_manager-CategoryTree.o: ./UX/Trees/CategoryTree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Trees/font_manager-CategoryTree.o -MD -MP -MF ./UX/Trees/$(DEPDIR)/font_manager-CategoryTree.Tpo -c -o ./UX/Trees/font_manager-CategoryTree.o `test -f './UX/Trees/CategoryTree.c' || echo '$(srcdir)/'`./UX/Trees/CategoryTree.c
	$(AM_V_at)$(am__mv) ./UX/Trees/$(DEPDIR)/font_manager-CategoryTree.Tpo ./UX/Trees/$(DEPDIR)/font_manager-CategoryTree.Po
#	$(AM_V_CC)source='./UX/Trees/CategoryTree.c' object='./UX/Trees/font_manager-CategoryTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Trees/font_manager-CategoryTree.o `test -f './UX/Trees/CategoryTree.c' || echo '$(srcdir)/'`./UX/Trees/CategoryTree.c

./UX/Trees/font_manager-CategoryTree.obj: ./UX/Trees/CategoryTree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Trees/font_manager-CategoryTree.obj -MD -MP -MF ./UX/Trees/$(DEPDIR)/font_manager-CategoryTree.Tpo -c -o ./UX/Trees/font_manager-CategoryTree.obj `if test -f './UX/Trees/CategoryTree.c'; then $(CYGPATH_W) './UX/Trees/CategoryTree.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Trees/CategoryTree.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Trees/$(DEPDIR)/font_manager-CategoryTree.Tpo ./UX/Trees/$(DEPDIR)/font_manager-CategoryTree.Po
#	$(AM_V_CC)source='./UX/Trees/CategoryTree.c' object='./UX/Trees/font_manager-CategoryTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Trees/font_manager-CategoryTree.obj `if test -f './UX/Trees/CategoryTree.c'; then $(CYGPATH_W) './UX/Trees/CategoryTree.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Trees/CategoryTree.c'; fi`

./UX/Trees/font_manager-CollectionTree.o: ./UX/Trees/CollectionTree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Trees/font_manager-CollectionTree.o -MD -MP -MF ./UX/Trees/$(DEPDIR)/font_manager-CollectionTree.Tpo -c -o ./UX/Trees/font_manager-CollectionTree.o `test -f './UX/Trees/CollectionTree.c' || echo '$(srcdir)/'`./UX/Trees/CollectionTree.c
	$(AM_V_at)$(am__mv) ./UX/Trees/$(DEPDIR)/font_manager-CollectionTree.Tpo ./UX/Trees/$(DEPDIR)/font_manager-CollectionTree.Po
#	$(AM_V_CC)source='./UX/Trees/CollectionTree.c' object='./UX/Trees/font_manager-CollectionTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Trees/font_manager-CollectionTree.o `test -f './UX/Trees/CollectionTree.c' || echo '$(srcdir)/'`./UX/Trees/CollectionTree.c

./UX/Trees/font_manager-CollectionTree.obj: ./UX/Trees/CollectionTree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Trees/font_manager-CollectionTree.obj -MD -MP -MF ./UX/Trees/$(DEPDIR)/font_manager-CollectionTree.Tpo -c -o ./UX/Trees/font_manager-CollectionTree.obj `if test -f './UX/Trees/CollectionTree.c'; then $(CYGPATH_W) './UX/Trees/CollectionTree.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Trees/CollectionTree.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Trees/$(DEPDIR)/font_manager-CollectionTree.Tpo ./UX/Trees/$(DEPDIR)/font_manager-CollectionTree.Po
#	$(AM_V_CC)source='./UX/Trees/CollectionTree.c' object='./UX/Trees/font_manager-CollectionTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Trees/font_manager-CollectionTree.obj `if test -f './UX/Trees/CollectionTree.c'; then $(CYGPATH_W) './UX/Trees/CollectionTree.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Trees/CollectionTree.c'; fi`

./UX/Trees/font_manager-FontListTree.o: ./UX/Trees/FontListTree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Trees/font_manager-FontListTree.o -MD -MP -MF ./UX/Trees/$(DEPDIR)/font_manager-FontListTree.Tpo -c -o ./UX/Trees/font_manager-FontListTree.o `test -f './UX/Trees/FontListTree.c' || echo '$(srcdir)/'`./UX/Trees/FontListTree.c
	$(AM_V_at)$(am__mv) ./UX/Trees/$(DEPDIR)/font_manager-FontListTree.Tpo ./UX/Trees/$(DEPDIR)/font_manager-FontListTree.Po
#	$(AM_V_CC)source='./UX/Trees/FontListTree.c' object='./UX/Trees/font_manager-FontListTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Trees/font_manager-FontListTree.o `test -f './UX/Trees/FontListTree.c' || echo '$(srcdir)/'`./UX/Trees/FontListTree.c

./UX/Trees/font_manager-FontListTree.obj: ./UX/Trees/FontListTree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Trees/font_manager-FontListTree.obj -MD -MP -MF ./UX/Trees/$(DEPDIR)/font_manager-FontListTree.Tpo -c -o ./UX/Trees/font_manager-FontListTree.obj `if test -f './UX/Trees/FontListTree.c'; then $(CYGPATH_W) './UX/Trees/FontListTree.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Trees/FontListTree.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Trees/$(DEPDIR)/font_manager-FontListTree.Tpo ./UX/Trees/$(DEPDIR)/font_manager-FontListTree.Po
#	$(AM_V_CC)source='./UX/Trees/FontListTree.c' object='./UX/Trees/font_manager-FontListTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Trees/font_manager-FontListTree.obj `if test -f './UX/Trees/FontListTree.c'; then $(CYGPATH_W) './UX/Trees/FontListTree.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Trees/FontListTree.c'; fi`

./UX/Trees/font_manager-UserFontTree.o: ./UX/Trees/UserFontTree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Trees/font_manager-UserFontTree.o -MD -MP -MF ./UX/Trees/$(DEPDIR)/font_manager-UserFontTree.Tpo -c -o ./UX/Trees/font_manager-UserFontTree.o `test -f './UX/Trees/UserFontTree.c' || echo '$(srcdir)/'`./UX/Trees/UserFontTree.c
	$(AM_V_at)$(am__mv) ./UX/Trees/$(DEPDIR)/font_manager-UserFontTree.Tpo ./UX/Trees/$(DEPDIR)/font_manager-UserFontTree.Po
#	$(AM_V_CC)source='./UX/Trees/UserFontTree.c' object='./UX/Trees/font_manager-UserFontTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Trees/font_manager-UserFontTree.o `test -f './UX/Trees/UserFontTree.c' || echo '$(srcdir)/'`./UX/Trees/UserFontTree.c

./UX/Trees/font_manager-UserFontTree.obj: ./UX/Trees/UserFontTree.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Trees/font_manager-UserFontTree.obj -MD -MP -MF ./UX/Trees/$(DEPDIR)/font_manager-UserFontTree.Tpo -c -o ./UX/Trees/font_manager-UserFontTree.obj `if test -f './UX/Trees/UserFontTree.c'; then $(CYGPATH_W) './UX/Trees/UserFontTree.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Trees/UserFontTree.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Trees/$(DEPDIR)/font_manager-UserFontTree.Tpo ./UX/Trees/$(DEPDIR)/font_manager-UserFontTree.Po
#	$(AM_V_CC)source='./UX/Trees/UserFontTree.c' object='./UX/Trees/font_manager-UserFontTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Trees/font_manager-UserFontTree.obj `if test -f './UX/Trees/UserFontTree.c'; then $(CYGPATH_W) './UX/Trees/UserFontTree.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Trees/UserFontTree.c'; fi`

./UX/Trees/font_manager-UserSourceList.o: ./UX/Trees/UserSourceList.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Trees/font_manager-UserSourceList.o -MD -MP -MF ./UX/Trees/$(DEPDIR)/font_manager-UserSourceList.Tpo -c -o ./UX/Trees/font_manager-UserSourceList.o `test -f './UX/Trees/UserSourceList.c' || echo '$(srcdir)/'`./UX/Trees/UserSourceList.c
	$(AM_V_at)$(am__mv) ./UX/Trees/$(DEPDIR)/font_manager-UserSourceList.Tpo ./UX/Trees/$(DEPDIR)/font_manager-UserSourceList.Po
#	$(AM_V_CC)source='./UX/Trees/UserSourceList.c' object='./UX/Trees/font_manager-UserSourceList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Trees/font_manager-UserSourceList.o `test -f './UX/Trees/UserSourceList.c' || echo '$(srcdir)/'`./UX/Trees/UserSourceList.c

./UX/Trees/font_manager-UserSourceList.obj: ./UX/Trees/UserSourceList.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Trees/font_manager-UserSourceList.obj -MD -MP -MF ./UX/Trees/$(DEPDIR)/font_manager-UserSourceList.Tpo -c -o ./UX/Trees/font_manager-UserSourceList.obj `if test -f './UX/Trees/UserSourceList.c'; then $(CYGPATH_W) './UX/Trees/UserSourceList.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Trees/UserSourceList.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Trees/$(DEPDIR)/font_manager-UserSourceList.Tpo ./UX/Trees/$(DEPDIR)/font_manager-UserSourceList.Po
#	$(AM_V_CC)source='./UX/Trees/UserSourceList.c' object='./UX/Trees/font_manager-UserSourceList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Trees/font_manager-UserSourceList.obj `if test -f './UX/Trees/UserSourceList.c'; then $(CYGPATH_W) './UX/Trees/UserSourceList.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Trees/UserSourceList.c'; fi`

./UX/Utils/font_manager-Color.o: ./UX/Utils/Color.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Utils/font_manager-Color.o -MD -MP -MF ./UX/Utils/$(DEPDIR)/font_manager-Color.Tpo -c -o ./UX/Utils/font_manager-Color.o `test -f './UX/Utils/Color.c' || echo '$(srcdir)/'`./UX/Utils/Color.c
	$(AM_V_at)$(am__mv) ./UX/Utils/$(DEPDIR)/font_manager-Color.Tpo ./UX/Utils/$(DEPDIR)/font_manager-Color.Po
#	$(AM_V_CC)source='./UX/Utils/Color.c' object='./UX/Utils/font_manager-Color.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Utils/font_manager-Color.o `test -f './UX/Utils/Color.c' || echo '$(srcdir)/'`./UX/Utils/Color.c

./UX/Utils/font_manager-Color.obj: ./UX/Utils/Color.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Utils/font_manager-Color.obj -MD -MP -MF ./UX/Utils/$(DEPDIR)/font_manager-Color.Tpo -c -o ./UX/Utils/font_manager-Color.obj `if test -f './UX/Utils/Color.c'; then $(CYGPATH_W) './UX/Utils/Color.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Utils/Color.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Utils/$(DEPDIR)/font_manager-Color.Tpo ./UX/Utils/$(DEPDIR)/font_manager-Color.Po
#	$(AM_V_CC)source='./UX/Utils/Color.c' object='./UX/Utils/font_manager-Color.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Utils/font_manager-Color.obj `if test -f './UX/Utils/Color.c'; then $(CYGPATH_W) './UX/Utils/Color.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Utils/Color.c'; fi`

./UX/Utils/font_manager-Utils.o: ./UX/Utils/Utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Utils/font_manager-Utils.o -MD -MP -MF ./UX/Utils/$(DEPDIR)/font_manager-Utils.Tpo -c -o ./UX/Utils/font_manager-Utils.o `test -f './UX/Utils/Utils.c' || echo '$(srcdir)/'`./UX/Utils/Utils.c
	$(AM_V_at)$(am__mv) ./UX/Utils/$(DEPDIR)/font_manager-Utils.Tpo ./UX/Utils/$(DEPDIR)/font_manager-Utils.Po
#	$(AM_V_CC)source='./UX/Utils/Utils.c' object='./UX/Utils/font_manager-Utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Utils/font_manager-Utils.o `test -f './UX/Utils/Utils.c' || echo '$(srcdir)/'`./UX/Utils/Utils.c

./UX/Utils/font_manager-Utils.obj: ./UX/Utils/Utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Utils/font_manager-Utils.obj -MD -MP -MF ./UX/Utils/$(DEPDIR)/font_manager-Utils.Tpo -c -o ./UX/Utils/font_manager-Utils.obj `if test -f './UX/Utils/Utils.c'; then $(CYGPATH_W) './UX/Utils/Utils.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Utils/Utils.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Utils/$(DEPDIR)/font_manager-Utils.Tpo ./UX/Utils/$(DEPDIR)/font_manager-Utils.Po
#	$(AM_V_CC)source='./UX/Utils/Utils.c' object='./UX/Utils/font_manager-Utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Utils/font_manager-Utils.obj `if test -f './UX/Utils/Utils.c'; then $(CYGPATH_W) './UX/Utils/Utils.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Utils/Utils.c'; fi`

./UX/font_manager-Viewer.o: ./UX/Viewer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/font_manager-Viewer.o -MD -MP -MF ./UX/$(DEPDIR)/font_manager-Viewer.Tpo -c -o ./UX/font_manager-Viewer.o `test -f './UX/Viewer.c' || echo '$(srcdir)/'`./UX/Viewer.c
	$(AM_V_at)$(am__mv) ./UX/$(DEPDIR)/font_manager-Viewer.Tpo ./UX/$(DEPDIR)/font_manager-Viewer.Po
#	$(AM_V_CC)source='./UX/Viewer.c' object='./UX/font_manager-Viewer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/font_manager-Viewer.o `test -f './UX/Viewer.c' || echo '$(srcdir)/'`./UX/Viewer.c

./UX/font_manager-Viewer.obj: ./UX/Viewer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/font_manager-Viewer.obj -MD -MP -MF ./UX/$(DEPDIR)/font_manager-Viewer.Tpo -c -o ./UX/font_manager-Viewer.obj `if test -f './UX/Viewer.c'; then $(CYGPATH_W) './UX/Viewer.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Viewer.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/$(DEPDIR)/font_manager-Viewer.Tpo ./UX/$(DEPDIR)/font_manager-Viewer.Po
#	$(AM_V_CC)source='./UX/Viewer.c' object='./UX/font_manager-Viewer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/font_manager-Viewer.obj `if test -f './UX/Viewer.c'; then $(CYGPATH_W) './UX/Viewer.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Viewer.c'; fi`

./UX/Views/font_manager-Browse.o: ./UX/Views/Browse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Views/font_manager-Browse.o -MD -MP -MF ./UX/Views/$(DEPDIR)/font_manager-Browse.Tpo -c -o ./UX/Views/font_manager-Browse.o `test -f './UX/Views/Browse.c' || echo '$(srcdir)/'`./UX/Views/Browse.c
	$(AM_V_at)$(am__mv) ./UX/Views/$(DEPDIR)/font_manager-Browse.Tpo ./UX/Views/$(DEPDIR)/font_manager-Browse.Po
#	$(AM_V_CC)source='./UX/Views/Browse.c' object='./UX/Views/font_manager-Browse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Views/font_manager-Browse.o `test -f './UX/Views/Browse.c' || echo '$(srcdir)/'`./UX/Views/Browse.c

./UX/Views/font_manager-Browse.obj: ./UX/Views/Browse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Views/font_manager-Browse.obj -MD -MP -MF ./UX/Views/$(DEPDIR)/font_manager-Browse.Tpo -c -o ./UX/Views/font_manager-Browse.obj `if test -f './UX/Views/Browse.c'; then $(CYGPATH_W) './UX/Views/Browse.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Views/Browse.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Views/$(DEPDIR)/font_manager-Browse.Tpo ./UX/Views/$(DEPDIR)/font_manager-Browse.Po
#	$(AM_V_CC)source='./UX/Views/Browse.c' object='./UX/Views/font_manager-Browse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Views/font_manager-Browse.obj `if test -f './UX/Views/Browse.c'; then $(CYGPATH_W) './UX/Views/Browse.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Views/Browse.c'; fi`

./UX/Views/font_manager-Compare.o: ./UX/Views/Compare.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Views/font_manager-Compare.o -MD -MP -MF ./UX/Views/$(DEPDIR)/font_manager-Compare.Tpo -c -o ./UX/Views/font_manager-Compare.o `test -f './UX/Views/Compare.c' || echo '$(srcdir)/'`./UX/Views/Compare.c
	$(AM_V_at)$(am__mv) ./UX/Views/$(DEPDIR)/font_manager-Compare.Tpo ./UX/Views/$(DEPDIR)/font_manager-Compare.Po
#	$(AM_V_CC)source='./UX/Views/Compare.c' object='./UX/Views/font_manager-Compare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Views/font_manager-Compare.o `test -f './UX/Views/Compare.c' || echo '$(srcdir)/'`./UX/Views/Compare.c

./UX/Views/font_manager-Compare.obj: ./UX/Views/Compare.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Views/font_manager-Compare.obj -MD -MP -MF ./UX/Views/$(DEPDIR)/font_manager-Compare.Tpo -c -o ./UX/Views/font_manager-Compare.obj `if test -f './UX/Views/Compare.c'; then $(CYGPATH_W) './UX/Views/Compare.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Views/Compare.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Views/$(DEPDIR)/font_manager-Compare.Tpo ./UX/Views/$(DEPDIR)/font_manager-Compare.Po
#	$(AM_V_CC)source='./UX/Views/Compare.c' object='./UX/Views/font_manager-Compare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Views/font_manager-Compare.obj `if test -f './UX/Views/Compare.c'; then $(CYGPATH_W) './UX/Views/Compare.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Views/Compare.c'; fi`

./UX/Views/font_manager-FontPreview.o: ./UX/Views/FontPreview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Views/font_manager-FontPreview.o -MD -MP -MF ./UX/Views/$(DEPDIR)/font_manager-FontPreview.Tpo -c -o ./UX/Views/font_manager-FontPreview.o `test -f './UX/Views/FontPreview.c' || echo '$(srcdir)/'`./UX/Views/FontPreview.c
	$(AM_V_at)$(am__mv) ./UX/Views/$(DEPDIR)/font_manager-FontPreview.Tpo ./UX/Views/$(DEPDIR)/font_manager-FontPreview.Po
#	$(AM_V_CC)source='./UX/Views/FontPreview.c' object='./UX/Views/font_manager-FontPreview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Views/font_manager-FontPreview.o `test -f './UX/Views/FontPreview.c' || echo '$(srcdir)/'`./UX/Views/FontPreview.c

./UX/Views/font_manager-FontPreview.obj: ./UX/Views/FontPreview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Views/font_manager-FontPreview.obj -MD -MP -MF ./UX/Views/$(DEPDIR)/font_manager-FontPreview.Tpo -c -o ./UX/Views/font_manager-FontPreview.obj `if test -f './UX/Views/FontPreview.c'; then $(CYGPATH_W) './UX/Views/FontPreview.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Views/FontPreview.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Views/$(DEPDIR)/font_manager-FontPreview.Tpo ./UX/Views/$(DEPDIR)/font_manager-FontPreview.Po
#	$(AM_V_CC)source='./UX/Views/FontPreview.c' object='./UX/Views/font_manager-FontPreview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Views/font_manager-FontPreview.obj `if test -f './UX/Views/FontPreview.c'; then $(CYGPATH_W) './UX/Views/FontPreview.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Views/FontPreview.c'; fi`

./UX/Views/font_manager-Metadata.o: ./UX/Views/Metadata.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Views/font_manager-Metadata.o -MD -MP -MF ./UX/Views/$(DEPDIR)/font_manager-Metadata.Tpo -c -o ./UX/Views/font_manager-Metadata.o `test -f './UX/Views/Metadata.c' || echo '$(srcdir)/'`./UX/Views/Metadata.c
	$(AM_V_at)$(am__mv) ./UX/Views/$(DEPDIR)/font_manager-Metadata.Tpo ./UX/Views/$(DEPDIR)/font_manager-Metadata.Po
#	$(AM_V_CC)source='./UX/Views/Metadata.c' object='./UX/Views/font_manager-Metadata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Views/font_manager-Metadata.o `test -f './UX/Views/Metadata.c' || echo '$(srcdir)/'`./UX/Views/Metadata.c

./UX/Views/font_manager-Metadata.obj: ./UX/Views/Metadata.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Views/font_manager-Metadata.obj -MD -MP -MF ./UX/Views/$(DEPDIR)/font_manager-Metadata.Tpo -c -o ./UX/Views/font_manager-Metadata.obj `if test -f './UX/Views/Metadata.c'; then $(CYGPATH_W) './UX/Views/Metadata.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Views/Metadata.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Views/$(DEPDIR)/font_manager-Metadata.Tpo ./UX/Views/$(DEPDIR)/font_manager-Metadata.Po
#	$(AM_V_CC)source='./UX/Views/Metadata.c' object='./UX/Views/font_manager-Metadata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Views/font_manager-Metadata.obj `if test -f './UX/Views/Metadata.c'; then $(CYGPATH_W) './UX/Views/Metadata.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Views/Metadata.c'; fi`

./UX/Widgets/font_manager-ActivePreview.o: ./UX/Widgets/ActivePreview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-ActivePreview.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-ActivePreview.Tpo -c -o ./UX/Widgets/font_manager-ActivePreview.o `test -f './UX/Widgets/ActivePreview.c' || echo '$(srcdir)/'`./UX/Widgets/ActivePreview.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-ActivePreview.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-ActivePreview.Po
#	$(AM_V_CC)source='./UX/Widgets/ActivePreview.c' object='./UX/Widgets/font_manager-ActivePreview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-ActivePreview.o `test -f './UX/Widgets/ActivePreview.c' || echo '$(srcdir)/'`./UX/Widgets/ActivePreview.c

./UX/Widgets/font_manager-ActivePreview.obj: ./UX/Widgets/ActivePreview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-ActivePreview.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-ActivePreview.Tpo -c -o ./UX/Widgets/font_manager-ActivePreview.obj `if test -f './UX/Widgets/ActivePreview.c'; then $(CYGPATH_W) './UX/Widgets/ActivePreview.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/ActivePreview.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-ActivePreview.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-ActivePreview.Po
#	$(AM_V_CC)source='./UX/Widgets/ActivePreview.c' object='./UX/Widgets/font_manager-ActivePreview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-ActivePreview.obj `if test -f './UX/Widgets/ActivePreview.c'; then $(CYGPATH_W) './UX/Widgets/ActivePreview.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/ActivePreview.c'; fi`

./UX/Widgets/font_manager-AdjustablePreview.o: ./UX/Widgets/AdjustablePreview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-AdjustablePreview.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-AdjustablePreview.Tpo -c -o ./UX/Widgets/font_manager-AdjustablePreview.o `test -f './UX/Widgets/AdjustablePreview.c' || echo '$(srcdir)/'`./UX/Widgets/AdjustablePreview.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-AdjustablePreview.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-AdjustablePreview.Po
#	$(AM_V_CC)source='./UX/Widgets/AdjustablePreview.c' object='./UX/Widgets/font_manager-AdjustablePreview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-AdjustablePreview.o `test -f './UX/Widgets/AdjustablePreview.c' || echo '$(srcdir)/'`./UX/Widgets/AdjustablePreview.c

./UX/Widgets/font_manager-AdjustablePreview.obj: ./UX/Widgets/AdjustablePreview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-AdjustablePreview.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-AdjustablePreview.Tpo -c -o ./UX/Widgets/font_manager-AdjustablePreview.obj `if test -f './UX/Widgets/AdjustablePreview.c'; then $(CYGPATH_W) './UX/Widgets/AdjustablePreview.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/AdjustablePreview.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-AdjustablePreview.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-AdjustablePreview.Po
#	$(AM_V_CC)source='./UX/Widgets/AdjustablePreview.c' object='./UX/Widgets/font_manager-AdjustablePreview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-AdjustablePreview.obj `if test -f './UX/Widgets/AdjustablePreview.c'; then $(CYGPATH_W) './UX/Widgets/AdjustablePreview.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/AdjustablePreview.c'; fi`

./UX/Widgets/font_manager-CellRendererPill.o: ./UX/Widgets/CellRendererPill.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-CellRendererPill.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-CellRendererPill.Tpo -c -o ./UX/Widgets/font_manager-CellRendererPill.o `test -f './UX/Widgets/CellRendererPill.c' || echo '$(srcdir)/'`./UX/Widgets/CellRendererPill.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-CellRendererPill.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-CellRendererPill.Po
#	$(AM_V_CC)source='./UX/Widgets/CellRendererPill.c' object='./UX/Widgets/font_manager-CellRendererPill.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-CellRendererPill.o `test -f './UX/Widgets/CellRendererPill.c' || echo '$(srcdir)/'`./UX/Widgets/CellRendererPill.c

./UX/Widgets/font_manager-CellRendererPill.obj: ./UX/Widgets/CellRendererPill.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-CellRendererPill.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-CellRendererPill.Tpo -c -o ./UX/Widgets/font_manager-CellRendererPill.obj `if test -f './UX/Widgets/CellRendererPill.c'; then $(CYGPATH_W) './UX/Widgets/CellRendererPill.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/CellRendererPill.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-CellRendererPill.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-CellRendererPill.Po
#	$(AM_V_CC)source='./UX/Widgets/CellRendererPill.c' object='./UX/Widgets/font_manager-CellRendererPill.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-CellRendererPill.obj `if test -f './UX/Widgets/CellRendererPill.c'; then $(CYGPATH_W) './UX/Widgets/CellRendererPill.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/CellRendererPill.c'; fi`

./UX/Widgets/font_manager-FontScale.o: ./UX/Widgets/FontScale.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-FontScale.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-FontScale.Tpo -c -o ./UX/Widgets/font_manager-FontScale.o `test -f './UX/Widgets/FontScale.c' || echo '$(srcdir)/'`./UX/Widgets/FontScale.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-FontScale.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-FontScale.Po
#	$(AM_V_CC)source='./UX/Widgets/FontScale.c' object='./UX/Widgets/font_manager-FontScale.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-FontScale.o `test -f './UX/Widgets/FontScale.c' || echo '$(srcdir)/'`./UX/Widgets/FontScale.c

./UX/Widgets/font_manager-FontScale.obj: ./UX/Widgets/FontScale.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-FontScale.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-FontScale.Tpo -c -o ./UX/Widgets/font_manager-FontScale.obj `if test -f './UX/Widgets/FontScale.c'; then $(CYGPATH_W) './UX/Widgets/FontScale.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/FontScale.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-FontScale.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-FontScale.Po
#	$(AM_V_CC)source='./UX/Widgets/FontScale.c' object='./UX/Widgets/font_manager-FontScale.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-FontScale.obj `if test -f './UX/Widgets/FontScale.c'; then $(CYGPATH_W) './UX/Widgets/FontScale.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/FontScale.c'; fi`

./UX/Widgets/font_manager-LabeledSpinButton.o: ./UX/Widgets/LabeledSpinButton.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-LabeledSpinButton.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSpinButton.Tpo -c -o ./UX/Widgets/font_manager-LabeledSpinButton.o `test -f './UX/Widgets/LabeledSpinButton.c' || echo '$(srcdir)/'`./UX/Widgets/LabeledSpinButton.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSpinButton.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSpinButton.Po
#	$(AM_V_CC)source='./UX/Widgets/LabeledSpinButton.c' object='./UX/Widgets/font_manager-LabeledSpinButton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-LabeledSpinButton.o `test -f './UX/Widgets/LabeledSpinButton.c' || echo '$(srcdir)/'`./UX/Widgets/LabeledSpinButton.c

./UX/Widgets/font_manager-LabeledSpinButton.obj: ./UX/Widgets/LabeledSpinButton.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-LabeledSpinButton.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSpinButton.Tpo -c -o ./UX/Widgets/font_manager-LabeledSpinButton.obj `if test -f './UX/Widgets/LabeledSpinButton.c'; then $(CYGPATH_W) './UX/Widgets/LabeledSpinButton.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/LabeledSpinButton.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSpinButton.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSpinButton.Po
#	$(AM_V_CC)source='./UX/Widgets/LabeledSpinButton.c' object='./UX/Widgets/font_manager-LabeledSpinButton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-LabeledSpinButton.obj `if test -f './UX/Widgets/LabeledSpinButton.c'; then $(CYGPATH_W) './UX/Widgets/LabeledSpinButton.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/LabeledSpinButton.c'; fi`

./UX/Widgets/font_manager-LabeledSwitch.o: ./UX/Widgets/LabeledSwitch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-LabeledSwitch.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSwitch.Tpo -c -o ./UX/Widgets/font_manager-LabeledSwitch.o `test -f './UX/Widgets/LabeledSwitch.c' || echo '$(srcdir)/'`./UX/Widgets/LabeledSwitch.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSwitch.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSwitch.Po
#	$(AM_V_CC)source='./UX/Widgets/LabeledSwitch.c' object='./UX/Widgets/font_manager-LabeledSwitch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-LabeledSwitch.o `test -f './UX/Widgets/LabeledSwitch.c' || echo '$(srcdir)/'`./UX/Widgets/LabeledSwitch.c

./UX/Widgets/font_manager-LabeledSwitch.obj: ./UX/Widgets/LabeledSwitch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-LabeledSwitch.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSwitch.Tpo -c -o ./UX/Widgets/font_manager-LabeledSwitch.obj `if test -f './UX/Widgets/LabeledSwitch.c'; then $(CYGPATH_W) './UX/Widgets/LabeledSwitch.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/LabeledSwitch.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSwitch.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-LabeledSwitch.Po
#	$(AM_V_CC)source='./UX/Widgets/LabeledSwitch.c' object='./UX/Widgets/font_manager-LabeledSwitch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-LabeledSwitch.obj `if test -f './UX/Widgets/LabeledSwitch.c'; then $(CYGPATH_W) './UX/Widgets/LabeledSwitch.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/LabeledSwitch.c'; fi`

./UX/Widgets/font_manager-OptionScale.o: ./UX/Widgets/OptionScale.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-OptionScale.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-OptionScale.Tpo -c -o ./UX/Widgets/font_manager-OptionScale.o `test -f './UX/Widgets/OptionScale.c' || echo '$(srcdir)/'`./UX/Widgets/OptionScale.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-OptionScale.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-OptionScale.Po
#	$(AM_V_CC)source='./UX/Widgets/OptionScale.c' object='./UX/Widgets/font_manager-OptionScale.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-OptionScale.o `test -f './UX/Widgets/OptionScale.c' || echo '$(srcdir)/'`./UX/Widgets/OptionScale.c

./UX/Widgets/font_manager-OptionScale.obj: ./UX/Widgets/OptionScale.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-OptionScale.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-OptionScale.Tpo -c -o ./UX/Widgets/font_manager-OptionScale.obj `if test -f './UX/Widgets/OptionScale.c'; then $(CYGPATH_W) './UX/Widgets/OptionScale.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/OptionScale.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-OptionScale.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-OptionScale.Po
#	$(AM_V_CC)source='./UX/Widgets/OptionScale.c' object='./UX/Widgets/font_manager-OptionScale.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-OptionScale.obj `if test -f './UX/Widgets/OptionScale.c'; then $(CYGPATH_W) './UX/Widgets/OptionScale.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/OptionScale.c'; fi`

./UX/Widgets/font_manager-ReactiveLabel.o: ./UX/Widgets/ReactiveLabel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-ReactiveLabel.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-ReactiveLabel.Tpo -c -o ./UX/Widgets/font_manager-ReactiveLabel.o `test -f './UX/Widgets/ReactiveLabel.c' || echo '$(srcdir)/'`./UX/Widgets/ReactiveLabel.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-ReactiveLabel.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-ReactiveLabel.Po
#	$(AM_V_CC)source='./UX/Widgets/ReactiveLabel.c' object='./UX/Widgets/font_manager-ReactiveLabel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-ReactiveLabel.o `test -f './UX/Widgets/ReactiveLabel.c' || echo '$(srcdir)/'`./UX/Widgets/ReactiveLabel.c

./UX/Widgets/font_manager-ReactiveLabel.obj: ./UX/Widgets/ReactiveLabel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-ReactiveLabel.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-ReactiveLabel.Tpo -c -o ./UX/Widgets/font_manager-ReactiveLabel.obj `if test -f './UX/Widgets/ReactiveLabel.c'; then $(CYGPATH_W) './UX/Widgets/ReactiveLabel.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/ReactiveLabel.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-ReactiveLabel.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-ReactiveLabel.Po
#	$(AM_V_CC)source='./UX/Widgets/ReactiveLabel.c' object='./UX/Widgets/font_manager-ReactiveLabel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-ReactiveLabel.obj `if test -f './UX/Widgets/ReactiveLabel.c'; then $(CYGPATH_W) './UX/Widgets/ReactiveLabel.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/ReactiveLabel.c'; fi`

./UX/Widgets/font_manager-TextPreview.o: ./UX/Widgets/TextPreview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-TextPreview.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-TextPreview.Tpo -c -o ./UX/Widgets/font_manager-TextPreview.o `test -f './UX/Widgets/TextPreview.c' || echo '$(srcdir)/'`./UX/Widgets/TextPreview.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-TextPreview.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-TextPreview.Po
#	$(AM_V_CC)source='./UX/Widgets/TextPreview.c' object='./UX/Widgets/font_manager-TextPreview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-TextPreview.o `test -f './UX/Widgets/TextPreview.c' || echo '$(srcdir)/'`./UX/Widgets/TextPreview.c

./UX/Widgets/font_manager-TextPreview.obj: ./UX/Widgets/TextPreview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-TextPreview.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-TextPreview.Tpo -c -o ./UX/Widgets/font_manager-TextPreview.obj `if test -f './UX/Widgets/TextPreview.c'; then $(CYGPATH_W) './UX/Widgets/TextPreview.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/TextPreview.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-TextPreview.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-TextPreview.Po
#	$(AM_V_CC)source='./UX/Widgets/TextPreview.c' object='./UX/Widgets/font_manager-TextPreview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-TextPreview.obj `if test -f './UX/Widgets/TextPreview.c'; then $(CYGPATH_W) './UX/Widgets/TextPreview.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/TextPreview.c'; fi`

./UX/Widgets/font_manager-TextViews.o: ./UX/Widgets/TextViews.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-TextViews.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-TextViews.Tpo -c -o ./UX/Widgets/font_manager-TextViews.o `test -f './UX/Widgets/TextViews.c' || echo '$(srcdir)/'`./UX/Widgets/TextViews.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-TextViews.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-TextViews.Po
#	$(AM_V_CC)source='./UX/Widgets/TextViews.c' object='./UX/Widgets/font_manager-TextViews.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-TextViews.o `test -f './UX/Widgets/TextViews.c' || echo '$(srcdir)/'`./UX/Widgets/TextViews.c

./UX/Widgets/font_manager-TextViews.obj: ./UX/Widgets/TextViews.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-TextViews.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-TextViews.Tpo -c -o ./UX/Widgets/font_manager-TextViews.obj `if test -f './UX/Widgets/TextViews.c'; then $(CYGPATH_W) './UX/Widgets/TextViews.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/TextViews.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-TextViews.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-TextViews.Po
#	$(AM_V_CC)source='./UX/Widgets/TextViews.c' object='./UX/Widgets/font_manager-TextViews.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-TextViews.obj `if test -f './UX/Widgets/TextViews.c'; then $(CYGPATH_W) './UX/Widgets/TextViews.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/TextViews.c'; fi`

./UX/Widgets/font_manager-ThinPaned.o: ./UX/Widgets/ThinPaned.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-ThinPaned.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-ThinPaned.Tpo -c -o ./UX/Widgets/font_manager-ThinPaned.o `test -f './UX/Widgets/ThinPaned.c' || echo '$(srcdir)/'`./UX/Widgets/ThinPaned.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-ThinPaned.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-ThinPaned.Po
#	$(AM_V_CC)source='./UX/Widgets/ThinPaned.c' object='./UX/Widgets/font_manager-ThinPaned.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-ThinPaned.o `test -f './UX/Widgets/ThinPaned.c' || echo '$(srcdir)/'`./UX/Widgets/ThinPaned.c

./UX/Widgets/font_manager-ThinPaned.obj: ./UX/Widgets/ThinPaned.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-ThinPaned.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-ThinPaned.Tpo -c -o ./UX/Widgets/font_manager-ThinPaned.obj `if test -f './UX/Widgets/ThinPaned.c'; then $(CYGPATH_W) './UX/Widgets/ThinPaned.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/ThinPaned.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-ThinPaned.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-ThinPaned.Po
#	$(AM_V_CC)source='./UX/Widgets/ThinPaned.c' object='./UX/Widgets/font_manager-ThinPaned.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-ThinPaned.obj `if test -f './UX/Widgets/ThinPaned.c'; then $(CYGPATH_W) './UX/Widgets/ThinPaned.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/ThinPaned.c'; fi`

./UX/Widgets/font_manager-TreeViews.o: ./UX/Widgets/TreeViews.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-TreeViews.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-TreeViews.Tpo -c -o ./UX/Widgets/font_manager-TreeViews.o `test -f './UX/Widgets/TreeViews.c' || echo '$(srcdir)/'`./UX/Widgets/TreeViews.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-TreeViews.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-TreeViews.Po
#	$(AM_V_CC)source='./UX/Widgets/TreeViews.c' object='./UX/Widgets/font_manager-TreeViews.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-TreeViews.o `test -f './UX/Widgets/TreeViews.c' || echo '$(srcdir)/'`./UX/Widgets/TreeViews.c

./UX/Widgets/font_manager-TreeViews.obj: ./UX/Widgets/TreeViews.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-TreeViews.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-TreeViews.Tpo -c -o ./UX/Widgets/font_manager-TreeViews.obj `if test -f './UX/Widgets/TreeViews.c'; then $(CYGPATH_W) './UX/Widgets/TreeViews.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/TreeViews.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-TreeViews.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-TreeViews.Po
#	$(AM_V_CC)source='./UX/Widgets/TreeViews.c' object='./UX/Widgets/font_manager-TreeViews.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-TreeViews.obj `if test -f './UX/Widgets/TreeViews.c'; then $(CYGPATH_W) './UX/Widgets/TreeViews.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/TreeViews.c'; fi`

./UX/Widgets/font_manager-WaterfallPreview.o: ./UX/Widgets/WaterfallPreview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-WaterfallPreview.o -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-WaterfallPreview.Tpo -c -o ./UX/Widgets/font_manager-WaterfallPreview.o `test -f './UX/Widgets/WaterfallPreview.c' || echo '$(srcdir)/'`./UX/Widgets/WaterfallPreview.c
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-WaterfallPreview.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-WaterfallPreview.Po
#	$(AM_V_CC)source='./UX/Widgets/WaterfallPreview.c' object='./UX/Widgets/font_manager-WaterfallPreview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-WaterfallPreview.o `test -f './UX/Widgets/WaterfallPreview.c' || echo '$(srcdir)/'`./UX/Widgets/WaterfallPreview.c

./UX/Widgets/font_manager-WaterfallPreview.obj: ./UX/Widgets/WaterfallPreview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ./UX/Widgets/font_manager-WaterfallPreview.obj -MD -MP -MF ./UX/Widgets/$(DEPDIR)/font_manager-WaterfallPreview.Tpo -c -o ./UX/Widgets/font_manager-WaterfallPreview.obj `if test -f './UX/Widgets/WaterfallPreview.c'; then $(CYGPATH_W) './UX/Widgets/WaterfallPreview.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/WaterfallPreview.c'; fi`
	$(AM_V_at)$(am__mv) ./UX/Widgets/$(DEPDIR)/font_manager-WaterfallPreview.Tpo ./UX/Widgets/$(DEPDIR)/font_manager-WaterfallPreview.Po
#	$(AM_V_CC)source='./UX/Widgets/WaterfallPreview.c' object='./UX/Widgets/font_manager-WaterfallPreview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ./UX/Widgets/font_manager-WaterfallPreview.obj `if test -f './UX/Widgets/WaterfallPreview.c'; then $(CYGPATH_W) './UX/Widgets/WaterfallPreview.c'; else $(CYGPATH_W) '$(srcdir)/./UX/Widgets/WaterfallPreview.c'; fi`

Glue/font_manager-_Glue_.o: Glue/_Glue_.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Glue/font_manager-_Glue_.o -MD -MP -MF Glue/$(DEPDIR)/font_manager-_Glue_.Tpo -c -o Glue/font_manager-_Glue_.o `test -f 'Glue/_Glue_.c' || echo '$(srcdir)/'`Glue/_Glue_.c
	$(AM_V_at)$(am__mv) Glue/$(DEPDIR)/font_manager-_Glue_.Tpo Glue/$(DEPDIR)/font_manager-_Glue_.Po
#	$(AM_V_CC)source='Glue/_Glue_.c' object='Glue/font_manager-_Glue_.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Glue/font_manager-_Glue_.o `test -f 'Glue/_Glue_.c' || echo '$(srcdir)/'`Glue/_Glue_.c

Glue/font_manager-_Glue_.obj: Glue/_Glue_.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Glue/font_manager-_Glue_.obj -MD -MP -MF Glue/$(DEPDIR)/font_manager-_Glue_.Tpo -c -o Glue/font_manager-_Glue_.obj `if test -f 'Glue/_Glue_.c'; then $(CYGPATH_W) 'Glue/_Glue_.c'; else $(CYGPATH_W) '$(srcdir)/Glue/_Glue_.c'; fi`
	$(AM_V_at)$(am__mv) Glue/$(DEPDIR)/font_manager-_Glue_.Tpo Glue/$(DEPDIR)/font_manager-_Glue_.Po
#	$(AM_V_CC)source='Glue/_Glue_.c' object='Glue/font_manager-_Glue_.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Glue/font_manager-_Glue_.obj `if test -f 'Glue/_Glue_.c'; then $(CYGPATH_W) 'Glue/_Glue_.c'; else $(CYGPATH_W) '$(srcdir)/Glue/_Glue_.c'; fi`

font_manager-FontManagerGResource.o: FontManagerGResource.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT font_manager-FontManagerGResource.o -MD -MP -MF $(DEPDIR)/font_manager-FontManagerGResource.Tpo -c -o font_manager-FontManagerGResource.o `test -f 'FontManagerGResource.c' || echo '$(srcdir)/'`FontManagerGResource.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/font_manager-FontManagerGResource.Tpo $(DEPDIR)/font_manager-FontManagerGResource.Po
#	$(AM_V_CC)source='FontManagerGResource.c' object='font_manager-FontManagerGResource.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o font_manager-FontManagerGResource.o `test -f 'FontManagerGResource.c' || echo '$(srcdir)/'`FontManagerGResource.c

font_manager-FontManagerGResource.obj: FontManagerGResource.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT font_manager-FontManagerGResource.obj -MD -MP -MF $(DEPDIR)/font_manager-FontManagerGResource.Tpo -c -o font_manager-FontManagerGResource.obj `if test -f 'FontManagerGResource.c'; then $(CYGPATH_W) 'FontManagerGResource.c'; else $(CYGPATH_W) '$(srcdir)/FontManagerGResource.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/font_manager-FontManagerGResource.Tpo $(DEPDIR)/font_manager-FontManagerGResource.Po
#	$(AM_V_CC)source='FontManagerGResource.c' object='font_manager-FontManagerGResource.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(font_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o font_manager-FontManagerGResource.obj `if test -f 'FontManagerGResource.c'; then $(CYGPATH_W) 'FontManagerGResource.c'; else $(CYGPATH_W) '$(srcdir)/FontManagerGResource.c'; fi`
$(srcdir)/./Application.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Common/About.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Common/ArchiveManager.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Common/Collections.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Common/Constants.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Common/Database.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Common/FontInfo.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Common/Library.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Common/Logger.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Common/Main.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Common/Utils.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Filters/Category.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Filters/Collection.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Filters/Disabled.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Filters/Filter.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Filters/SearchResult.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Filters/Unsorted.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/Accept.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/DefaultProperties.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/Directories.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/DisplayProperties.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/Enums.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/Families.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/Family.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/FontConfig.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/FontProperties.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/FontSource.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/Font.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/Properties.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/Reject.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/Selections.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/Sources.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./FontConfig/XmlWriter.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Glue/Glue.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Json/Cacheable.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Json/JsonWriter.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Models/CategoryModel.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Models/CollectionModel.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Models/FontModel.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./Models/UserFontModel.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/CharacterMap/CharacterDetails.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/CharacterMap/CharacterMapPane.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/CharacterMap/CharacterMapSideBar.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/CharacterMap/CharacterMap.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/CharacterMap/CharacterTable.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Controls/BaseControls.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Controls/CollectionControls.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Controls/CompareControls.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Controls/FontListControls.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Controls/PreviewControls.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Controls/TitleBar.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Dialogs/FileSelector.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Dialogs/Migration.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Dialogs/NotImplemented.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/FontConfig/DisplayPropertiesPane.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/FontConfig/FontPropertiesPane.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/FontConfig/PropertiesEditor.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/FontConfig/SubpixelGeometry.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/MainWindow.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Sidebar/MainSideBar.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Sidebar/SideBar.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/State.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Trees/CategoryTree.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Trees/CollectionTree.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Trees/FontListTree.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Trees/UserFontTree.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Trees/UserSourceList.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Utils/Color.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Utils/Utils.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Viewer.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Views/Browse.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Views/Compare.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Views/FontPreview.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Views/Metadata.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/ActivePreview.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/AdjustablePreview.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/CellRendererPill.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/FontScale.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/LabeledSpinButton.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/LabeledSwitch.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/OptionScale.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/ReactiveLabel.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/TextPreview.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/TextViews.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/ThinPaned.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/TreeViews.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/./UX/Widgets/WaterfallPreview.c: $(srcdir)/font_manager_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/font_manager_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/font_manager_vala.stamp; \
	fi
$(srcdir)/font_manager_vala.stamp: ./Application.vala ./Common/About.vala ./Common/ArchiveManager.vala ./Common/Collections.vala ./Common/Constants.vala ./Common/Database.vala ./Common/FontInfo.vala ./Common/Library.vala ./Common/Logger.vala ./Common/Main.vala ./Common/Utils.vala ./Filters/Category.vala ./Filters/Collection.vala ./Filters/Disabled.vala ./Filters/Filter.vala ./Filters/SearchResult.vala ./Filters/Unsorted.vala ./FontConfig/Accept.vala ./FontConfig/DefaultProperties.vala ./FontConfig/Directories.vala ./FontConfig/DisplayProperties.vala ./FontConfig/Enums.vala ./FontConfig/Families.vala ./FontConfig/Family.vala ./FontConfig/FontConfig.vala ./FontConfig/FontProperties.vala ./FontConfig/FontSource.vala ./FontConfig/Font.vala ./FontConfig/Properties.vala ./FontConfig/Reject.vala ./FontConfig/Selections.vala ./FontConfig/Sources.vala ./FontConfig/XmlWriter.vala ./Glue/Glue.vala ./Json/Cacheable.vala ./Json/JsonWriter.vala ./Models/CategoryModel.vala ./Models/CollectionModel.vala ./Models/FontModel.vala ./Models/UserFontModel.vala ./UX/CharacterMap/CharacterDetails.vala ./UX/CharacterMap/CharacterMapPane.vala ./UX/CharacterMap/CharacterMapSideBar.vala ./UX/CharacterMap/CharacterMap.vala ./UX/CharacterMap/CharacterTable.vala ./UX/Controls/BaseControls.vala ./UX/Controls/CollectionControls.vala ./UX/Controls/CompareControls.vala ./UX/Controls/FontListControls.vala ./UX/Controls/PreviewControls.vala ./UX/Controls/TitleBar.vala ./UX/Dialogs/FileSelector.vala ./UX/Dialogs/Migration.vala ./UX/Dialogs/NotImplemented.vala ./UX/FontConfig/DisplayPropertiesPane.vala ./UX/FontConfig/FontPropertiesPane.vala ./UX/FontConfig/PropertiesEditor.vala ./UX/FontConfig/SubpixelGeometry.vala ./UX/MainWindow.vala ./UX/Sidebar/MainSideBar.vala ./UX/Sidebar/SideBar.vala ./UX/State.vala ./UX/Trees/CategoryTree.vala ./UX/Trees/CollectionTree.vala ./UX/Trees/FontListTree.vala ./UX/Trees/UserFontTree.vala ./UX/Trees/UserSourceList.vala ./UX/Utils/Color.vala ./UX/Utils/Utils.vala ./UX/Viewer.vala ./UX/Views/Browse.vala ./UX/Views/Compare.vala ./UX/Views/FontPreview.vala ./UX/Views/Metadata.vala ./UX/Widgets/ActivePreview.vala ./UX/Widgets/AdjustablePreview.vala ./UX/Widgets/CellRendererPill.vala ./UX/Widgets/FontScale.vala ./UX/Widgets/LabeledSpinButton.vala ./UX/Widgets/LabeledSwitch.vala ./UX/Widgets/OptionScale.vala ./UX/Widgets/ReactiveLabel.vala ./UX/Widgets/TextPreview.vala ./UX/Widgets/TextViews.vala ./UX/Widgets/ThinPaned.vala ./UX/Widgets/TreeViews.vala ./UX/Widgets/WaterfallPreview.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C ./Application.vala ./Common/About.vala ./Common/ArchiveManager.vala ./Common/Collections.vala ./Common/Constants.vala ./Common/Database.vala ./Common/FontInfo.vala ./Common/Library.vala ./Common/Logger.vala ./Common/Main.vala ./Common/Utils.vala ./Filters/Category.vala ./Filters/Collection.vala ./Filters/Disabled.vala ./Filters/Filter.vala ./Filters/SearchResult.vala ./Filters/Unsorted.vala ./FontConfig/Accept.vala ./FontConfig/DefaultProperties.vala ./FontConfig/Directories.vala ./FontConfig/DisplayProperties.vala ./FontConfig/Enums.vala ./FontConfig/Families.vala ./FontConfig/Family.vala ./FontConfig/FontConfig.vala ./FontConfig/FontProperties.vala ./FontConfig/FontSource.vala ./FontConfig/Font.vala ./FontConfig/Properties.vala ./FontConfig/Reject.vala ./FontConfig/Selections.vala ./FontConfig/Sources.vala ./FontConfig/XmlWriter.vala ./Glue/Glue.vala ./Json/Cacheable.vala ./Json/JsonWriter.vala ./Models/CategoryModel.vala ./Models/CollectionModel.vala ./Models/FontModel.vala ./Models/UserFontModel.vala ./UX/CharacterMap/CharacterDetails.vala ./UX/CharacterMap/CharacterMapPane.vala ./UX/CharacterMap/CharacterMapSideBar.vala ./UX/CharacterMap/CharacterMap.vala ./UX/CharacterMap/CharacterTable.vala ./UX/Controls/BaseControls.vala ./UX/Controls/CollectionControls.vala ./UX/Controls/CompareControls.vala ./UX/Controls/FontListControls.vala ./UX/Controls/PreviewControls.vala ./UX/Controls/TitleBar.vala ./UX/Dialogs/FileSelector.vala ./UX/Dialogs/Migration.vala ./UX/Dialogs/NotImplemented.vala ./UX/FontConfig/DisplayPropertiesPane.vala ./UX/FontConfig/FontPropertiesPane.vala ./UX/FontConfig/PropertiesEditor.vala ./UX/FontConfig/SubpixelGeometry.vala ./UX/MainWindow.vala ./UX/Sidebar/MainSideBar.vala ./UX/Sidebar/SideBar.vala ./UX/State.vala ./UX/Trees/CategoryTree.vala ./UX/Trees/CollectionTree.vala ./UX/Trees/FontListTree.vala ./UX/Trees/UserFontTree.vala ./UX/Trees/UserSourceList.vala ./UX/Utils/Color.vala ./UX/Utils/Utils.vala ./UX/Viewer.vala ./UX/Views/Browse.vala ./UX/Views/Compare.vala ./UX/Views/FontPreview.vala ./UX/Views/Metadata.vala ./UX/Widgets/ActivePreview.vala ./UX/Widgets/AdjustablePreview.vala ./UX/Widgets/CellRendererPill.vala ./UX/Widgets/FontScale.vala ./UX/Widgets/LabeledSpinButton.vala ./UX/Widgets/LabeledSwitch.vala ./UX/Widgets/OptionScale.vala ./UX/Widgets/ReactiveLabel.vala ./UX/Widgets/TextPreview.vala ./UX/Widgets/TextViews.vala ./UX/Widgets/ThinPaned.vala ./UX/Widgets/TreeViews.vala ./UX/Widgets/WaterfallPreview.vala
	$(AM_V_at)mv -f $@-t $@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ./$(am__dirstamp)
	-rm -f Common/$(DEPDIR)/$(am__dirstamp)
	-rm -f Common/$(am__dirstamp)
	-rm -f Filters/$(DEPDIR)/$(am__dirstamp)
	-rm -f Filters/$(am__dirstamp)
	-rm -f FontConfig/$(DEPDIR)/$(am__dirstamp)
	-rm -f FontConfig/$(am__dirstamp)
	-rm -f Glue/$(DEPDIR)/$(am__dirstamp)
	-rm -f Glue/$(am__dirstamp)
	-rm -f Json/$(DEPDIR)/$(am__dirstamp)
	-rm -f Json/$(am__dirstamp)
	-rm -f Models/$(DEPDIR)/$(am__dirstamp)
	-rm -f Models/$(am__dirstamp)
	-rm -f UX/$(DEPDIR)/$(am__dirstamp)
	-rm -f UX/$(am__dirstamp)
	-rm -f UX/CharacterMap/$(DEPDIR)/$(am__dirstamp)
	-rm -f UX/CharacterMap/$(am__dirstamp)
	-rm -f UX/Controls/$(DEPDIR)/$(am__dirstamp)
	-rm -f UX/Controls/$(am__dirstamp)
	-rm -f UX/Dialogs/$(DEPDIR)/$(am__dirstamp)
	-rm -f UX/Dialogs/$(am__dirstamp)
	-rm -f UX/FontConfig/$(DEPDIR)/$(am__dirstamp)
	-rm -f UX/FontConfig/$(am__dirstamp)
	-rm -f UX/Sidebar/$(DEPDIR)/$(am__dirstamp)
	-rm -f UX/Sidebar/$(am__dirstamp)
	-rm -f UX/Trees/$(DEPDIR)/$(am__dirstamp)
	-rm -f UX/Trees/$(am__dirstamp)
	-rm -f UX/Utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f UX/Utils/$(am__dirstamp)
	-rm -f UX/Views/$(DEPDIR)/$(am__dirstamp)
	-rm -f UX/Views/$(am__dirstamp)
	-rm -f UX/Widgets/$(DEPDIR)/$(am__dirstamp)
	-rm -f UX/Widgets/$(am__dirstamp)
	-test -z "$(DEPDIR)/$(am__dirstamp)" || rm -f $(DEPDIR)/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f $(srcdir)/./Application.c
	-rm -f $(srcdir)/./Common/About.c
	-rm -f $(srcdir)/./Common/ArchiveManager.c
	-rm -f $(srcdir)/./Common/Collections.c
	-rm -f $(srcdir)/./Common/Constants.c
	-rm -f $(srcdir)/./Common/Database.c
	-rm -f $(srcdir)/./Common/FontInfo.c
	-rm -f $(srcdir)/./Common/Library.c
	-rm -f $(srcdir)/./Common/Logger.c
	-rm -f $(srcdir)/./Common/Main.c
	-rm -f $(srcdir)/./Common/Utils.c
	-rm -f $(srcdir)/./Filters/Category.c
	-rm -f $(srcdir)/./Filters/Collection.c
	-rm -f $(srcdir)/./Filters/Disabled.c
	-rm -f $(srcdir)/./Filters/Filter.c
	-rm -f $(srcdir)/./Filters/SearchResult.c
	-rm -f $(srcdir)/./Filters/Unsorted.c
	-rm -f $(srcdir)/./FontConfig/Accept.c
	-rm -f $(srcdir)/./FontConfig/DefaultProperties.c
	-rm -f $(srcdir)/./FontConfig/Directories.c
	-rm -f $(srcdir)/./FontConfig/DisplayProperties.c
	-rm -f $(srcdir)/./FontConfig/Enums.c
	-rm -f $(srcdir)/./FontConfig/Families.c
	-rm -f $(srcdir)/./FontConfig/Family.c
	-rm -f $(srcdir)/./FontConfig/Font.c
	-rm -f $(srcdir)/./FontConfig/FontConfig.c
	-rm -f $(srcdir)/./FontConfig/FontProperties.c
	-rm -f $(srcdir)/./FontConfig/FontSource.c
	-rm -f $(srcdir)/./FontConfig/Properties.c
	-rm -f $(srcdir)/./FontConfig/Reject.c
	-rm -f $(srcdir)/./FontConfig/Selections.c
	-rm -f $(srcdir)/./FontConfig/Sources.c
	-rm -f $(srcdir)/./FontConfig/XmlWriter.c
	-rm -f $(srcdir)/./Glue/Glue.c
	-rm -f $(srcdir)/./Json/Cacheable.c
	-rm -f $(srcdir)/./Json/JsonWriter.c
	-rm -f $(srcdir)/./Models/CategoryModel.c
	-rm -f $(srcdir)/./Models/CollectionModel.c
	-rm -f $(srcdir)/./Models/FontModel.c
	-rm -f $(srcdir)/./Models/UserFontModel.c
	-rm -f $(srcdir)/./UX/CharacterMap/CharacterDetails.c
	-rm -f $(srcdir)/./UX/CharacterMap/CharacterMap.c
	-rm -f $(srcdir)/./UX/CharacterMap/CharacterMapPane.c
	-rm -f $(srcdir)/./UX/CharacterMap/CharacterMapSideBar.c
	-rm -f $(srcdir)/./UX/CharacterMap/CharacterTable.c
	-rm -f $(srcdir)/./UX/Controls/BaseControls.c
	-rm -f $(srcdir)/./UX/Controls/CollectionControls.c
	-rm -f $(srcdir)/./UX/Controls/CompareControls.c
	-rm -f $(srcdir)/./UX/Controls/FontListControls.c
	-rm -f $(srcdir)/./UX/Controls/PreviewControls.c
	-rm -f $(srcdir)/./UX/Controls/TitleBar.c
	-rm -f $(srcdir)/./UX/Dialogs/FileSelector.c
	-rm -f $(srcdir)/./UX/Dialogs/Migration.c
	-rm -f $(srcdir)/./UX/Dialogs/NotImplemented.c
	-rm -f $(srcdir)/./UX/FontConfig/DisplayPropertiesPane.c
	-rm -f $(srcdir)/./UX/FontConfig/FontPropertiesPane.c
	-rm -f $(srcdir)/./UX/FontConfig/PropertiesEditor.c
	-rm -f $(srcdir)/./UX/FontConfig/SubpixelGeometry.c
	-rm -f $(srcdir)/./UX/MainWindow.c
	-rm -f $(srcdir)/./UX/Sidebar/MainSideBar.c
	-rm -f $(srcdir)/./UX/Sidebar/SideBar.c
	-rm -f $(srcdir)/./UX/State.c
	-rm -f $(srcdir)/./UX/Trees/CategoryTree.c
	-rm -f $(srcdir)/./UX/Trees/CollectionTree.c
	-rm -f $(srcdir)/./UX/Trees/FontListTree.c
	-rm -f $(srcdir)/./UX/Trees/UserFontTree.c
	-rm -f $(srcdir)/./UX/Trees/UserSourceList.c
	-rm -f $(srcdir)/./UX/Utils/Color.c
	-rm -f $(srcdir)/./UX/Utils/Utils.c
	-rm -f $(srcdir)/./UX/Viewer.c
	-rm -f $(srcdir)/./UX/Views/Browse.c
	-rm -f $(srcdir)/./UX/Views/Compare.c
	-rm -f $(srcdir)/./UX/Views/FontPreview.c
	-rm -f $(srcdir)/./UX/Views/Metadata.c
	-rm -f $(srcdir)/./UX/Widgets/ActivePreview.c
	-rm -f $(srcdir)/./UX/Widgets/AdjustablePreview.c
	-rm -f $(srcdir)/./UX/Widgets/CellRendererPill.c
	-rm -f $(srcdir)/./UX/Widgets/FontScale.c
	-rm -f $(srcdir)/./UX/Widgets/LabeledSpinButton.c
	-rm -f $(srcdir)/./UX/Widgets/LabeledSwitch.c
	-rm -f $(srcdir)/./UX/Widgets/OptionScale.c
	-rm -f $(srcdir)/./UX/Widgets/ReactiveLabel.c
	-rm -f $(srcdir)/./UX/Widgets/TextPreview.c
	-rm -f $(srcdir)/./UX/Widgets/TextViews.c
	-rm -f $(srcdir)/./UX/Widgets/ThinPaned.c
	-rm -f $(srcdir)/./UX/Widgets/TreeViews.c
	-rm -f $(srcdir)/./UX/Widgets/WaterfallPreview.c
	-rm -f $(srcdir)/font_manager_vala.stamp
	-rm -f ./Application.c
	-rm -f ./Common/About.c
	-rm -f ./Common/ArchiveManager.c
	-rm -f ./Common/Collections.c
	-rm -f ./Common/Constants.c
	-rm -f ./Common/Database.c
	-rm -f ./Common/FontInfo.c
	-rm -f ./Common/Library.c
	-rm -f ./Common/Logger.c
	-rm -f ./Common/Main.c
	-rm -f ./Common/Utils.c
	-rm -f ./Filters/Category.c
	-rm -f ./Filters/Collection.c
	-rm -f ./Filters/Disabled.c
	-rm -f ./Filters/Filter.c
	-rm -f ./Filters/SearchResult.c
	-rm -f ./Filters/Unsorted.c
	-rm -f ./FontConfig/Accept.c
	-rm -f ./FontConfig/DefaultProperties.c
	-rm -f ./FontConfig/Directories.c
	-rm -f ./FontConfig/DisplayProperties.c
	-rm -f ./FontConfig/Enums.c
	-rm -f ./FontConfig/Families.c
	-rm -f ./FontConfig/Family.c
	-rm -f ./FontConfig/Font.c
	-rm -f ./FontConfig/FontConfig.c
	-rm -f ./FontConfig/FontProperties.c
	-rm -f ./FontConfig/FontSource.c
	-rm -f ./FontConfig/Properties.c
	-rm -f ./FontConfig/Reject.c
	-rm -f ./FontConfig/Selections.c
	-rm -f ./FontConfig/Sources.c
	-rm -f ./FontConfig/XmlWriter.c
	-rm -f ./Glue/Glue.c
	-rm -f ./Json/Cacheable.c
	-rm -f ./Json/JsonWriter.c
	-rm -f ./Models/CategoryModel.c
	-rm -f ./Models/CollectionModel.c
	-rm -f ./Models/FontModel.c
	-rm -f ./Models/UserFontModel.c
	-rm -f ./UX/CharacterMap/CharacterDetails.c
	-rm -f ./UX/CharacterMap/CharacterMap.c
	-rm -f ./UX/CharacterMap/CharacterMapPane.c
	-rm -f ./UX/CharacterMap/CharacterMapSideBar.c
	-rm -f ./UX/CharacterMap/CharacterTable.c
	-rm -f ./UX/Controls/BaseControls.c
	-rm -f ./UX/Controls/CollectionControls.c
	-rm -f ./UX/Controls/CompareControls.c
	-rm -f ./UX/Controls/FontListControls.c
	-rm -f ./UX/Controls/PreviewControls.c
	-rm -f ./UX/Controls/TitleBar.c
	-rm -f ./UX/Dialogs/FileSelector.c
	-rm -f ./UX/Dialogs/Migration.c
	-rm -f ./UX/Dialogs/NotImplemented.c
	-rm -f ./UX/FontConfig/DisplayPropertiesPane.c
	-rm -f ./UX/FontConfig/FontPropertiesPane.c
	-rm -f ./UX/FontConfig/PropertiesEditor.c
	-rm -f ./UX/FontConfig/SubpixelGeometry.c
	-rm -f ./UX/MainWindow.c
	-rm -f ./UX/Sidebar/MainSideBar.c
	-rm -f ./UX/Sidebar/SideBar.c
	-rm -f ./UX/State.c
	-rm -f ./UX/Trees/CategoryTree.c
	-rm -f ./UX/Trees/CollectionTree.c
	-rm -f ./UX/Trees/FontListTree.c
	-rm -f ./UX/Trees/UserFontTree.c
	-rm -f ./UX/Trees/UserSourceList.c
	-rm -f ./UX/Utils/Color.c
	-rm -f ./UX/Utils/Utils.c
	-rm -f ./UX/Viewer.c
	-rm -f ./UX/Views/Browse.c
	-rm -f ./UX/Views/Compare.c
	-rm -f ./UX/Views/FontPreview.c
	-rm -f ./UX/Views/Metadata.c
	-rm -f ./UX/Widgets/ActivePreview.c
	-rm -f ./UX/Widgets/AdjustablePreview.c
	-rm -f ./UX/Widgets/CellRendererPill.c
	-rm -f ./UX/Widgets/FontScale.c
	-rm -f ./UX/Widgets/LabeledSpinButton.c
	-rm -f ./UX/Widgets/LabeledSwitch.c
	-rm -f ./UX/Widgets/OptionScale.c
	-rm -f ./UX/Widgets/ReactiveLabel.c
	-rm -f ./UX/Widgets/TextPreview.c
	-rm -f ./UX/Widgets/TextViews.c
	-rm -f ./UX/Widgets/ThinPaned.c
	-rm -f ./UX/Widgets/TreeViews.c
	-rm -f ./UX/Widgets/WaterfallPreview.c
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) ./Common/$(DEPDIR) ./Filters/$(DEPDIR) ./FontConfig/$(DEPDIR) ./Glue/$(DEPDIR) ./Json/$(DEPDIR) ./Models/$(DEPDIR) ./UX/$(DEPDIR) ./UX/CharacterMap/$(DEPDIR) ./UX/Controls/$(DEPDIR) ./UX/Dialogs/$(DEPDIR) ./UX/FontConfig/$(DEPDIR) ./UX/Sidebar/$(DEPDIR) ./UX/Trees/$(DEPDIR) ./UX/Utils/$(DEPDIR) ./UX/Views/$(DEPDIR) ./UX/Widgets/$(DEPDIR) Glue/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) ./Common/$(DEPDIR) ./Filters/$(DEPDIR) ./FontConfig/$(DEPDIR) ./Glue/$(DEPDIR) ./Json/$(DEPDIR) ./Models/$(DEPDIR) ./UX/$(DEPDIR) ./UX/CharacterMap/$(DEPDIR) ./UX/Controls/$(DEPDIR) ./UX/Dialogs/$(DEPDIR) ./UX/FontConfig/$(DEPDIR) ./UX/Sidebar/$(DEPDIR) ./UX/Trees/$(DEPDIR) ./UX/Utils/$(DEPDIR) ./UX/Views/$(DEPDIR) ./UX/Widgets/$(DEPDIR) Glue/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool clean-local \
	cscopelist-am ctags ctags-am dist-hook distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


FontManagerGResource.c :
	$(GLIB_COMPILE_RESOURCES) \
	--sourcedir=$(resource_dir) \
	--generate-source \
	--target=$@ \
	$(resource_dir)/FontManagerGResource.xml

dist-hook:
	cd $(distdir) && \
	rm -f $(font_manager_VALASOURCES:.vala=.c) \
	$(BUILT_SOURCES) \
	font_manager_vala.stamp

clean-local:
	rm -f $(font_manager_VALASOURCES:.vala=.c) \
	$(BUILT_SOURCES) \
	font_manager_vala.stamp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
